{
	"variables": [],
	"info": {
		"name": "vRealize Automation 7.2",
		"_postman_id": "a552f8e1-2ae8-b26d-99e2-bbe30dff08a2",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Advanced Designer Service",
			"description": "",
			"item": [
				{
					"name": "Gets a root category",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/categories",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets a root category for the current tenant"
					},
					"response": []
				},
				{
					"name": "Gets a category by primary key",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/categories/:categoryId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"categories",
								":categoryId"
							],
							"variable": [
								{
									"value": "{{categoryId}}",
									"id": "categoryId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets a category by primary key"
					},
					"response": []
				},
				{
					"name": "Allocate resources prior XaaS Blueprint provisioning",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/composition/componentallocator/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Composition representation of XaaS Blueprint allocate request"
						},
						"description": "Allocate required resources specified in allocation request. This is an asynchronous operation, provider should immediately return a request binding and report completion (success or failure) using AllocateRequestCompletion."
					},
					"response": []
				},
				{
					"name": "Deallocate resources that were earlier allocated",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/composition/componentdeallocator",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Composition representation of XaaS Blueprint request"
						},
						"description": "This is rolling back an earlier allocation and used to gracefully fail the request or backtrack to try a different allocation path."
					},
					"response": []
				},
				{
					"name": "List XaaS Blueprint offers",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/composition/matchingoffers?granular={{granular}}",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Composition representation of a XaaS Blueprint request"
						},
						"description": "This method is used by Composition Service to fetch list of offers from a component's provider. This is the first step in the XaaS Blueprint allocation."
					},
					"response": []
				},
				{
					"name": "Submit XaaS Blueprint provisioning request",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/composition/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Composition representation of XaaS Blueprint request"
						},
						"description": "Provisions XaaS Blueprint component."
					},
					"response": []
				},
				{
					"name": "Imports an object within vRA",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/content",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "instance of ImportRequest wrapping the payload/object that has to be saved in ASD"
						},
						"description": "Creates an object within vRA. This is a callback endpoint for saving objects when packages are imported in CMS."
					},
					"response": []
				},
				{
					"name": "Exports an asd-bundle from vRA. Handles export callback for test purposes",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/content/xaasBundleType/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"content",
								"xaasBundleType",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Exports an asd-bundle from vRA. Handles export callback for test purposes"
					},
					"response": []
				},
				{
					"name": "Exports an object from vRA",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/content/:classId/:id?secureValueFormat={{secureValueFormat}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"content",
								":classId",
								":id"
							],
							"query": [
								{
									"key": "secureValueFormat",
									"value": "{{secureValueFormat}}"
								}
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets an object from vRA for the purpose of export. This is a callback endpoint for exporting objects when packages are exported centrally from CMS."
					},
					"response": []
				},
				{
					"name": "Gets all endpoint configuration objects",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/endpoints?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A base URI used for generating the navigation links in page response"
						},
						"description": "Gets all endpoint configuration objects matching the filtering criteria of PageAndSortRequest"
					},
					"response": []
				},
				{
					"name": "Creates an endpoint configuration object",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/endpoints",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The endpoint configuration to save"
						},
						"description": "Creates an endpoint configuration object"
					},
					"response": []
				},
				{
					"name": "Retrieve an editable form for configuring endpoint for the CREATE operation",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/endpoints/create/:namespace",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"endpoints",
								"create",
								":namespace"
							],
							"variable": [
								{
									"value": "{{namespace}}",
									"id": "namespace"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an editable form for configuring endpoint for the CREATE operation"
					},
					"response": []
				},
				{
					"name": "Retrieves form metadata for endpoint and plugin",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/endpoints/create/:namespace/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"endpoints",
								"create",
								":namespace",
								"update"
							],
							"variable": [
								{
									"value": "{{namespace}}",
									"id": "namespace"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Specifies information required to complete the request"
						},
						"description": "Retrieves form metadata for endpoint and plugin"
					},
					"response": []
				},
				{
					"name": "Gets plugin metadata for all plugins",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/endpoints/create/:namespace/:elementId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"endpoints",
								"create",
								":namespace",
								":elementId",
								"values"
							],
							"variable": [
								{
									"value": "{{namespace}}",
									"id": "namespace"
								},
								{
									"value": "{{elementId}}",
									"id": "elementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets plugin metadata for all plugins"
					},
					"response": []
				},
				{
					"name": "Gets plugin metadata for all plugins",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/endpoints/types/:operationType",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"endpoints",
								"types",
								":operationType"
							],
							"variable": [
								{
									"value": "{{operationType}}",
									"id": "operationType"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets plugin metadata for all plugins"
					},
					"response": []
				},
				{
					"name": "Retrieve an editable form for configuring endpoint for the UPDATE operation",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/endpoints/update/:endpointId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"endpoints",
								"update",
								":endpointId"
							],
							"variable": [
								{
									"value": "{{endpointId}}",
									"id": "endpointId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an editable form for configuring endpoint for the UPDATE operation"
					},
					"response": []
				},
				{
					"name": "Retrieves update form metadata for endpoint and plugin",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/endpoints/update/:endpointId/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"endpoints",
								"update",
								":endpointId",
								"update"
							],
							"variable": [
								{
									"value": "{{endpointId}}",
									"id": "endpointId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Request to retrieve updated state of a set of layout dynamic elements"
						},
						"description": "Retrieves update form metadata for endpoint and plugin"
					},
					"response": []
				},
				{
					"name": "Retrieves form values for endpoint and plugin",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/endpoints/update/:endpointId/:elementId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"endpoints",
								"update",
								":endpointId",
								":elementId",
								"values"
							],
							"variable": [
								{
									"value": "{{endpointId}}",
									"id": "endpointId"
								},
								{
									"value": "{{elementId}}",
									"id": "elementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Specifies information required to complete the request"
						},
						"description": "Retrieves form values for endpoint and plugin"
					},
					"response": []
				},
				{
					"name": "Gets an endpoint configuration object",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/endpoints/:endpointId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"endpoints",
								":endpointId"
							],
							"variable": [
								{
									"value": "{{endpointId}}",
									"id": "endpointId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets an endpoint configuration object by primary key"
					},
					"response": []
				},
				{
					"name": "Updates an endpoint configuration object",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/endpoints/:endpointId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"endpoints",
								":endpointId"
							],
							"variable": [
								{
									"value": "{{endpointId}}",
									"id": "endpointId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The endpoint configuration to update"
						},
						"description": "Updates an endpoint configuration object"
					},
					"response": []
				},
				{
					"name": "Deletes an endpoint configuration object",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/endpoints/:endpointId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"endpoints",
								":endpointId"
							],
							"variable": [
								{
									"value": "{{endpointId}}",
									"id": "endpointId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes an endpoint configuration object by primary key"
					},
					"response": []
				},
				{
					"name": "Gets workflow subscriptions matching the filtering criteria",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/event-broker/subscriptions?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A base URI used for generating the navigation links in page response"
						},
						"description": "Gets workflow subscriptions matching the filtering criteria"
					},
					"response": []
				},
				{
					"name": "Creates a workflow subscription",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/event-broker/subscriptions",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The workflow subscription to create"
						},
						"description": "Creates a workflow subscription"
					},
					"response": []
				},
				{
					"name": "Gets workflow subscription by id",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/event-broker/subscriptions/:subscriptionId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"event-broker",
								"subscriptions",
								":subscriptionId"
							],
							"variable": [
								{
									"value": "{{subscriptionId}}",
									"id": "subscriptionId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets workflow subscription by id"
					},
					"response": []
				},
				{
					"name": "Updates workflow subscription",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/event-broker/subscriptions/:subscriptionId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"event-broker",
								"subscriptions",
								":subscriptionId"
							],
							"variable": [
								{
									"value": "{{subscriptionId}}",
									"id": "subscriptionId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The new state of the workflow subscription"
						},
						"description": "Updates workflow subscription"
					},
					"response": []
				},
				{
					"name": "Deletes a workflow subscription",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/event-broker/subscriptions/:subscriptionId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"event-broker",
								"subscriptions",
								":subscriptionId"
							],
							"variable": [
								{
									"value": "{{subscriptionId}}",
									"id": "subscriptionId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a workflow subscription by its primary key"
					},
					"response": []
				},
				{
					"name": "Gets all forms matching the filtering criteria",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/forms?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A base URI used for generating the navigation links in page response"
						},
						"description": "Retrieves all forms matching the filtering criteria of PageAndSortRequest"
					},
					"response": []
				},
				{
					"name": "Creates a generic form",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/forms",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The form to save"
						},
						"description": "Creates a generic form"
					},
					"response": []
				},
				{
					"name": "Get layout scenarios",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/forms/scenarios?typeClass={{typeClass}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a list with a valid layout scenarios for a given data type"
					},
					"response": []
				},
				{
					"name": "Get form",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/forms/:formId/:bindingId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"forms",
								":formId",
								":bindingId"
							],
							"variable": [
								{
									"value": "{{formId}}",
									"id": "formId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an editable form for submitting a request for the specified blueprint catalog item."
					},
					"response": []
				},
				{
					"name": "Get form batch update",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/forms/:formId/:bindingId/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"forms",
								":formId",
								":bindingId",
								"update"
							],
							"variable": [
								{
									"value": "{{formId}}",
									"id": "formId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "changes to the form elements"
						},
						"description": "Retrieves the update to the form in response to change in one of the form's field"
					},
					"response": []
				},
				{
					"name": "Get form element values",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/forms/:formId/:bindingId/:elementId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"forms",
								":formId",
								":bindingId",
								":elementId",
								"values"
							],
							"variable": [
								{
									"value": "{{formId}}",
									"id": "formId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								},
								{
									"value": "{{elementId}}",
									"id": "elementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Specifies information required to complete the request"
						},
						"description": "Retrieves a paged list of permissible values that can be assigned to a specific field"
					},
					"response": []
				},
				{
					"name": "Gets a form",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/forms/:genericFormId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"forms",
								":genericFormId"
							],
							"variable": [
								{
									"value": "{{genericFormId}}",
									"id": "genericFormId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves an existing generic form"
					},
					"response": []
				},
				{
					"name": "Updates a form",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/forms/:genericFormId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"forms",
								":genericFormId"
							],
							"variable": [
								{
									"value": "{{genericFormId}}",
									"id": "genericFormId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The form entity to use for the update operation"
						},
						"description": "Updates an existing generic form"
					},
					"response": []
				},
				{
					"name": "Deletes a form",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/forms/:genericFormId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"forms",
								":genericFormId"
							],
							"variable": [
								{
									"value": "{{genericFormId}}",
									"id": "genericFormId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes an existing generic form"
					},
					"response": []
				},
				{
					"name": "Gets all plugin names",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/inventory/plugins",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets all plugin names"
					},
					"response": []
				},
				{
					"name": "Gets the inventory type schema",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/inventory/plugins/:pluginName/:pluginType/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"inventory",
								"plugins",
								":pluginName",
								":pluginType",
								"schema"
							],
							"variable": [
								{
									"value": "{{pluginName}}",
									"id": "pluginName"
								},
								{
									"value": "{{pluginType}}",
									"id": "pluginType"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets the inventory type schema"
					},
					"response": []
				},
				{
					"name": "Gets all permissible values for a plugin type",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/inventory/plugins/:pluginName/:pluginType/values?asTree={{asTree}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"inventory",
								"plugins",
								":pluginName",
								":pluginType",
								"values"
							],
							"query": [
								{
									"key": "asTree",
									"value": "{{asTree}}"
								}
							],
							"variable": [
								{
									"value": "{{pluginName}}",
									"id": "pluginName"
								},
								{
									"value": "{{pluginType}}",
									"id": "pluginType"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The element's values. Specifies information required to complete the request"
						},
						"description": "Gets all permissible values for a plugin type"
					},
					"response": []
				},
				{
					"name": "Gets all inventory types matching the filtering criteria",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/inventory/types?endpointType={{endpointType}}&typeName={{typeName}}&includeSimpleTypes={{includeSimpleTypes}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets all inventory types matching the filtering criteria"
					},
					"response": []
				},
				{
					"name": "Gets all enabled options for the forms designer",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/options",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets all enabled options for the forms designer for the current tenant"
					},
					"response": []
				},
				{
					"name": "Gets a certificate of vRO",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/orchestration/certificate",
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The vRO configuration to use for getting the certificate"
						},
						"description": "Gets a certificate of vRO"
					},
					"response": []
				},
				{
					"name": "Get policies",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/policies?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get policies by pages."
					},
					"response": []
				},
				{
					"name": "Create a Policy",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/policies",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy object"
						},
						"description": "Create a Policy."
					},
					"response": []
				},
				{
					"name": "Get Policy by human-readable ID",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/policies/hrid/:hrid",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"policies",
								"hrid",
								":hrid"
							],
							"variable": [
								{
									"value": "{{hrid}}",
									"id": "hrid"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the details of a specified Policy."
					},
					"response": []
				},
				{
					"name": "Get policy by id",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the details of a specified Policy."
					},
					"response": []
				},
				{
					"name": "Update or create a Policy",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Policy object"
						},
						"description": "Update or create a Policy."
					},
					"response": []
				},
				{
					"name": "Deletes a policy",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a policy by id."
					},
					"response": []
				},
				{
					"name": "Validates a request",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/requestValidations",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Catalog representation of a Blueprint Request"
						},
						"description": "Validates a request."
					},
					"response": []
				},
				{
					"name": "Submit requests",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Catalog representation of a Blueprint Request"
						},
						"description": "Handles submitted Request from the Catalog Service to the vCO workflow engine."
					},
					"response": []
				},
				{
					"name": "Rollback request",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/requests/:requestId/rollback",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"requests",
								":requestId",
								"rollback"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Information that is needed to rollback the request"
						},
						"description": "Rollbacks an already submitted request."
					},
					"response": []
				},
				{
					"name": "Retrieves resource operations",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/resourceOperations?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A base URI used for generating the navigation links in page response"
						},
						"description": "Retrieves resource operations by filtering it based on PageAndSortRequest parameter"
					},
					"response": []
				},
				{
					"name": "Creates a resource operation",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/resourceOperations",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The resource operation to create"
						},
						"description": "Creates a resource operation"
					},
					"response": []
				},
				{
					"name": "Retrieves a resource operation",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/resourceOperations/:resourceOperationId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"resourceOperations",
								":resourceOperationId"
							],
							"variable": [
								{
									"value": "{{resourceOperationId}}",
									"id": "resourceOperationId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a resource operation by primary key"
					},
					"response": []
				},
				{
					"name": "Updates a resource operation",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/resourceOperations/:resourceOperationId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"resourceOperations",
								":resourceOperationId"
							],
							"variable": [
								{
									"value": "{{resourceOperationId}}",
									"id": "resourceOperationId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The entity to use for updating the state"
						},
						"description": "Updates a resource operation by primary key within the current tenant"
					},
					"response": []
				},
				{
					"name": "Deletes a resource operation",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/resourceOperations/:resourceOperationId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"resourceOperations",
								":resourceOperationId"
							],
							"variable": [
								{
									"value": "{{resourceOperationId}}",
									"id": "resourceOperationId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a resource operation by primary key"
					},
					"response": []
				},
				{
					"name": "Creates a clone of a resource operation",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/resourceOperations/:resourceOperationId/clone",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"resourceOperations",
								":resourceOperationId",
								"clone"
							],
							"variable": [
								{
									"value": "{{resourceOperationId}}",
									"id": "resourceOperationId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Creates a clone of a resource operation found by primary key within the current tenant"
					},
					"response": []
				},
				{
					"name": "Updates the status of a resource operation",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/resourceOperations/:resourceOperationId/status",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"resourceOperations",
								":resourceOperationId",
								"status"
							],
							"variable": [
								{
									"value": "{{resourceOperationId}}",
									"id": "resourceOperationId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The new status to set"
						},
						"description": "Updates the publish status of a resource operation found by primary key within the current tenant."
					},
					"response": []
				},
				{
					"name": "Returns resources for a vRO type",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/resourceUpdate/types/:vcoType?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"resourceUpdate",
								"types",
								":vcoType"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{vcoType}}",
									"id": "vcoType"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of CsResource filtered by the dedicated vRO type identifier"
					},
					"response": []
				},
				{
					"name": "Updates an existing resource",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/resourceUpdate/:resourceId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"resourceUpdate",
								":resourceId"
							],
							"variable": [
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A JSON representation of the update data. Here is an example: { \"vcoId\" : \"some-valid-vco-id\", \"resourceData\" : { // A literal map that represents the resource data persisted in catalog }"
						},
						"description": "Updates an existing resource with the specified data (contains new vcoId and resource data).This method is exposed only to serve CloudClient use cases for SRM handling."
					},
					"response": []
				},
				{
					"name": "Get resources by resource type",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/resources/types/:resourceTypeId?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"resources",
								"types",
								":resourceTypeId"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{resourceTypeId}}",
									"id": "resourceTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "paging and sorting information"
						},
						"description": "Retrieves collection of resources by resource type"
					},
					"response": []
				},
				{
					"name": "Get a resource",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/resources/types/:resourceTypeId/:resourceId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"resources",
								"types",
								":resourceTypeId",
								":resourceId"
							],
							"variable": [
								{
									"value": "{{resourceTypeId}}",
									"id": "resourceTypeId"
								},
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Enables the Service Catalog to query for a specific resources resource by its type"
					},
					"response": []
				},
				{
					"name": "Gets the extended schema",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/schema-service/extendedSchema",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Optional input parameters for which to create the extended schema"
						},
						"description": "Returns a schema containing additional input fields that could be used for binding to in a form"
					},
					"response": []
				},
				{
					"name": "Gets schema of the class id associated with the given resource type",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/schema-service/:classId/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"schema-service",
								":classId",
								"schema"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema associated with the resource type identified by the given id"
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the schema",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/schema-service/:classId/schema/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"schema-service",
								":classId",
								"schema",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A ElementMetadataRequest specifying the dependency values for the fields' metadata."
						},
						"description": "Get the state of a field in the schema associated with the given class id and typeFilter type."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the schema",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/schema-service/:classId/schema/values?asTree={{asTree}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"schema-service",
								":classId",
								"schema",
								"values"
							],
							"query": [
								{
									"key": "asTree",
									"value": "{{asTree}}"
								}
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The element's values. Specifies information required to complete the request"
						},
						"description": "Get the permissible values of a field in the schema associated with the given class id and typeFilter."
					},
					"response": []
				},
				{
					"name": "Get the schema of a sub-field in the schema",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/schema-service/:classId/schema/:fieldId/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"schema-service",
								":classId",
								"schema",
								":fieldId",
								"schema"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema of a sub-field in the schema associated with the given class id and typeFilter."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the schema",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/schema-service/:classId/schema/:fieldId/values?asTree={{asTree}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"schema-service",
								":classId",
								"schema",
								":fieldId",
								"values"
							],
							"query": [
								{
									"key": "asTree",
									"value": "{{asTree}}"
								}
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The element's values. Specifies information required to complete the request"
						},
						"description": "Get the permissible values of a field in the schema associated with the given class id and typeFilter."
					},
					"response": []
				},
				{
					"name": "Gets schema of the class id associated with the given resource type",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/schema-service/:classId/:typeFilter/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"schema-service",
								":classId",
								":typeFilter",
								"schema"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema associated with the resource type identified by the given id.A resource type is associated with a class-id and an optional type filter that restricts the sub-types of class-id. This call basically retrieves the root schema of the class-id contained in the resource type."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the schema",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/schema-service/:classId/:typeFilter/schema/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"schema-service",
								":classId",
								":typeFilter",
								"schema",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A ElementMetadataRequest specifying the dependency values for the fields' metadata."
						},
						"description": "Get the state of a field in the schema associated with the given class id and typeFilter type."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the schema",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/schema-service/:classId/:typeFilter/schema/values?asTree={{asTree}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"schema-service",
								":classId",
								":typeFilter",
								"schema",
								"values"
							],
							"query": [
								{
									"key": "asTree",
									"value": "{{asTree}}"
								}
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The element's values. Specifies information required to complete the request"
						},
						"description": "Get the permissible values of a field in the schema associated with the given class id and typeFilter."
					},
					"response": []
				},
				{
					"name": "Get the schema of a sub-field in the schema",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/schema-service/:classId/:typeFilter/schema/:fieldId/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"schema-service",
								":classId",
								":typeFilter",
								"schema",
								":fieldId",
								"schema"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema of a sub-field in the schema associated with the given class id and typeFilter."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the schema",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/schema-service/:classId/:typeFilter/schema/:fieldId/values?asTree={{asTree}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"schema-service",
								":classId",
								":typeFilter",
								"schema",
								":fieldId",
								"values"
							],
							"query": [
								{
									"key": "asTree",
									"value": "{{asTree}}"
								}
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The element's values. Specifies information required to complete the request"
						},
						"description": "Get the permissible values of a field in the schema associated with the given class id and typeFilter."
					},
					"response": []
				},
				{
					"name": "Searches for ScriptActionSummary objects",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/scriptActions?name={{name}}&categoryName={{categoryName}}&description={{description}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Searches for {@link ScriptActionSummary}s by containment of name, description and categoryName."
					},
					"response": []
				},
				{
					"name": "Retrieves all ScriptActionCategory categories",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/scriptActions/categories",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves all ScriptActionCategory categories"
					},
					"response": []
				},
				{
					"name": "Retrieves the ScriptActionSummary objects underneath a specified category.",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/scriptActions/categories/:categoryName/scriptActions",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"scriptActions",
								"categories",
								":categoryName",
								"scriptActions"
							],
							"variable": [
								{
									"value": "{{categoryName}}",
									"id": "categoryName"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the ScriptActionSummary objects underneath a specified category."
					},
					"response": []
				},
				{
					"name": "Checks if the vCO supports executing script actions.",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/scriptActions/support",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Checks if the vCO supports executing script actions."
					},
					"response": []
				},
				{
					"name": "Retrieves {@link ScriptAction} by its fully qualified name (categoryName/name)",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/scriptActions/:categoryName/:name",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"scriptActions",
								":categoryName",
								":name"
							],
							"variable": [
								{
									"value": "{{categoryName}}",
									"id": "categoryName"
								},
								{
									"value": "{{name}}",
									"id": "name"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves {@link ScriptAction} by its fully qualified name (categoryName/name)"
					},
					"response": []
				},
				{
					"name": "Retrieves the script action input {@link Schema} by its fully qualified name (categoryName/name)",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/scriptActions/:categoryName/:name/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"scriptActions",
								":categoryName",
								":name",
								"schema"
							],
							"variable": [
								{
									"value": "{{categoryName}}",
									"id": "categoryName"
								},
								{
									"value": "{{name}}",
									"id": "name"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the script action input {@link Schema} by its fully qualified name (categoryName/name)"
					},
					"response": []
				},
				{
					"name": "Lists all service blueprints",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/blueprints?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"blueprints"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A base URI used for generating the navigation links in page response"
						},
						"description": "Lists all service blueprints in the current tenant matching the criteria in PageAndSortReques parameter."
					},
					"response": []
				},
				{
					"name": "Creates service blueprint",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/blueprints",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"blueprints"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The blueprint to create"
						},
						"description": "Creates service blueprint in the current tenant."
					},
					"response": []
				},
				{
					"name": "Gets a service blueprint",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/blueprints/:blueprintId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"blueprints",
								":blueprintId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a service blueprint by id."
					},
					"response": []
				},
				{
					"name": "Updates a service blueprint",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/blueprints/:blueprintId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"blueprints",
								":blueprintId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New state of the blueprint object to use for the update operation"
						},
						"description": "Updates a service blueprint with a given id."
					},
					"response": []
				},
				{
					"name": "Deletes a service blueprint",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/blueprints/:blueprintId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"blueprints",
								":blueprintId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a service blueprint by id in the current tenant."
					},
					"response": []
				},
				{
					"name": "Clones a service blueprint",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/blueprints/:blueprintId/clone",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"blueprints",
								":blueprintId",
								"clone"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Creates a new blueprint (aka. clones) based on an existing service blueprint with a given id."
					},
					"response": []
				},
				{
					"name": "Changes the published status of a blueprint",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/blueprints/:blueprintId/status",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"blueprints",
								":blueprintId",
								"status"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The new status to set"
						},
						"description": "Changes the published status of a blueprint with a given id."
					},
					"response": []
				},
				{
					"name": "Gets a root category for a tenant",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/categories",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"categories"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets a root category for a tenant"
					},
					"response": []
				},
				{
					"name": "Gets a category for a tenant",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/categories/:categoryId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"categories",
								":categoryId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{categoryId}}",
									"id": "categoryId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets a category for a tenant"
					},
					"response": []
				},
				{
					"name": "Gets all configurations",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/configurations",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"configurations"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets all configurations"
					},
					"response": []
				},
				{
					"name": "Creates or updates configuration",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/configurations",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"configurations"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A valid configuration to persist"
						},
						"description": "Creates or updates configuration"
					},
					"response": []
				},
				{
					"name": "Sets default vRO for usage for the current tenant",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/configurations/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"configurations",
								"default"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updates the configuration to use default vRO for the current tenant"
					},
					"response": []
				},
				{
					"name": "Tests default configuration for communication with vRO",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/configurations/default/status",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"configurations",
								"default",
								"status"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns status of the tested communication between ASD and vRO for the default configuration"
					},
					"response": []
				},
				{
					"name": "Tests provided configuration for communication with vRO",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/configurations/status",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"configurations",
								"status"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A valid configuration object to test for connectivity with vRO"
						},
						"description": "Returns status of the tested communication between ASD and vRO with passed in as argument configuration"
					},
					"response": []
				},
				{
					"name": "Gets a configuration",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/configurations/:configurationId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"configurations",
								":configurationId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{configurationId}}",
									"id": "configurationId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets a configuration by primary key"
					},
					"response": []
				},
				{
					"name": "Deletes a configuration",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/configurations/:configurationId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"configurations",
								":configurationId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{configurationId}}",
									"id": "configurationId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a configuration by primary key"
					},
					"response": []
				},
				{
					"name": "Lists resource types or resource mappings",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/types?external={{external}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"types"
							],
							"query": [
								{
									"key": "external",
									"value": "{{external}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A base URI used for generating the navigation links in page response"
						},
						"description": "Lists resource types or resource mappings matching the criteria of passed in PageAndSortRequest parameter"
					},
					"response": []
				},
				{
					"name": "Creates a resource type or resource mapping",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/types",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"types"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The resource type or mapping to create"
						},
						"description": "Creates a resource type or resource mapping in the current tenant."
					},
					"response": []
				},
				{
					"name": "Gets all resource types and resource mappings",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/types/all?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"types",
								"all"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A base URI used for generating the navigation links in page response"
						},
						"description": "Gets all resource types and resource mappings for the current tenant and matching to the passed in PageAndSortRequest"
					},
					"response": []
				},
				{
					"name": "Retrieves all resource type categories",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/types/categories",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"types",
								"categories"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves all resource type categories. The category is needed if XaaS components must be publish into specific category inside Blueprint design palette."
					},
					"response": []
				},
				{
					"name": "Gets a details form",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/types/detailsForm",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"types",
								"detailsForm"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The inventory type for which to build the details form"
						},
						"description": "Gets the details form for the passed in inventory type"
					},
					"response": []
				},
				{
					"name": "Gets a list of external resource types",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/types/external?typeName={{typeName}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"types",
								"external"
							],
							"query": [
								{
									"key": "typeName",
									"value": "{{typeName}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets a list of external resource types filtered by name"
					},
					"response": []
				},
				{
					"name": "Gets a list of fields",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/types/fields",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"types",
								"fields"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The inventory type for which to get the list of fields"
						},
						"description": "Gets a list of fields for the needs of presentation and designer"
					},
					"response": []
				},
				{
					"name": "Maps workflow parameters to custom resource parameters",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/types/parameters?provisioning={{provisioning}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"types",
								"parameters"
							],
							"query": [
								{
									"key": "provisioning",
									"value": "{{provisioning}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "List of workflow parameters to map"
						},
						"description": "Maps workflow parameters to custom resource parameters"
					},
					"response": []
				},
				{
					"name": "Gets a resource type or resource mapping",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/types/:resourceTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"types",
								":resourceTypeId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{resourceTypeId}}",
									"id": "resourceTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets a resource type or resource mapping by id"
					},
					"response": []
				},
				{
					"name": "Deletes resource type or resource mapping",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/types/:resourceTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"types",
								":resourceTypeId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{resourceTypeId}}",
									"id": "resourceTypeId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes resource type or resource mapping in the current tenant."
					},
					"response": []
				},
				{
					"name": "Gets the count of active resources",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/tenants/:tenantId/types/:resourceTypeId/resourceCount",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"tenants",
								":tenantId",
								"types",
								":resourceTypeId",
								"resourceCount"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{resourceTypeId}}",
									"id": "resourceTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves active resources count for given resourceTypeId for all users"
					},
					"response": []
				},
				{
					"name": "Returns a page of ValueDefinition objects",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/valueDefinitions?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Ignore, for internal use only. A base URI used for generating the navigation links in page response"
						},
						"description": "Returns a page of ValueDefinition objects"
					},
					"response": []
				},
				{
					"name": "Creates a ValueDefinition",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/valueDefinitions",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The ValueDefinition to be created"
						},
						"description": "Creates a ValueDefinition"
					},
					"response": []
				},
				{
					"name": "Retrieves the value behind the applicable {@link ValueDefinition} for the given key",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/valueDefinitions/key/:key/value",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"valueDefinitions",
								"key",
								":key",
								"value"
							],
							"variable": [
								{
									"value": "{{key}}",
									"id": "key"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The context to be applied when retrieving the value."
						},
						"description": "Retrieves the value behind the applicable {@link ValueDefinition} for the given key, value and the scope of the current request (System or Tenant). Based on the type of the definition it could retrieve the value from an external system or return a statically value. Value definitions marked as deleted (see {@link ValueDefinition#isDeleted()}) also looked up for value retrieval."
					},
					"response": []
				},
				{
					"name": "Retrieves the values behind the applicable ValueDefinition object for the given key",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/valueDefinitions/key/:key/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"valueDefinitions",
								"key",
								":key",
								"values"
							],
							"variable": [
								{
									"value": "{{key}}",
									"id": "key"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The context to be applied when retrieving the value."
						},
						"description": "Retrieves the values behind the applicable {@link ValueDefinition} for the given key, value and the scope of the current request (System or Tenant). Based on the type of the definition it could retrieve the value from an external system or return a statically value. Value definitions marked as deleted looked up for value retrieval."
					},
					"response": []
				},
				{
					"name": "Retrieves the input schema of the applicable ValueDefinition object for the given key and",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/valueDefinitions/key/:valueDefinitionKey/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"valueDefinitions",
								"key",
								":valueDefinitionKey",
								"schema"
							],
							"variable": [
								{
									"value": "{{valueDefinitionKey}}",
									"id": "valueDefinitionKey"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the input schema of the applicable {@link ValueDefinition} for the given key and the scope of the current request (System or Tenant). In case of a ScriptActionValueDefinition} this can be the input parameters of the scripting action value definition is bound to."
					},
					"response": []
				},
				{
					"name": "Gets a ValueDefinition",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/valueDefinitions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"valueDefinitions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets a ValueDefinition by primary key"
					},
					"response": []
				},
				{
					"name": "Updates or creates a ValueDefinition",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/valueDefinitions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"valueDefinitions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The ValueDefinition to be updated"
						},
						"description": "Updates or creates a ValueDefinition"
					},
					"response": []
				},
				{
					"name": "Deletes a ValueDefinition",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/valueDefinitions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"valueDefinitions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a ValueDefinition by primary key"
					},
					"response": []
				},
				{
					"name": "Imports a vRO package",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/vco/import",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "fileupload",
									"value": "{{fileupload}}",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "Imports a vRO package into the vRO instance configured for the current tenant"
					},
					"response": []
				},
				{
					"name": "Gets all workflows",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/workflows",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets all workflows"
					},
					"response": []
				},
				{
					"name": "Gets a workflow",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/workflows/:workflowId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"workflows",
								":workflowId"
							],
							"variable": [
								{
									"value": "{{workflowId}}",
									"id": "workflowId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets a workflow by id"
					},
					"response": []
				},
				{
					"name": "Generates a service blueprint based on a workflow",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/workflows/:workflowId/blueprint",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"workflows",
								":workflowId",
								"blueprint"
							],
							"variable": [
								{
									"value": "{{workflowId}}",
									"id": "workflowId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Generates a service blueprint based on a workflow"
					},
					"response": []
				},
				{
					"name": "Gets workflow fields",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/workflows/:workflowId/fields?usageClass={{usageClass}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"workflows",
								":workflowId",
								"fields"
							],
							"query": [
								{
									"key": "usageClass",
									"value": "{{usageClass}}"
								}
							],
							"variable": [
								{
									"value": "{{workflowId}}",
									"id": "workflowId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets workflow fields"
					},
					"response": []
				},
				{
					"name": "Gets the workflow form",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/workflows/:workflowId/form?typeName={{typeName}}&excludedField={{excludedField}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"workflows",
								":workflowId",
								"form"
							],
							"query": [
								{
									"key": "typeName",
									"value": "{{typeName}}"
								},
								{
									"key": "excludedField",
									"value": "{{excludedField}}"
								}
							],
							"variable": [
								{
									"value": "{{workflowId}}",
									"id": "workflowId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets the workflow form"
					},
					"response": []
				},
				{
					"name": "Gets output fields of a workflow",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/workflows/:workflowId/outputs?usageClass={{usageClass}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"workflows",
								":workflowId",
								"outputs"
							],
							"query": [
								{
									"key": "usageClass",
									"value": "{{usageClass}}"
								}
							],
							"variable": [
								{
									"value": "{{workflowId}}",
									"id": "workflowId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets output fields of a workflow"
					},
					"response": []
				},
				{
					"name": "Generates a resource opreation based on a workflow",
					"request": {
						"url": {
							"raw": "https/:///advanced-designer-service/api/workflows/:workflowId/resourceOperation",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"advanced-designer-service",
								"api",
								"workflows",
								":workflowId",
								"resourceOperation"
							],
							"variable": [
								{
									"value": "{{workflowId}}",
									"id": "workflowId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The input parameter for the resource operation"
						},
						"description": "Generates a resource opreation based on a workflow"
					},
					"response": []
				},
				{
					"name": "Process callback",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/workitem/callbacks",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Provided information for the WorkItem has been completed and the state changed"
						},
						"description": "Handles callback requests from the Work Item service when a WorkItem has been completed and the state changed"
					},
					"response": []
				},
				{
					"name": "Creates a work item",
					"request": {
						"url": "https://{{vra-fqdn}}/advanced-designer-service/api/workitems",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The interaction for which to create the work item"
						},
						"description": "Creates a work item for collecting user input when a vRO workflow is waiting for a user interaction"
					},
					"response": []
				}
			]
		},
		{
			"name": "Approval Service",
			"description": "Folder for api",
			"item": [
				{
					"name": "Retrieve a form.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/cafe-forms/forms/:formId/:instanceId?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"cafe-forms",
								"forms",
								":formId",
								":instanceId"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{formId}}",
									"id": "formId"
								},
								{
									"value": "{{instanceId}}",
									"id": "instanceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a form."
					},
					"response": []
				},
				{
					"name": "Retrieves the updated state of one or more layout elements in response to change in one or more layout fields' values.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/cafe-forms/forms/:formId/:instanceId/update?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"cafe-forms",
								"forms",
								":formId",
								":instanceId",
								"update"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{formId}}",
									"id": "formId"
								},
								{
									"value": "{{instanceId}}",
									"id": "instanceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the updated state of one or more layout elements in response to change in one or more layout fields' values."
					},
					"response": []
				},
				{
					"name": "Retrieves a paged list of permissible values that can be assigned to a specific field.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/cafe-forms/forms/:formId/:instanceId/:elementId/values?context={{context}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"cafe-forms",
								"forms",
								":formId",
								":instanceId",
								":elementId",
								"values"
							],
							"query": [
								{
									"key": "context",
									"value": "{{context}}"
								}
							],
							"variable": [
								{
									"value": "{{formId}}",
									"id": "formId"
								},
								{
									"value": "{{instanceId}}",
									"id": "instanceId"
								},
								{
									"value": "{{elementId}}",
									"id": "elementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a paged list of permissible values that can be assigned to a specific field."
					},
					"response": []
				},
				{
					"name": "Get a set of data for the specified object",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/data-service/data/:classId/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"data-service",
								"data",
								":classId",
								":id"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a set of data for the specified object."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of possible values for a given type of object",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/data-service/list/:classId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"data-service",
								"list",
								":classId",
								"default"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of possible values for a given type of object."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of possible values for a given type of object",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/data-service/list/:classId/types/:typeFilter",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"data-service",
								"list",
								":classId",
								"types",
								":typeFilter"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of possible values for a given type of object."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object class",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/data-service/schema/:classId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"default"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema for the specified object class."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/data-service/schema/:classId/default/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"default",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/data-service/schema/:classId/default/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"default",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/data-service/schema/:classId/instances/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This returns the schema of a particular type adjusted to the state of a specific instance.."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/data-service/schema/:classId/instances/:id/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/data-service/schema/:classId/instances/:id/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object type",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/data-service/schema/:classId/types/:typeFilter",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This returns the schema of a particular type within a class of object."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/data-service/schema/:classId/types/:typeFilter/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/data-service/schema/:classId/types/:typeFilter/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "List all approval instances.",
					"request": {
						"url": "https://{{vra-fqdn}}/approval-service/api/evaluations?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "List all approval instances."
					},
					"response": []
				},
				{
					"name": "Evaluates a request for the given approval policy.",
					"request": {
						"url": "https://{{vra-fqdn}}/approval-service/api/evaluations",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Evaluates a request for the given approval policy. This is an asynchronous call. The service creates a new {@link Approval} that would contain the result of the evaluation and returns it to the client and then asynchronously triggers the evaluation. Clients can check the status of the evaluation by retrieving this Approval instance. The service also has a callback mechanism to notify the clients when the evaluation is complete."
					},
					"response": []
				},
				{
					"name": "Work-items service invokes this API to notify that work item is completed.",
					"request": {
						"url": "https://{{vra-fqdn}}/approval-service/api/evaluations/workitems",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Work-items service invokes this API to notify that work item is completed."
					},
					"response": []
				},
				{
					"name": "Retrieves an Approval instance given its unique identifier.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/evaluations/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"evaluations",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves an Approval instance given its unique identifier."
					},
					"response": []
				},
				{
					"name": "Retrieve information about a specific approval request by its unique identifier.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/info/approvalrequests/:requestId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"info",
								"approvalrequests",
								":requestId"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve information about a specific approval request by its unique identifier. There is no method-level security on this method because no single permission gives usersaccess to approvals in general. However, there is a programmatic check to ascertain that theuser has a specific relationship to the approval that enables them to see it."
					},
					"response": []
				},
				{
					"name": "Retrieve a read-only form providing detailed information about the source of an approval associated with a specific approval request. ",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/info/approvalrequests/:requestId/form/source",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"info",
								"approvalrequests",
								":requestId",
								"form",
								"source"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a read-only form providing detailed information about the sourceof an approval associated with a specific approval request. There is no method-level security on this method because no single permission gives users access to approvals in general. However, there is a programmatic check to ascertain that the user has a specific relationship to the approval request that enables them to see it."
					},
					"response": []
				},
				{
					"name": "Retrieves the updated state of one or more layout elements in response to change in one or more layout fields' values.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/info/approvalrequests/:requestId/form/source/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"info",
								"approvalrequests",
								":requestId",
								"form",
								"source",
								"update"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the updated state of one or more layout elements in response to change in one or more layout fields' values."
					},
					"response": []
				},
				{
					"name": "Retrieves a paged list of permissible values for a specific field on the approval source details form, accessed via an approval request.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/info/approvalrequests/:requestId/form/source/:elementId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"info",
								"approvalrequests",
								":requestId",
								"form",
								"source",
								":elementId",
								"values"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								},
								{
									"value": "{{elementId}}",
									"id": "elementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a paged list of permissible values for a specific field on the approval source details form, accessed via an approval request."
					},
					"response": []
				},
				{
					"name": "Retrieve information about a specific approval by its unique identifier.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/info/approvals/:approvalId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"info",
								"approvals",
								":approvalId"
							],
							"variable": [
								{
									"value": "{{approvalId}}",
									"id": "approvalId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve information about a specific approval by its unique identifier. There is no method-level security on this method because no single permission gives usersaccess to approvals in general. However, there is a programmatic check to ascertain that theuser has a specific relationship to the approval that enables them to see it."
					},
					"response": []
				},
				{
					"name": "Retrieve a read-only form providing detailed information about the source of a specific approval.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/info/approvals/:approvalId/form/source",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"info",
								"approvals",
								":approvalId",
								"form",
								"source"
							],
							"variable": [
								{
									"value": "{{approvalId}}",
									"id": "approvalId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a read-only form providing detailed information about the source of a specific approval. There is no method-level security on this method because no single permission gives usersaccess to approvals in general. However, there is a programmatic check to ascertain that theuser has a specific relationship to the approval that enables them to see it."
					},
					"response": []
				},
				{
					"name": "Retrieves the updated state of one or more layout elements in response to change in one or more layout fields' values.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/info/approvals/:approvalId/form/source/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"info",
								"approvals",
								":approvalId",
								"form",
								"source",
								"update"
							],
							"variable": [
								{
									"value": "{{approvalId}}",
									"id": "approvalId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the updated state of one or more layout elements in response to change in one or more layout fields' values."
					},
					"response": []
				},
				{
					"name": "Retrieves a paged list of permissible values for a specific field on the approval source details form.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/info/approvals/:approvalId/form/source/:elementId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"info",
								"approvals",
								":approvalId",
								"form",
								"source",
								":elementId",
								"values"
							],
							"variable": [
								{
									"value": "{{approvalId}}",
									"id": "approvalId"
								},
								{
									"value": "{{elementId}}",
									"id": "elementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a paged list of permissible values for a specific field on the approval source details form. "
					},
					"response": []
				},
				{
					"name": "Lists the approval policies.",
					"request": {
						"url": "https://{{vra-fqdn}}/approval-service/api/policies?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Lists the approval policies"
					},
					"response": []
				},
				{
					"name": "Creates a new approval policy.",
					"request": {
						"url": "https://{{vra-fqdn}}/approval-service/api/policies",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Creates a new approval policy"
					},
					"response": []
				},
				{
					"name": "Updates an Approval Policy while ignoring few of the validations. This is an internal API which is used for upgrade.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/policies/upgrade/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"policies",
								"upgrade",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updates an Approval Policy while ignoring few of the validations. This is an internal API which is used for upgrade."
					},
					"response": []
				},
				{
					"name": "Retrieves an approval policy.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves an approval policy"
					},
					"response": []
				},
				{
					"name": "Updates an approval policy.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updates an approval policy"
					},
					"response": []
				},
				{
					"name": "Deletes an approval policy.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes an approval policy."
					},
					"response": []
				},
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/approval-service/api/policytypes?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Creates a new approval policy type.",
					"request": {
						"url": "https://{{vra-fqdn}}/approval-service/api/policytypes",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Creates a new approval policy type."
					},
					"response": []
				},
				{
					"name": "Retrieves an approval policy type given its identifier.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/policytypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"policytypes",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves an approval policy type given its identifier."
					},
					"response": []
				},
				{
					"name": "Updates an existing approval policy type.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/policytypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"policytypes",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updates an existing approval policy type."
					},
					"response": []
				},
				{
					"name": "Deletes an approval policy type with the given ID.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/policytypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"policytypes",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes an approval policy type with the given ID."
					},
					"response": []
				},
				{
					"name": "Get the schema associated with the policy type identified by the given id.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/policytypes/:policyTypeId/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"policytypes",
								":policyTypeId",
								"schema"
							],
							"variable": [
								{
									"value": "{{policyTypeId}}",
									"id": "policyTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema associated with the policy type identified by the given id.A policy type is associated with a class-id and an optional type filter that restricts the sub-types of class-id.This call basically retrieves the root schema of the class-id contained in the policy type."
					},
					"response": []
				},
				{
					"name": "Get the schema associated with the policy type identified by the given id.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/policytypes/:policyTypeId/schema/types/:typeFilter",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"policytypes",
								":policyTypeId",
								"schema",
								"types",
								":typeFilter"
							],
							"variable": [
								{
									"value": "{{policyTypeId}}",
									"id": "policyTypeId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema associated with the policy type identified by the given id.A policy type is associated with a class-id and an optional type filter that restricts the sub-types of class-id.This call basically retrieves the root schema of the class-id contained in the policy type."
					},
					"response": []
				},
				{
					"name": "Get the schema of a sub-field in the schema associated with the given policy type identified by the given id.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/policytypes/:policyTypeId/schema/types/:typeFilter/:fieldId/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"policytypes",
								":policyTypeId",
								"schema",
								"types",
								":typeFilter",
								":fieldId",
								"schema"
							],
							"variable": [
								{
									"value": "{{policyTypeId}}",
									"id": "policyTypeId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema of a sub-field in the schema associated with the given policy type identified by the given id."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the schema associated with the given policy type.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/policytypes/:policyTypeId/schema/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"policytypes",
								":policyTypeId",
								"schema",
								"update"
							],
							"variable": [
								{
									"value": "{{policyTypeId}}",
									"id": "policyTypeId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the schema associated with the given policy type."
					},
					"response": []
				},
				{
					"name": "Get the schema of a sub-field in the schema associated with the given policy type.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/policytypes/:policyTypeId/schema/:fieldId/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"policytypes",
								":policyTypeId",
								"schema",
								":fieldId",
								"schema"
							],
							"variable": [
								{
									"value": "{{policyTypeId}}",
									"id": "policyTypeId"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema of a sub-field in the schema associated with the given policy type."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the schema associated with the given policy type.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/policytypes/:policyTypeId/schema/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"policytypes",
								":policyTypeId",
								"schema",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{policyTypeId}}",
									"id": "policyTypeId"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the schema associated with the given policy type."
					},
					"response": []
				},
				{
					"name": "Returns approvable items on which approval policy can be defined.",
					"request": {
						"url": {
							"raw": "https/:///approval-service/api/services/:serviceTypeId/approvable-items?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"approval-service",
								"api",
								"services",
								":serviceTypeId",
								"approvable-items"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{serviceTypeId}}",
									"id": "serviceTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns approvable items on which approval policy can be defined. Using an approvable does not automatically make that policy applicable for all requests for the item, i.e. entitlements still need to be used to link the approval policy."
					},
					"response": []
				}
			]
		},
		{
			"name": "Branding Service",
			"description": "Folder for api",
			"item": [
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/branding-service/api/brandings?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the branding object for the current tenant",
					"request": {
						"url": "https://{{vra-fqdn}}/branding-service/api/brandings/config",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieving the branding object for the current tenant.  This branding object is \nspecified to the current tenant."
					},
					"response": []
				},
				{
					"name": "Update the branding",
					"request": {
						"url": "https://{{vra-fqdn}}/branding-service/api/brandings/config",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The branding to be updated"
						},
						"description": "Updating the branding."
					},
					"response": []
				},
				{
					"name": "Get the system default branding for a tenant",
					"request": {
						"url": "https://{{vra-fqdn}}/branding-service/api/brandings/default",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieving the system default branding for a tenant."
					},
					"response": []
				},
				{
					"name": "Get effective  branding",
					"request": {
						"url": "https://{{vra-fqdn}}/branding-service/api/brandings/effective",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieving the effective branding for a user.  This effective branding is the \nbraanding a user will see upon login"
					},
					"response": []
				},
				{
					"name": "Delete a branding",
					"request": {
						"url": {
							"raw": "https/:///branding-service/api/brandings/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"branding-service",
								"api",
								"brandings",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deleting a branding by id."
					},
					"response": []
				},
				{
					"name": "Get the Message Board for current tenant",
					"request": {
						"url": "https://{{vra-fqdn}}/branding-service/api/messageboard",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets the Message Board for current tenant"
					},
					"response": []
				},
				{
					"name": "Updates or Creates a new Message Board",
					"request": {
						"url": "https://{{vra-fqdn}}/branding-service/api/messageboard",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updates or Creates a new Message Board "
					},
					"response": []
				}
			]
		},
		{
			"name": "Catalog Service",
			"description": "Folder for api",
			"item": [
				{
					"name": "Retrieves Approvable Items",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/approval/approvable-items?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The list of approvable items ids for which items need to be retrieved."
						},
						"description": "Returns the ApprovableItems on which approval policy could be created. Using an ApprovableItem does not automatically make that policy applicable for all requests for the item, i.e. entitlements still need to be used to link the approval policy."
					},
					"response": []
				},
				{
					"name": "Replace approval policy",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/approval/policies/:policyId/replace",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"approval",
								"policies",
								":policyId",
								"replace"
							],
							"variable": [
								{
									"value": "{{policyId}}",
									"id": "policyId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The new policy that will be used to replace the existing policy."
						},
						"description": "Replaces an existing approval policy with the one provided in the request"
					},
					"response": []
				},
				{
					"name": "Get Approval Policy Usage",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/approval/policies/:policyId/usages?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"approval",
								"policies",
								":policyId",
								"usages"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{policyId}}",
									"id": "policyId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns the approval policy usage for a specific approval policy"
					},
					"response": []
				},
				{
					"name": "Receive approval event",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/approval/request/:requestId/event",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"approval",
								"request",
								":requestId",
								"event"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The received event sent by the approval service."
						},
						"description": "Receives the approval event operation on the approval callback service"
					},
					"response": []
				},
				{
					"name": "Receive request update",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/approval/request/:requestId/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"approval",
								"request",
								":requestId",
								"update"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The request data to be updated for the correspoding request id"
						},
						"description": "Updates the specified request based on the event from approval"
					},
					"response": []
				},
				{
					"name": "Get catalog item types",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/catalogItemTypes?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Find all CatalogItemTypes that are available in the system."
					},
					"response": []
				},
				{
					"name": "Find catalog items",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/catalogItems?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Finds all CatalogItems that the current user is allowed to review."
					},
					"response": []
				},
				{
					"name": "Find all catalog items with no service association",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/catalogItems/available?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve all the catalog Items that are not associated with any service and are in the same tenant as the current request."
					},
					"response": []
				},
				{
					"name": "Update Catalog Item For Upgrade",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/catalogItems/upgrade/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"catalogItems",
								"upgrade",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The catalog item to be updated."
						},
						"description": "Updates an existing CatalogItem. For use in upgrade scenarios - e.g.,transforming a 6.x machine blueprint catalog item to a 7.x blueprint catalog item in place to preserve entitlements, approval policies, etc."
					},
					"response": []
				},
				{
					"name": "Find all entitlements for catalog item",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/catalogItems/:catalogItemId/entitlements?serviceId={{serviceId}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"catalogItems",
								":catalogItemId",
								"entitlements"
							],
							"query": [
								{
									"key": "serviceId",
									"value": "{{serviceId}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{catalogItemId}}",
									"id": "catalogItemId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve all entitlements for a CatalogItem and the service to which the catalog item belongs.If the service identifier is not supplied while making the API call ; it is computed on the server side."
					},
					"response": []
				},
				{
					"name": "Find catalog item",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/catalogItems/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"catalogItems",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an existing CatalogItem that the user is permitted to review, even if it were not published or entitled to them."
					},
					"response": []
				},
				{
					"name": "Update Catalog Item",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/catalogItems/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"catalogItems",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The catalog item to be updated."
						},
						"description": "Updates an existing {@link CatalogItem} upon the existence and validation of CatalogItem. e.g. it validates for allowed state transitions before making the update to the catalog item."
					},
					"response": []
				},
				{
					"name": "Find catalog item icon",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/catalogItems/:id/icon",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"catalogItems",
								":id",
								"icon"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a CatalogItem's Icon according to its unique id provided in the path. This icon is displayed in the vRA catalog UI."
					},
					"response": []
				},
				{
					"name": "Get catalog items",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/consumer/catalogItems?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a page of catalog items a catalog consumer is permitted to see."
					},
					"response": []
				},
				{
					"name": "Get catalog item",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/catalogItems/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"catalogItems",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a catalog item a catalog consumer is permitted to see."
					},
					"response": []
				},
				{
					"name": "Get details form",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/catalogItems/:id/forms/details?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"catalogItems",
								":id",
								"forms",
								"details"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a read-only details form for presenting the specified catalog item."
					},
					"response": []
				},
				{
					"name": "Get details form element metadata",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/catalogItems/:id/forms/details/update?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"catalogItems",
								":id",
								"forms",
								"details",
								"update"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Specifies information required to complete the request."
						},
						"description": "Retrieves the metadata of one or more elements within the details form of a specified catalog item."
					},
					"response": []
				},
				{
					"name": "Get details form field values",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/catalogItems/:id/forms/details/:elementId/values?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"catalogItems",
								":id",
								"forms",
								"details",
								":elementId",
								"values"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{elementId}}",
									"id": "elementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Information required to complete the request."
						},
						"description": "Retrieves the paged list of values for an element within the details form of a specified"
					},
					"response": []
				},
				{
					"name": "Get request form",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/catalogItems/:id/forms/request?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"catalogItems",
								":id",
								"forms",
								"request"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an editable form for submitting a request for the specified catalog item."
					},
					"response": []
				},
				{
					"name": "Get request form elment metadata",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/catalogItems/:id/forms/request/update?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"catalogItems",
								":id",
								"forms",
								"request",
								"update"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The specific information required to complete the request."
						},
						"description": "Retrieves the updated state of one or more layout elements in the request form of a specified catalog item."
					},
					"response": []
				},
				{
					"name": "Get request form field value",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/catalogItems/:id/forms/request/:elementId/values?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"catalogItems",
								":id",
								"forms",
								"request",
								":elementId",
								"values"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{elementId}}",
									"id": "elementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Specifies information required to complete the request."
						},
						"description": "Retrieves the paged list of values for an element within the request form of a specified catalog item."
					},
					"response": []
				},
				{
					"name": "Find catalog item icon",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/catalogItems/:id/icon",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"catalogItems",
								":id",
								"icon"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a CatalogItem's Icon according to its unique id provided in the path."
					},
					"response": []
				},
				{
					"name": "Get Consumer Catalog Item Views",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/consumer/entitledCatalogItemViews?serviceId={{serviceId}}&onBehalfOf={{onBehalfOf}}&subtenantId={{subtenantId}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get all ConsumerEntitledCatalogItemView for the current user.ConsumerEntitledCatalogItemView are basically catalog items: - in an active state. - the current user has the right to consume. - the current user is entitled to consume. - associated to a service."
					},
					"response": []
				},
				{
					"name": "Get a Consumer Entitled Catalog Item View",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/entitledCatalogItemViews/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"entitledCatalogItemViews",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a ConsumerEntitledCatalogItemView by its unique Id.ConsumerEntitledCatalogItemView are basically catalog items: - in an active state. - the current user has the right to consume. - the current user is entitled to consume. - associated to a service."
					},
					"response": []
				},
				{
					"name": "Get a Consumer Entitled Catalog Items",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/consumer/entitledCatalogItems?serviceId={{serviceId}}&onBehalfOf={{onBehalfOf}}&subtenantId={{subtenantId}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a ConsumerEntitledCatalogItem by its unique Id.ConsumerEntitledCatalogItem are basically catalog items: - in an active state. - the current user has the right to consume. - the current user is entitled to consume. - associated to a service."
					},
					"response": []
				},
				{
					"name": "Get a Consumer Entitled Catalog Item",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/entitledCatalogItems/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"entitledCatalogItems",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a ConsumerEntitledCatalogItem by its unique Id.ConsumerEntitledCatalogItem are basically catalog items: - in an active state. - the current user has the right to consume. - the current user is entitled to consume. - associated to a service."
					},
					"response": []
				},
				{
					"name": "Submit Catalog Item Provisioning Request",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/entitledCatalogItems/:id/requests?businessGroupId={{businessGroupId}}&requestedFor={{requestedFor}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"entitledCatalogItems",
								":id",
								"requests"
							],
							"query": [
								{
									"key": "businessGroupId",
									"value": "{{businessGroupId}}"
								},
								{
									"key": "requestedFor",
									"value": "{{requestedFor}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The CatalogItemProvisioningRequest to be submitted."
						},
						"description": "Create and save a CatalogItemProvisioningRequest for the specified Catalog Item. If successful, the request will be saved in a 'Submitted' state. Its state should change to 'InProgress' during provisioning, and if all goes well, eventually become 'Success'. If any errors are encountered, its state will become 'Failed'."
					},
					"response": []
				},
				{
					"name": "Get Resource Action Request Schema",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/entitledCatalogItems/:id/requests/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"entitledCatalogItems",
								":id",
								"requests",
								"schema"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema for requesting a Catalog Item to be provisioned."
					},
					"response": []
				},
				{
					"name": "Get Catalog Item Provisioning Request Template",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/entitledCatalogItems/:id/requests/template?businessGroupId={{businessGroupId}}&requestedFor={{requestedFor}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"entitledCatalogItems",
								":id",
								"requests",
								"template"
							],
							"query": [
								{
									"key": "businessGroupId",
									"value": "{{businessGroupId}}"
								},
								{
									"key": "requestedFor",
									"value": "{{requestedFor}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a template request in preparation for submitting a CatalogItemProvisioningRequest."
					},
					"response": []
				},
				{
					"name": "Create request",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/consumer/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The Request to be created and saved."
						},
						"description": "Create and save a Request upon validation on Request fields. This will save a Request creation event as well."
					},
					"response": []
				},
				{
					"name": "Get Details Form",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/requests/:id/forms/details",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"requests",
								":id",
								"forms",
								"details"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a read-only details form for presenting an existing request."
					},
					"response": []
				},
				{
					"name": "Get Details Form Element Metadata",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/requests/:id/forms/details/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"requests",
								":id",
								"forms",
								"details",
								"update"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Specifies information required to complete the request."
						},
						"description": "Retrieves the metadata of one or more elements within the details form of a specified request."
					},
					"response": []
				},
				{
					"name": "Get Details Form Field Values",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/requests/:id/forms/details/:elementId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"requests",
								":id",
								"forms",
								"details",
								":elementId",
								"values"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{elementId}}",
									"id": "elementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Specifies information required to complete the request."
						},
						"description": "Retrieves the list of values for an element within the details form of a specified request."
					},
					"response": []
				},
				{
					"name": "Get Submission Form",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/requests/:id/forms/submission",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"requests",
								":id",
								"forms",
								"submission"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an editable form for submitting an existing, un-submitted request."
					},
					"response": []
				},
				{
					"name": "Get Submission Form Element Metadata",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/requests/:id/forms/submission/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"requests",
								":id",
								"forms",
								"submission",
								"update"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Specifies information required to complete the request."
						},
						"description": "Retrieves the metadata of one or more elements within the submission form of a specified request."
					},
					"response": []
				},
				{
					"name": "Get Submission Form Field Values",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/requests/:id/forms/submission/:elementId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"requests",
								":id",
								"forms",
								"submission",
								":elementId",
								"values"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{elementId}}",
									"id": "elementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Specifies information required to complete the request."
						},
						"description": "Retrieves the list of values for an element within the submission form of a specified request."
					},
					"response": []
				},
				{
					"name": "Get User Friendly Resource Provisioned By Request",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/requests/:id/resourceViews?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"requests",
								":id",
								"resourceViews"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the resources (using a domain object targetted for direct REST API users) that were provisioned as a result of a given request."
					},
					"response": []
				},
				{
					"name": "Get provisioned resources",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/requests/:id/resources?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"requests",
								":id",
								"resources"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the resources that were provisioned as a result of a given request.In addition results can be filtered down using odata i.e ?$filter=resourceType/id = 'Infrastructure.Virtual'"
					},
					"response": []
				},
				{
					"name": "Get Request",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/requests/:requestId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"requests",
								":requestId"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets a Request corresponding to its unique Id. The Request is owned by the current user."
					},
					"response": []
				},
				{
					"name": "Update request",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/requests/:requestId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"requests",
								":requestId"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The Request to be updated"
						},
						"description": "Update a {@link Request} upon the existence of the Request and validation of Request fields. This will save a Request creation event as well."
					},
					"response": []
				},
				{
					"name": "Delete Request",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/requests/:requestId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"requests",
								":requestId"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a Request corresponding to its unique Id. The Request is owned by the current user. To be deleted, a request must be in an {@link RequestState}.UNSUBMITTED state. This will delete physically the request."
					},
					"response": []
				},
				{
					"name": "Get Resource Operation",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resourceOperations/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resourceOperations",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a resource operation."
					},
					"response": []
				},
				{
					"name": "Get Resource Operation Icon",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resourceOperations/:id/icon",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resourceOperations",
								":id",
								"icon"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a Resource Operation's Icon according to its unique id provided in the path."
					},
					"response": []
				},
				{
					"name": "Get Resource Type",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resourceTypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resourceTypes",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a resource type by its unique identifier."
					},
					"response": []
				},
				{
					"name": "Get Descendant Resource Type",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resourceTypes/:id/descendants",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resourceTypes",
								":id",
								"descendants"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets a hierarchy of descendant resource types for given primary type."
					},
					"response": []
				},
				{
					"name": "Get Resource Views",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/consumer/resourceViews?managedOnly={{managedOnly}}&withExtendedData={{withExtendedData}}&withOperations={{withOperations}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the resources (using a domain object targeted for direct REST API users) that were provisioned. <p/> This API is very similar to <tt>/api/consumer/resources</tt>, with only difference being that the <tt>ConsumerResource</tt> objects are transformed into the more API-friendly <tt>ConsumerResourceView</tt> objects"
					},
					"response": []
				},
				{
					"name": "https://{{vra-fqdn}}/catalog-service/api/consumer/resourceViews/:id",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resourceViews/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resourceViews",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the resource (using a domain object targeted for direct REST API users) by its unique identifier. It retrieves a specific resource with its up to date Provider Data by its: unique id. <p/> This API is very similar to <tt>/api/consumer/resources/{id}</tt>, with only difference being that the <tt>ConsumerResource</tt> objects are transformed into the more API-friendly <tt>ConsumerResourceView</tt> objects"
					},
					"response": []
				},
				{
					"name": "Get Resources By Resource Type",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resources/types/:resourceTypeId?managedOnly={{managedOnly}}&withExtendedData={{withExtendedData}}&withOperations={{withOperations}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resources",
								"types",
								":resourceTypeId"
							],
							"query": [
								{
									"key": "managedOnly",
									"value": "{{managedOnly}}"
								},
								{
									"key": "withExtendedData",
									"value": "{{withExtendedData}}"
								},
								{
									"key": "withOperations",
									"value": "{{withOperations}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{resourceTypeId}}",
									"id": "resourceTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Fetches the resources given a Resource Type, accessible to the current user from the CAFE database."
					},
					"response": []
				},
				{
					"name": "Get Resource",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resources/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resources",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a resource by its unique identifier. It retrieves a specific resource with its up to date Provider Data by its unique id."
					},
					"response": []
				},
				{
					"name": "Get Resource Details Form",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resources/:id/form",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resources",
								":id",
								"form"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a read only form for the details of a resource."
					},
					"response": []
				},
				{
					"name": "Get Resource Details Form Element Values",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resources/:id/form/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resources",
								":id",
								"form",
								"update"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Specifies information required to complete the request."
						},
						"description": "Retrieves the metadata of multiple dynamic elements in single call. It combines the retrieval of element's {@link ElementState} and the list of {@link PermissibleValue} for each element.  <p> This method is not used for retrieving a subset of all the potential values of a field based on some search text or criteria. It should be used for retrieving all the possible values for a field, which is expected to be limited in size."
					},
					"response": []
				},
				{
					"name": "Get Resource Details Form Element Values",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resources/:id/form/:elementId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resources",
								":id",
								"form",
								":elementId",
								"values"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{elementId}}",
									"id": "elementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Specifies information required to complete the request."
						},
						"description": "Retrieves a list of the permissible values for a specified element within the details form."
					},
					"response": []
				},
				{
					"name": "Get Icon For Resource",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resources/:id/icon",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resources",
								":id",
								"icon"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the icon for a given resource"
					},
					"response": []
				},
				{
					"name": "Get Available Resource Operations",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resources/:resourceId/actions",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resources",
								":resourceId",
								"actions"
							],
							"variable": [
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the complete list of available operations that can be performed on a given resource."
					},
					"response": []
				},
				{
					"name": "Get Resource Action Request Form",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resources/:resourceId/actions/:resourceActionId/forms/request",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resources",
								":resourceId",
								"actions",
								":resourceActionId",
								"forms",
								"request"
							],
							"variable": [
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								},
								{
									"value": "{{resourceActionId}}",
									"id": "resourceActionId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the form for triggering a resource action."
					},
					"response": []
				},
				{
					"name": "Get Resource Action Request Form Element State",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resources/:resourceId/actions/:resourceActionId/forms/request/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resources",
								":resourceId",
								"actions",
								":resourceActionId",
								"forms",
								"request",
								"update"
							],
							"variable": [
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								},
								{
									"value": "{{resourceActionId}}",
									"id": "resourceActionId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Specifies information required to complete the request."
						},
						"description": "Retrieves the metadata of one or more elements within the request form of a resource action."
					},
					"response": []
				},
				{
					"name": "Get Resource Action Request Form Field Values",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resources/:resourceId/actions/:resourceActionId/forms/request/:elementId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resources",
								":resourceId",
								"actions",
								":resourceActionId",
								"forms",
								"request",
								":elementId",
								"values"
							],
							"variable": [
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								},
								{
									"value": "{{resourceActionId}}",
									"id": "resourceActionId"
								},
								{
									"value": "{{elementId}}",
									"id": "elementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Specifies information required to complete the request."
						},
						"description": "This retrieves the permissible values for the specified field."
					},
					"response": []
				},
				{
					"name": "Submit Catalog Resource Request",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resources/:resourceId/actions/:resourceActionId/requests",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resources",
								":resourceId",
								"actions",
								":resourceActionId",
								"requests"
							],
							"variable": [
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								},
								{
									"value": "{{resourceActionId}}",
									"id": "resourceActionId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The request data."
						},
						"description": "Make a day-two resource action request."
					},
					"response": []
				},
				{
					"name": "Get Resource Action Request Schema",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resources/:resourceId/actions/:resourceActionId/requests/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resources",
								":resourceId",
								"actions",
								":resourceActionId",
								"requests",
								"schema"
							],
							"variable": [
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								},
								{
									"value": "{{resourceActionId}}",
									"id": "resourceActionId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema for triggering a resource action."
					},
					"response": []
				},
				{
					"name": "Get Catalog Resource Request Template",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/consumer/resources/:resourceId/actions/:resourceActionId/requests/template",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"consumer",
								"resources",
								":resourceId",
								"actions",
								":resourceActionId",
								"requests",
								"template"
							],
							"variable": [
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								},
								{
									"value": "{{resourceActionId}}",
									"id": "resourceActionId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a template CatalogResourceRequest for the given context. This object may be updated as desired and posted/submitted to /{resourceId}/actions/{resourceActionId}/requests (submitCatalogResourceRequest) in order to trigger a 'day 2 action' on the requested resource."
					},
					"response": []
				},
				{
					"name": "Get Services",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/consumer/services?onBehalfOf={{onBehalfOf}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get all Active Services the current user is entitled to see. Each returned services must own at least one Catalog Item the current user is entitled to."
					},
					"response": []
				},
				{
					"name": "Create Entitlement",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/entitlements",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The Entitlement to create."
						},
						"description": "Create an {@link Entitlement}.This will check the existence of the Entitlement and validate its fields according to business rules.For e.g.it validates that an organization is specified for the entitlement."
					},
					"response": []
				},
				{
					"name": "Set the Ordering",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/entitlements/order?subtenantId={{subtenantId}}",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "A MultipleLiteral} comprising a list of String literals which are Entitlement IDs."
						},
						"description": "Update the order of existing entitlements for a Tenant."
					},
					"response": []
				},
				{
					"name": "Get entitlement",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/entitlements/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"entitlements",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets an Entitlement corresponding to its unique Id."
					},
					"response": []
				},
				{
					"name": "Update entitlement",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/entitlements/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"entitlements",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The Entitlement to be updated"
						},
						"description": "Update an Entitlement upon the existence and validation of Entitlement."
					},
					"response": []
				},
				{
					"name": "Create or Update Icon",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/icons",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The icon object"
						},
						"description": "Publish a Icon to the service catalog. Updates an existing icon or creates a new one if none has been published with the given id."
					},
					"response": []
				},
				{
					"name": "Get Icon",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/icons/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"icons",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an existing Icon that was published to the service catalog."
					},
					"response": []
				},
				{
					"name": "Delete an Icon",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/icons/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"icons",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delet an Icon from the service catalog. If the icon is one of the default system icons, it will be reverted to its default state instead of being deleted."
					},
					"response": []
				},
				{
					"name": "Download Icon",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/icons/:id/download",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"icons",
								":id",
								"download"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Download an existing Icon from service catalog."
					},
					"response": []
				},
				{
					"name": "Get CatalogItemType",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/catalogItemTypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"catalogItemTypes",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an existing CatalogItemType."
					},
					"response": []
				},
				{
					"name": "Create Or Update Catalog Item Type",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/catalogItemTypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"catalogItemTypes",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The Catalog Item Type data to be saved."
						},
						"description": "Create a new CatalogItemType or update an existing one."
					},
					"response": []
				},
				{
					"name": "Delete CatalogItemType",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/catalogItemTypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"catalogItemTypes",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes the CatalogItemType if no catalog items are associated with it"
					},
					"response": []
				},
				{
					"name": "Get Icon For Provider",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/icons/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"icons",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an existing, solution-level {@link Icon} that was published to the service catalog by a provider."
					},
					"response": []
				},
				{
					"name": "Create Or Update Icon For Provider",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/icons/:id?tenant={{tenant}}&subtenant={{subtenant}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"icons",
								":id"
							],
							"query": [
								{
									"key": "tenant",
									"value": "{{tenant}}"
								},
								{
									"key": "subtenant",
									"value": "{{subtenant}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{Content-Type}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The icon data to be saved."
						},
						"description": "Publish a solution-level Icon from a provider to the service catalog."
					},
					"response": []
				},
				{
					"name": "Find Catalog Item",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/providers/:providerId/catalogItems/:bindingId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"providers",
								":providerId",
								"catalogItems",
								":bindingId"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an existing CatalogItem by Provider and the provider's ID."
					},
					"response": []
				},
				{
					"name": "Register Catalog Item",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/providers/:providerId/catalogItems/:bindingId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"providers",
								":providerId",
								"catalogItems",
								":bindingId"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The provider catalog item that has to be registered."
						},
						"description": "Register a ProviderCatalogItem or update an already registered one."
					},
					"response": []
				},
				{
					"name": "Delete Catalog Item",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/providers/:providerId/catalogItems/:bindingId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"providers",
								":providerId",
								"catalogItems",
								":bindingId"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes an existing {@link CatalogItem} by Provider and the provider's ID."
					},
					"response": []
				},
				{
					"name": "Find Catalog Item Icon",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/providers/:providerId/catalogItems/:bindingId/icon",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"providers",
								":providerId",
								"catalogItems",
								":bindingId",
								"icon"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Downloads the icon associated with the CatalogItem denoted by the bindingId"
					},
					"response": []
				},
				{
					"name": "Complete Request",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/providers/:providerId/requests/:bindingId/complete",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"providers",
								":providerId",
								"requests",
								":bindingId",
								"complete"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "RequestCompletion returned by the Provider for the Request."
						},
						"description": "Method to be called by a Provider to notify the Service Catalog that a previously submitted Request has been completed."
					},
					"response": []
				},
				{
					"name": "Get Resources",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/providers/:providerId/resources?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"providers",
								":providerId",
								"resources"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return the resources by provider id and request binding id"
					},
					"response": []
				},
				{
					"name": "ReRegister Resource For Upgrade",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/providers/:providerId/resources/upgrade/:externalResourceId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"providers",
								":providerId",
								"resources",
								"upgrade",
								":externalResourceId"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{externalResourceId}}",
									"id": "externalResourceId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The provider resource"
						},
						"description": "Updates an existing {@link Resource}. For use in upgrade scenarios - e.g., transforming a 6.x multi-machine app-service resource to a 7.x deployment resource in place to preserve links to the original id. Provider and binding ids may change through upgrade, so this method requires the external/catalog resource id as well as the id of the (possibly changed) provider."
					},
					"response": []
				},
				{
					"name": "Get Resource",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/providers/:providerId/resources/:bindingId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"providers",
								":providerId",
								"resources",
								":bindingId"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an existing Resource by Provider and the provider's ID for the resource."
					},
					"response": []
				},
				{
					"name": "Register Resource",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/providers/:providerId/resources/:bindingId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"providers",
								":providerId",
								"resources",
								":bindingId"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The resource to be registered."
						},
						"description": "Register a ProviderResource or update an already registered one."
					},
					"response": []
				},
				{
					"name": "Delete Resource",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/providers/:providerId/resources/:bindingId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"providers",
								":providerId",
								"resources",
								":bindingId"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes an existing Resource by Provider and the provider's ID for the resource."
					},
					"response": []
				},
				{
					"name": "https://{{vra-fqdn}}/catalog-service/api/provider/resourceActions?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/provider/resourceActions?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a list of registered resource actions, regardless of status, matching the filter, paging and sorting specification. <p/> This method can also be used by 3rd parties to identify registered resource actions by their provider binding."
					},
					"response": []
				},
				{
					"name": "Retrieve Resource Action",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/resourceActions/:bindingId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"resourceActions",
								":bindingId"
							],
							"variable": [
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves an existing ResourceAction by its internal, catalog-assigned identifier."
					},
					"response": []
				},
				{
					"name": "Register Resource Action",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/resourceActions/:bindingId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"resourceActions",
								":bindingId"
							],
							"variable": [
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The resource action to be registered."
						},
						"description": "Registers a new resource action or updates information regarding an existing, registered resource action. Resource actions must be unique based on the combo of binding id and provider type/ provider. When a new resource action is registered without a catalog-assigned id, the catalog will attempt to match that action to an existing record with the same provider-binding. If successful, the existing resource action is updated. If not, the resource action is registered as a new record."
					},
					"response": []
				},
				{
					"name": "Delete Resource Action",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/resourceActions/:bindingId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"resourceActions",
								":bindingId"
							],
							"variable": [
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Marks an existing resource action as deleted."
					},
					"response": []
				},
				{
					"name": "Get Resource Type",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/resourceTypes/:typeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"resourceTypes",
								":typeId"
							],
							"variable": [
								{
									"value": "{{typeId}}",
									"id": "typeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an existing ResourceType."
					},
					"response": []
				},
				{
					"name": "Register Resource Type",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/resourceTypes/:typeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"resourceTypes",
								":typeId"
							],
							"variable": [
								{
									"value": "{{typeId}}",
									"id": "typeId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Information about the resource type."
						},
						"description": "Create a new ResourceType or update an existing one."
					},
					"response": []
				},
				{
					"name": "Delete Resource Type",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/resourceTypes/:typeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"resourceTypes",
								":typeId"
							],
							"variable": [
								{
									"value": "{{typeId}}",
									"id": "typeId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete an existing ResourceType."
					},
					"response": []
				},
				{
					"name": "Get Applicable Lifecycle Action",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/resourceTypes/:typeId/lifecycleActions/:lifecycleId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"resourceTypes",
								":typeId",
								"lifecycleActions",
								":lifecycleId"
							],
							"variable": [
								{
									"value": "{{typeId}}",
									"id": "typeId"
								},
								{
									"value": "{{lifecycleId}}",
									"id": "lifecycleId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Find the life-cycle ResourceAction applicable Resources of the given ResourceType."
					},
					"response": []
				},
				{
					"name": "Get Applicable Resource Operations",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/resourceTypes/:typeId/operations?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"resourceTypes",
								":typeId",
								"operations"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{typeId}}",
									"id": "typeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the published ResourceOperations applicable for a specific resource type."
					},
					"response": []
				},
				{
					"name": "Get Resource Count",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/resourceTypes/:typeId/resourceCount",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"resourceTypes",
								":typeId",
								"resourceCount"
							],
							"variable": [
								{
									"value": "{{typeId}}",
									"id": "typeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a resource count for all Active resources of a given resourceType."
					},
					"response": []
				},
				{
					"name": "Find Resources By Request Binding Id",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/provider/resources?providerId={{providerId}}&requestId={{requestId}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return the resources by provider id and request binding id"
					},
					"response": []
				},
				{
					"name": "Get By Cafe Resource Id",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/provider/resources/:resourceId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"provider",
								"resources",
								":resourceId"
							],
							"variable": [
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an existing Resource by cafe resource id"
					},
					"response": []
				},
				{
					"name": "Get Provider Types",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/providerTypes?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Finds all ProviderTypes."
					},
					"response": []
				},
				{
					"name": "Get Providers",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/providers?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Finds all Providers."
					},
					"response": []
				},
				{
					"name": "Get Operations",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/resourceOperations?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the ResourceOperations that the current user has permission to read."
					},
					"response": []
				},
				{
					"name": "Get Operation",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/resourceOperations/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"resourceOperations",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a ResourceOperation specified by its id."
					},
					"response": []
				},
				{
					"name": "Update Resource Operation",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/resourceOperations/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"resourceOperations",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The updated data for the resource operation."
						},
						"description": "Update an existing ResourceOperation."
					},
					"response": []
				},
				{
					"name": "Find Entitlements For Operation",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/resourceOperations/:id/entitlements?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"resourceOperations",
								":id",
								"entitlements"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get all the Entitlements that entitle the specified resource operation."
					},
					"response": []
				},
				{
					"name": "Find Operation Icon",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/resourceOperations/:id/icon",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"resourceOperations",
								":id",
								"icon"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the icon for a resource operation."
					},
					"response": []
				},
				{
					"name": "Get Resource Types",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/resourceTypes?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Finds all ResourceTypes that the user has permissions to review."
					},
					"response": []
				},
				{
					"name": "Get Services",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/services?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Finds all Services that the currently logged in user has access to."
					},
					"response": []
				},
				{
					"name": "Create Service",
					"request": {
						"url": "https://{{vra-fqdn}}/catalog-service/api/services",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The Service to be created."
						},
						"description": "Create a new Service."
					},
					"response": []
				},
				{
					"name": "Get Service",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/services/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"services",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve an existing Service. It checks if the user is permitted to view the service."
					},
					"response": []
				},
				{
					"name": "Update Service",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/services/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"services",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The service to be updated."
						},
						"description": "Updates an existing Service."
					},
					"response": []
				},
				{
					"name": "Find All Catalog Items For A Service",
					"request": {
						"url": {
							"raw": "https/:///catalog-service/api/services/:id/catalogItems?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"catalog-service",
								"api",
								"services",
								":id",
								"catalogItems"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve all the catalog items belonging to a given service."
					},
					"response": []
				}
			]
		},
		{
			"name": "Component Registry Service",
			"description": "Folder for services",
			"item": [
				{
					"name": "POST Method not allowed",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services/logging",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "DELETE Method not allowed",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services/logging",
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Sets the given level to category to all services with endpoint",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/logging/:category/level",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								"logging",
								":category",
								"level"
							],
							"variable": [
								{
									"value": "{{category}}",
									"id": "category"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "value for logging level to set"
						},
						"description": "Only for solution and system admin users"
					},
					"response": []
				},
				{
					"name": "PUT calls are not allowed",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/logging/:serviceTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								"logging",
								":serviceTypeId"
							],
							"variable": [
								{
									"value": "{{serviceTypeId}}",
									"id": "serviceTypeId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "POST calls are not allowed",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/logging/:serviceTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								"logging",
								":serviceTypeId"
							],
							"variable": [
								{
									"value": "{{serviceTypeId}}",
									"id": "serviceTypeId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "DELETE calls are not allowed",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/logging/:serviceTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								"logging",
								":serviceTypeId"
							],
							"variable": [
								{
									"value": "{{serviceTypeId}}",
									"id": "serviceTypeId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets the LoggerEntity of the given category for provided serviceTypeId",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/logging/:serviceTypeId/:category",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								"logging",
								":serviceTypeId",
								":category"
							],
							"variable": [
								{
									"value": "{{serviceTypeId}}",
									"id": "serviceTypeId"
								},
								{
									"value": "{{category}}",
									"id": "category"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only for solution and system admin users"
					},
					"response": []
				},
				{
					"name": "Sets the given severity level to category for the provided serviceTypeId",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/logging/:serviceTypeId/:category/level",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								"logging",
								":serviceTypeId",
								":category",
								"level"
							],
							"variable": [
								{
									"value": "{{serviceTypeId}}",
									"id": "serviceTypeId"
								},
								{
									"value": "{{category}}",
									"id": "category"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Value for logging level"
						},
						"description": "Only for solution and system admin users"
					},
					"response": []
				},
				{
					"name": "This is a convenience method which creates a new solution user, registers it with the SSO server, and then registers the provided service as new solution user in a single call. The serviceRegistration object passed into this method is used as a holder for solutionInfo and serviceInfo objects: 1.) solutionInfo contains info on the new solution user. 2.)serviceInfo contains info on the new service to register (created by the newly created solution user)",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services/registration",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "contains both the ServiceInfo and SolutionInfo objects so that both registrations can be done with a single call"
						},
						"description": "This should not be used by a user that's already a solution user. If you are a solution user, do a POST against /services instead. You should be logged in as the SSO administrator to call this API."
					},
					"response": []
				},
				{
					"name": "Get all serviceStatuses for services with registered status type endpoints.",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services/status?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This API returns minimal status information (service id/name/type, last updated timestamp, not available flag and the status endpoint URL). This API does not make a call to the status endpoint URL to populate more details... for that functionality, see /services/status/current"
					},
					"response": []
				},
				{
					"name": "Handler for PUT HTTP operations",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services/status",
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Simply returns HTTP 405 Method not allowed and marks in the HTTP Header that GET is allowed"
					},
					"response": []
				},
				{
					"name": "Handler for POST HTTP operations",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services/status",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Simply returns HTTP 405 Method not allowed and marks in the HTTP Header that GET is allowed"
					},
					"response": []
				},
				{
					"name": "Handler for DELETE HTTP operations",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services/status",
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Simply returns HTTP 405 Method not allowed and marks in the HTTP Header that GET is allowed"
					},
					"response": []
				},
				{
					"name": "Similar to /services/status, this API gets all serviceStatuses for services with registered status type endpoints.",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services/status/current?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This API returns the maximum amount of status information by making a connection to the url defined in the status type endpoint. It gathers the data from the ServiceRegistryStatus responses and populates it in the serviceStatus objects."
					},
					"response": []
				},
				{
					"name": "Gets the serviceStatus for the specified serviceId.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/status/current/:serviceId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								"status",
								"current",
								":serviceId"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This API returns the maximum amount of status information by making a connection to the url defined in the status type endpoint. It gathers the data from then ServiceRegistryStatus responses and populates it in the ServiceStatus objects. Note: This service request makes a call to an external system."
					},
					"response": []
				},
				{
					"name": "Gets all distinct service types in the system.",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services/types?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "providing the currently requested pagination and sorting parameters"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets all services associated with the provided serviceTypeId.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/types/:serviceTypeId?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								"types",
								":serviceTypeId"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{serviceTypeId}}",
									"id": "serviceTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "providing the currently requested pagination and sorting parameters"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets the default service associated with the provided serviceTypeId. The 'default' service is the service instance that was most recently updated and is available. If there are no available services matching serviceTypeId, then it returns the service most recently updated ",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/types/:serviceTypeId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								"types",
								":serviceTypeId",
								"default"
							],
							"variable": [
								{
									"value": "{{serviceTypeId}}",
									"id": "serviceTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets all endpoints associated with services that match the provided serviceTypeId.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/types/:serviceTypeId/endpoints?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								"types",
								":serviceTypeId",
								"endpoints"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{serviceTypeId}}",
									"id": "serviceTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "providing the currently requested pagination and sorting parameters"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets all distinct endpoint types associated with endpoints with services that match the provided serviceTypeId.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/types/:serviceTypeId/endpoints/types?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								"types",
								":serviceTypeId",
								"endpoints",
								"types"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{serviceTypeId}}",
									"id": "serviceTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "providing the currently requested pagination and sorting parameters"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets all endpoints associated with services that match the provided serviceTypeId AND that match the provided endpointTypeId.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/types/:serviceTypeId/endpoints/:endpointTypeId?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								"types",
								":serviceTypeId",
								"endpoints",
								":endpointTypeId"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{serviceTypeId}}",
									"id": "serviceTypeId"
								},
								{
									"value": "{{endpointTypeId}}",
									"id": "endpointTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "providing the currently requested pagination and sorting parameters"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets the service identified by id.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update or create a service.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the full details of the service to save"
						},
						"description": "Only available to solution users"
					},
					"response": []
				},
				{
					"name": "Create or update a service.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the full details of the service to save"
						},
						"description": "Only available to solution users"
					},
					"response": []
				},
				{
					"name": "Removes (i.e.: deregisters) the service matching the provided id.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only available to solution users"
					},
					"response": []
				},
				{
					"name": "Gets all endpoint instances for a given service instance.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/:id/endpoints?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								":id",
								"endpoints"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets the endpoint instance that implements endpointTypeId for a given service instance.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/:id/endpoints/:endpointTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								":id",
								"endpoints",
								":endpointTypeId"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{endpointTypeId}}",
									"id": "endpointTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Updates or creates an endpoint associated with the provided service id and endpointTypeId.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/:id/endpoints/:endpointTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								":id",
								"endpoints",
								":endpointTypeId"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{endpointTypeId}}",
									"id": "endpointTypeId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the endpoint to update or create"
						},
						"description": "Only available to solution users"
					},
					"response": []
				},
				{
					"name": "Deletes the endpoint associated with the provided service id and endpointTypeId.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/services/:id/endpoints/:endpointTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"services",
								":id",
								"endpoints",
								":endpointTypeId"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{endpointTypeId}}",
									"id": "endpointTypeId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only available to solution users"
					},
					"response": []
				},
				{
					"name": "GET Method not allowed",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services/logging",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Creates a new ModelAndView object with 'docs/odata'view name and sets the base bath to /services ",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services/docs/odata",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets a new ModelAndView object with 'docs/auth' view name and sets the base bath to /services",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services/docs/auth",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets all documentation endpoints",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services/docs",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Registers a new service to the component registry.",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the service to register"
						},
						"description": "Only available to solution users."
					},
					"response": []
				},
				{
					"name": "Gets all registered services",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/services?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "providing the currently requested pagination and sorting parameters"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "API to generate a resolved link which points to a specific UI page and takes into account anyrequired parameters for the UI view page to render properly. The best way to see how to usethis API is by looking at a real-world example.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/api/tenants/:tenantId/links",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"api",
								"tenants",
								":tenantId",
								"links"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the request containing details on the link to resolve"
						},
						"description": "Here's the scenario: you want to generate a clickable link that takes the end user to the page that lets them see the details of a specific catalog request. Here's what you will need in order to use this API:\nthe place identifying the page in the UI to display. If you use the UI in a browser, you'll see this in the URL. In our example, visit a page that displays a specific request, and you'll see that the place associated with that page is: csp.catalog.request.submitteddetails next, you'll need to populate all necessary params that the UI page requires. Again, if you use a browser, you can see what these params are. For our scenario, the necessary param keys are:\n\trequestId\n\tcatalogItemId\nOnce you have this information (along with the value to our required keys mentioned earlier, you are ready to craft a linkResolveRequest. Below is example JSON. Clearly, you'll need to supply your appropriate values for requestId and catalogItemId\n\n{\n\t\t\"links\" : [ {\n\t\t\t\t\"place\" : \"csp.catalog.request.submitteddetails\",\n\t\t\t\t\"params\" : [ {\n\t\t\t\t\t\t\"key\" : \"requestId\",\n\t\t\t\t\t\t\"value\" : \"f301558a-4789-4d64-ae84-736d9245a243\"\n\t\t\t\t}, {\n\t\t\t\t\t\t\"key\" : \"catalogItemId\",\n\t\t\t\t\t\t\"value\" : \"de3ac822-6f97-40bc-a53d-d034deb95b3d\"\n\t\t\t\t} ]\n\t\t} ]\n}\n\nOnce you POST against this API supplying your link request, you'll get the hrefs that you can embed in emails or use directly. If properly submitted, This API's response might look something like below, which can be used to direct a user to the configured page in the UI:\n\n{\n\t\t\"hrefs\":[\"https://vra-host.company.com/vcac/org/qe/#csp.catalog.request.submitteddetails%5BrequestId:=f301558a-4789-4d64-ae84-736d9245a243,catalogItemId:=de3ac822f97-40bc-a53d-d034deb95b3d\"]\n}\n\nSolution users only"
					},
					"response": []
				},
				{
					"name": "the endpoint containing the desired updates the id",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only available to solution users"
					},
					"response": []
				},
				{
					"name": "This method updates the endpoint identified by the id",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the endpoint containing the desired updates"
						},
						"description": "This method will throw a 404 NOT_FOUND exception if the endpoint doesn't existalready. To create an endpoint, execute a POST against /services/{id}/endpoints/{endpointTypeId} Only available to solution userO"
					},
					"response": []
				},
				{
					"name": "Gets the endpoint identified by id",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets the 'default' endpoint instance that implements the provided endpointTypeId. The 'default' endpoint is the most recently updated endpoint associated to an available service instance. If no endpoints exist with an available service, then the most recently updated endpoint is returned.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/types/:endpointTypeId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								"types",
								":endpointTypeId",
								"default"
							],
							"variable": [
								{
									"value": "{{endpointTypeId}}",
									"id": "endpointTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets all endpoint instances that implement the provided endpointTypeId",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/types/:endpointTypeId?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								"types",
								":endpointTypeId"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{endpointTypeId}}",
									"id": "endpointTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "providing the currently requested pagination and sorting parameters"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets the default endpoint associated with the SSO server endpoint type.",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/endpoints/types/sso",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Deletes a EndPointTypeSpec resource by typeId. No action will be performed if such a resource does not exist and a successful completion will be reported. ",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/types/specs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								"types",
								"specs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Beta - experimental not supported API!\n\nSolution user only."
					},
					"response": []
				},
				{
					"name": "Updates an already existing EndPointTypeSpec resource.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/types/specs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								"types",
								"specs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the EndPointTypeSpec resource to be created or updated."
						},
						"description": "Beta - experimental not supported API!\n\nSolution users only"
					},
					"response": []
				},
				{
					"name": " Gets the EndPointTypeSpec resource by typeId.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/types/specs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								"types",
								"specs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Beta - experimental not supported API!"
					},
					"response": []
				},
				{
					"name": "Creates a new EndPointTypeSpec resource or updates an already existing one.",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/endpoints/types/specs",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the EndPointTypeSpec resource to be created or updated."
						},
						"description": "Beta - experimental not supported API!\n\nSolution users only."
					},
					"response": []
				},
				{
					"name": "the id of the EndPointTypeSpec",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/endpoints/types/specs?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "paging, sorting and filtering parameters"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets the default endpoint associated with the identity service's token endpoint (used to create Bearer tokens).",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/endpoints/types/identity/token",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Deletes a EndPointTypeExtension resource by ID. No action will be performed if such a resource does not exist and a successful completion will be reported.  Only the initial owner of the EndPointTypeExtension resource can delete it. HTTP Status 403 - Forbidden will be returned if other user tries to update a EndPointTypeExtension resource.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/types/extensions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								"types",
								"extensions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Beta - experimental not supported API!\n\nSolution user only"
					},
					"response": []
				},
				{
					"name": "Creates a new EndPointTypeExtension resource or updates an already existing one. The id of the EndPointTypeExtension must be provided by the client and have to be unique within the system. The recommended format is namespace notation (ex: id=\"com.company.type....).",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/types/extensions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								"types",
								"extensions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the EndPointTypeExtension resource to be created or updated"
						},
						"description": "Beta - experimental not supported API!\n\nSolution user only"
					},
					"response": []
				},
				{
					"name": "Gets the EndPointTypeExtension resource by ID.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/types/extensions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								"types",
								"extensions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Beta - experimental not supported API!\n\nSolution users only."
					},
					"response": []
				},
				{
					"name": "Creates a new EndPointTypeExtension resource or updates an already existing one. The id of the EndPointTypeExtension must be provided by the client and have to be unique within the system. The recommended format is namespace notation (ex: id=\"com.company.type....).",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/endpoints/types/extensions",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "EndPointTypeExtension resource to be created or updated."
						},
						"description": "Beta - experimental not supported API!\n\nSolution users only."
					},
					"response": []
				},
				{
					"name": "Retrieves all or filtered by a criteria EndPointTypeExtension resources in the system.",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/endpoints/types/extensions?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "paging, sorting and filtering parameters"
						},
						"description": "Beta - experimental not supported API!"
					},
					"response": []
				},
				{
					"name": "Gets all distinct endpoint types",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/endpoints/types?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "providing the currently requested pagination and sorting parameters"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Submits an updated version of an EndPoint through the EndPointFormData resource. The values in the form submitted will be used to update an existing EndPoint with the provided endpointId as part of the URL parameters.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/forms/:endpointId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								"forms",
								":endpointId"
							],
							"variable": [
								{
									"value": "{{endpointId}}",
									"id": "endpointId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "EndPointFormData resource containing the updated values for an existing  EndPoint instance"
						},
						"description": "Beta - experimental not supported API! System and tenant admin only."
					},
					"response": []
				},
				{
					"name": "Gets an edit  Form resource by endpointId. The form provided will be a composition of all forms registered via an  EndPointTypeExtension instance and the base Form generated based on the  EndPointTypeSpec ",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/forms/:endpointId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								"forms",
								":endpointId"
							],
							"variable": [
								{
									"value": "{{endpointId}}",
									"id": "endpointId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Beta - experimental not supported API! System and tenant admi only."
					},
					"response": []
				},
				{
					"name": "Submits a new  EndPointFormData resource by endpointTypeId. The values in the form submitted will be used to create a new  EndPoint of the provided enpointTypeId.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/forms/types/:endpointTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								"forms",
								"types",
								":endpointTypeId"
							],
							"variable": [
								{
									"value": "{{endpointTypeId}}",
									"id": "endpointTypeId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "EndPointFormData resource containing the values for the new Endpoint instance to be created"
						},
						"description": "Beta - experimental not supported API! System or tenant admin only."
					},
					"response": []
				},
				{
					"name": "Gets a new Form resource by endpointTypeId. The form provided will be a composition of all forms registered via an EndPointTypeExtension instance and the base Form generated based on the EndPointTypeSpec.",
					"request": {
						"url": {
							"raw": "https/:///component-registry/endpoints/forms/types/:endpointTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"endpoints",
								"forms",
								"types",
								":endpointTypeId"
							],
							"variable": [
								{
									"value": "{{endpointTypeId}}",
									"id": "endpointTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Beta - experimental not supported API! System or tenant admins only."
					},
					"response": []
				},
				{
					"name": "Gets all endpoints",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/endpoints?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "providing the currently requested pagination and sorting parameters"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Composition Service",
			"description": "Folder for api",
			"item": [
				{
					"name": "Get Blueprint Documents",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/blueprintdocuments?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a list of composite blueprint documents visible to the caller."
					},
					"response": []
				},
				{
					"name": "Get Blueprint Document",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/blueprintdocuments/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"blueprintdocuments",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get an existing composite blueprint document by its objectId."
					},
					"response": []
				},
				{
					"name": "Create or Update Blueprint Document",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/blueprintdocuments/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"blueprintdocuments",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The new blueprint to create."
						},
						"description": "Create or update a composite blueprint document."
					},
					"response": []
				},
				{
					"name": "Delete Blueprint Document",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/blueprintdocuments/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"blueprintdocuments",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete an existing composite blueprint document by its objectId."
					},
					"response": []
				},
				{
					"name": "Get Blueprints",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/blueprints?={{}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a list of composite blueprints visible to the caller."
					},
					"response": []
				},
				{
					"name": "Create Blueprint",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/blueprints?={{}}",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The new blueprint to create."
						},
						"description": "Create a new composite blueprint."
					},
					"response": []
				},
				{
					"name": "Get Deployment Component Costs",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/blueprints/deployments/:id/costs/upfront",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"blueprints",
								"deployments",
								":id",
								"costs",
								"upfront"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Catalog request data (owner, tenant, business-group, blueprint, request properties)."
						},
						"description": "Get effective schema from deployment associated with given resource."
					},
					"response": []
				},
				{
					"name": "Get Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/blueprints/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"blueprints",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get an existing composite blueprint by its objectId."
					},
					"response": []
				},
				{
					"name": "Update Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/blueprints/:id?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"blueprints",
								":id"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The updated blueprint data."
						},
						"description": "Update an existing composite blueprint."
					},
					"response": []
				},
				{
					"name": "Delete Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/blueprints/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"blueprints",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete an existing composite blueprint by its objectId."
					},
					"response": []
				},
				{
					"name": "Get Blueprint Component Costs",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/blueprints/:id/costs/upfront",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"blueprints",
								":id",
								"costs",
								"upfront"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Catalog request data (owner, tenant, business-group, blueprint, request properties)."
						},
						"description": "Get effective schema from blueprint associated with given resource."
					},
					"response": []
				},
				{
					"name": "Update Blueprint Publish-Status",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/blueprints/:id/status",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"blueprints",
								":id",
								"status"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The new PublishStatus value for the blueprint."
						},
						"description": "Update the publish-status of an existing composite blueprint."
					},
					"response": []
				},
				{
					"name": "API to query all CompositeCategory",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/categories",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "PUT not allowed",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/categories",
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "POST not allowed",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/categories",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "DELETE not allowed",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/categories",
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get Effective Component Schema",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/componentresources/providers/:providerId/bindings/:bindingId/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"componentresources",
								"providers",
								":providerId",
								"bindings",
								":bindingId",
								"schema"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get effective schema from blueprint associated with given resource."
					},
					"response": []
				},
				{
					"name": "Get Component Type Counts",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/componenttypecounts?={{}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a list of component type counts for each categoryId/serviceTypeId."
					},
					"response": []
				},
				{
					"name": "Get Component Types",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/componenttypes?blueprintId={{blueprintId}}&fetchSchema={{fetchSchema}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a list of component types visible to the caller."
					},
					"response": []
				},
				{
					"name": "Create Component Type",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/componenttypes",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The new component type to create."
						},
						"description": "Create a new component type."
					},
					"response": []
				},
				{
					"name": "Get Component Type Authoring Form",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/componenttypes/:id/forms/author",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"componenttypes",
								":id",
								"forms",
								"author"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the authoring form for component type."
					},
					"response": []
				},
				{
					"name": "Get Component Type Element Authoring Form Metadata",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/componenttypes/:id/forms/author/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"componenttypes",
								":id",
								"forms",
								"author",
								"update"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Information required to complete the request."
						},
						"description": "Get the metadata of one or more elements within the authoring form of a specified component type."
					},
					"response": []
				},
				{
					"name": "Get Component Type Element Authoring Form Values",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/componenttypes/:id/forms/author/:elementId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"componenttypes",
								":id",
								"forms",
								"author",
								":elementId",
								"values"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{elementId}}",
									"id": "elementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Information required to complete the request."
						},
						"description": "Get the permissible values for an element within the authoring form of a specified component type."
					},
					"response": []
				},
				{
					"name": "Get Component Type",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/componenttypes/:objectId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"componenttypes",
								":objectId"
							],
							"variable": [
								{
									"value": "{{objectId}}",
									"id": "objectId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get an existing component type by its objectId."
					},
					"response": []
				},
				{
					"name": "Create or Update Component Type",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/componenttypes/:objectId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"componenttypes",
								":objectId"
							],
							"variable": [
								{
									"value": "{{objectId}}",
									"id": "objectId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The component type to create or update."
						},
						"description": "Create or update a component type."
					},
					"response": []
				},
				{
					"name": "Delete Component Type",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/componenttypes/:objectId?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"componenttypes",
								":objectId"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{objectId}}",
									"id": "objectId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes an existing component type by its objectId."
					},
					"response": []
				},
				{
					"name": "Get Component Type Schema",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/componenttypes/:objectId/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"componenttypes",
								":objectId",
								"schema"
							],
							"variable": [
								{
									"value": "{{objectId}}",
									"id": "objectId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema for an existing component type by the component type's objectId."
					},
					"response": []
				},
				{
					"name": "Submit Composition Service Request",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/composition/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Request data, including blueprint information."
						},
						"description": "Kick off the provisioning of a nested blueprint."
					},
					"response": []
				},
				{
					"name": "Create or Update Content",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/content",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The import request data."
						},
						"description": "Callback to save content."
					},
					"response": []
				},
				{
					"name": "Get Content",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/content/:classId/:id?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"content",
								":classId",
								":id"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get raw content for specified class id and id."
					},
					"response": []
				},
				{
					"name": "Get a set of data for the specified object",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/data-service/data/:classId/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"data-service",
								"data",
								":classId",
								":id"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a set of data for the specified object."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of possible values for a given type of object",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/data-service/list/:classId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"data-service",
								"list",
								":classId",
								"default"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of possible values for a given type of object."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of possible values for a given type of object",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/data-service/list/:classId/types/:typeFilter",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"data-service",
								"list",
								":classId",
								"types",
								":typeFilter"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of possible values for a given type of object."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object class",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/data-service/schema/:classId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"default"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema for the specified object class."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/data-service/schema/:classId/default/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"default",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/data-service/schema/:classId/default/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"default",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/data-service/schema/:classId/instances/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This returns the schema of a particular type adjusted to the state of a specific instance.."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/data-service/schema/:classId/instances/:id/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/data-service/schema/:classId/instances/:id/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object type",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/data-service/schema/:classId/types/:typeFilter",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This returns the schema of a particular type within a class of object."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/data-service/schema/:classId/types/:typeFilter/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/data-service/schema/:classId/types/:typeFilter/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get Deployment Resource",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/deploymentresources/requests/:cafeRequestId?includeComponentResourceData={{includeComponentResourceData}}&includeDescriptionAndReasons={{includeDescriptionAndReasons}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"deploymentresources",
								"requests",
								":cafeRequestId"
							],
							"query": [
								{
									"key": "includeComponentResourceData",
									"value": "{{includeComponentResourceData}}"
								},
								{
									"key": "includeDescriptionAndReasons",
									"value": "{{includeDescriptionAndReasons}}"
								}
							],
							"variable": [
								{
									"value": "{{cafeRequestId}}",
									"id": "cafeRequestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get an existing deployment resource by a Cafe Request ID."
					},
					"response": []
				},
				{
					"name": "Get Deployment Resource",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/deploymentresources/resources/:cafeResourceId?includeComponentResourceData={{includeComponentResourceData}}&includeDescriptionAndReasons={{includeDescriptionAndReasons}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"deploymentresources",
								"resources",
								":cafeResourceId"
							],
							"query": [
								{
									"key": "includeComponentResourceData",
									"value": "{{includeComponentResourceData}}"
								},
								{
									"key": "includeDescriptionAndReasons",
									"value": "{{includeDescriptionAndReasons}}"
								}
							],
							"variable": [
								{
									"value": "{{cafeResourceId}}",
									"id": "cafeResourceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get an existing deployment resource by its Cafe Resource ID."
					},
					"response": []
				},
				{
					"name": "Get Deployment Resource",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/deploymentresources/:id?includeComponentResourceData={{includeComponentResourceData}}&includeDescriptionAndReasons={{includeDescriptionAndReasons}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"deploymentresources",
								":id"
							],
							"query": [
								{
									"key": "includeComponentResourceData",
									"value": "{{includeComponentResourceData}}"
								},
								{
									"key": "includeDescriptionAndReasons",
									"value": "{{includeDescriptionAndReasons}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get an existing deployment resource by its id."
					},
					"response": []
				},
				{
					"name": "Create Deployment for Existing Resources",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/deploymentresources/:tenantId?upgrade={{upgrade}}&dryRun={{dryRun}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"deploymentresources",
								":tenantId"
							],
							"query": [
								{
									"key": "upgrade",
									"value": "{{upgrade}}"
								},
								{
									"key": "dryRun",
									"value": "{{dryRun}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Data for creation of new deployment."
						},
						"description": "Import existing resources under a new deployment."
					},
					"response": []
				},
				{
					"name": "Create Deployment In-Place for Multi-Machine Resource",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/deploymentresources/:tenantId/upgrade",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"deploymentresources",
								":tenantId",
								"upgrade"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Data for creation of new deployment."
						},
						"description": "Upgrade existing, legacy multi-machine resource to a new deployment in-place."
					},
					"response": []
				},
				{
					"name": "Mark Request Complete",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/providers/:providerId/requests/:bindingId/complete",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"providers",
								":providerId",
								"requests",
								":bindingId",
								"complete"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Request completion data sent by the provider."
						},
						"description": "Provider method to notify composition service that a request is complete."
					},
					"response": []
				},
				{
					"name": "Mark Allocation Request Complete",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/providers/:providerId/requests/:bindingId/complete/allocation",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"providers",
								":providerId",
								"requests",
								":bindingId",
								"complete",
								"allocation"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Request completion data sent by the provider."
						},
						"description": "Provider method to notify composition service that an allocation request is complete."
					},
					"response": []
				},
				{
					"name": "Validate Request",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/requestValidations",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Request data."
						},
						"description": "Validate a request to provision a blueprint, or a resource action."
					},
					"response": []
				},
				{
					"name": "Submit Request",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Request data."
						},
						"description": "Kick off the provisioning of a blueprint, or a resource action, using provided request data."
					},
					"response": []
				},
				{
					"name": "Get BlueprintNode Tree for a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/catalog/:cafeRequestId/hierarchy",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"catalog",
								":cafeRequestId",
								"hierarchy"
							],
							"variable": [
								{
									"value": "{{cafeRequestId}}",
									"id": "cafeRequestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the tree of BlueprintNode instances for a blueprint that has been requested through a catalog item."
					},
					"response": []
				},
				{
					"name": "Get the Request Schema for a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/catalog/:cafeRequestId/hierarchy/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"catalog",
								":cafeRequestId",
								"hierarchy",
								"schema"
							],
							"variable": [
								{
									"value": "{{cafeRequestId}}",
									"id": "cafeRequestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the request schema (component schemas not included) for a blueprint, given a catalog request id."
					},
					"response": []
				},
				{
					"name": "Get Updates to the Request Schema of a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/catalog/:cafeRequestId/hierarchy/schema/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"catalog",
								":cafeRequestId",
								"hierarchy",
								"schema",
								"update"
							],
							"variable": [
								{
									"value": "{{cafeRequestId}}",
									"id": "cafeRequestId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "An ElementMetadataRequest instance containing the affected elements."
						},
						"description": "Get updates to the request schema of a blueprint, given a catalog request id and based on provided inputs. Example uses of this API include returning dynamic property value choices."
					},
					"response": []
				},
				{
					"name": "Get the Component Type Schema for a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/catalog/:cafeRequestId/hierarchy/typeSchema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"catalog",
								":cafeRequestId",
								"hierarchy",
								"typeSchema"
							],
							"variable": [
								{
									"value": "{{cafeRequestId}}",
									"id": "cafeRequestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the component type schema (component schemas not included) for a blueprint, given a catalog request id."
					},
					"response": []
				},
				{
					"name": "Get the Request Schema for a Component in a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/catalog/:cafeRequestId/hierarchy/:compPath/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"catalog",
								":cafeRequestId",
								"hierarchy",
								":compPath",
								"schema"
							],
							"variable": [
								{
									"value": "{{cafeRequestId}}",
									"id": "cafeRequestId"
								},
								{
									"value": "{{compPath}}",
									"id": "compPath"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the request schema for a component within a blueprint, given a catalog request id."
					},
					"response": []
				},
				{
					"name": "Get Updates to the Request Schema of a Component in a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/catalog/:cafeRequestId/hierarchy/:compPath/schema/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"catalog",
								":cafeRequestId",
								"hierarchy",
								":compPath",
								"schema",
								"update"
							],
							"variable": [
								{
									"value": "{{cafeRequestId}}",
									"id": "cafeRequestId"
								},
								{
									"value": "{{compPath}}",
									"id": "compPath"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "An ElementMetadataRequest instance containing the affected elements."
						},
						"description": "Get updates to the request schema of a component in a requested blueprint, given a catalog request id and based on provided inputs. Example uses of this API include returning dynamic property value choices."
					},
					"response": []
				},
				{
					"name": "Get the Request Form for a Component in a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/catalog/:cafeRequestId/hierarchy/:fieldPath/form/:formType",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"catalog",
								":cafeRequestId",
								"hierarchy",
								":fieldPath",
								"form",
								":formType"
							],
							"variable": [
								{
									"value": "{{cafeRequestId}}",
									"id": "cafeRequestId"
								},
								{
									"value": "{{fieldPath}}",
									"id": "fieldPath"
								},
								{
									"value": "{{formType}}",
									"id": "formType"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the request form for a component within a blueprint, given a catalog request id."
					},
					"response": []
				},
				{
					"name": "Get Updates to the Request Form of a Component in a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/catalog/:cafeRequestId/hierarchy/:fieldPath/form/:formType/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"catalog",
								":cafeRequestId",
								"hierarchy",
								":fieldPath",
								"form",
								":formType",
								"update"
							],
							"variable": [
								{
									"value": "{{cafeRequestId}}",
									"id": "cafeRequestId"
								},
								{
									"value": "{{fieldPath}}",
									"id": "fieldPath"
								},
								{
									"value": "{{formType}}",
									"id": "formType"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "An ElementMetadataRequest instance containing the affected elements."
						},
						"description": "Get updates to the request form of a component in a requested blueprint, given a catalog request id and based on provided inputs. Example uses of this API include returning dynamic property value choices."
					},
					"response": []
				},
				{
					"name": "Get the Possible Values for a Form Field of a Component in a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/catalog/:cafeRequestId/hierarchy/:fieldPath/form/:formType/:formElementId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"catalog",
								":cafeRequestId",
								"hierarchy",
								":fieldPath",
								"form",
								":formType",
								":formElementId",
								"values"
							],
							"variable": [
								{
									"value": "{{cafeRequestId}}",
									"id": "cafeRequestId"
								},
								{
									"value": "{{fieldPath}}",
									"id": "fieldPath"
								},
								{
									"value": "{{formType}}",
									"id": "formType"
								},
								{
									"value": "{{formElementId}}",
									"id": "formElementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "An ElementValuesRequest specifying the dependency values from the current form state  and any search text provided by the user to filter the possible values."
						},
						"description": "Get the possible values for a specific field in the request form of a component in a blueprint, given a catalog request id."
					},
					"response": []
				},
				{
					"name": "Get the Component Type Schema for a Component in a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/catalog/:cafeRequestId/hierarchy/:fieldPath/typeSchema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"catalog",
								":cafeRequestId",
								"hierarchy",
								":fieldPath",
								"typeSchema"
							],
							"variable": [
								{
									"value": "{{cafeRequestId}}",
									"id": "cafeRequestId"
								},
								{
									"value": "{{fieldPath}}",
									"id": "fieldPath"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the component type schema for a component within a blueprint, given a catalog request id."
					},
					"response": []
				},
				{
					"name": "Get Blueprint Requests spawned from a Catalog Request",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/external/:catalogRequestId/info",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"external",
								":catalogRequestId",
								"info"
							],
							"variable": [
								{
									"value": "{{catalogRequestId}}",
									"id": "catalogRequestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get information about all the top-level (not nested) blueprint requests that were spawned from a catalog request."
					},
					"response": []
				},
				{
					"name": "Get Blueprint Request's targeted fully-resolved state from a Catalog Request",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/external/:catalogRequestId/state",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"external",
								":catalogRequestId",
								"state"
							],
							"variable": [
								{
									"value": "{{catalogRequestId}}",
									"id": "catalogRequestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the targeted fully-resolved state for a blueprint request spawned from a catalog request."
					},
					"response": []
				},
				{
					"name": "Get the preceding Blueprint Request's targeted fully-resolved state from a Catalog Request",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/external/:catalogRequestId/state/preceding",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"external",
								":catalogRequestId",
								"state",
								"preceding"
							],
							"variable": [
								{
									"value": "{{catalogRequestId}}",
									"id": "catalogRequestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the targeted fully-resolved state for the blueprint request prior to the blueprint request spawned from a catalog request."
					},
					"response": []
				},
				{
					"name": "Get BlueprintNode Tree for a Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/hierarchy/:blueprintId?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"hierarchy",
								":blueprintId"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the tree of BlueprintNode instances that are based on component containment in a blueprint."
					},
					"response": []
				},
				{
					"name": "Get the Request Schema for a Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/hierarchy/:blueprintId/schema?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"hierarchy",
								":blueprintId",
								"schema"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the request schema (component schemas not included) for a blueprint."
					},
					"response": []
				},
				{
					"name": "Get Updates to the Request Schema of a Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/hierarchy/:blueprintId/schema/update?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"hierarchy",
								":blueprintId",
								"schema",
								"update"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "An ElementMetadataRequest instance containing the affected elements."
						},
						"description": "Get updates to the request schema of a blueprint based on provided inputs. Example uses of this API include returning dynamic property value choices."
					},
					"response": []
				},
				{
					"name": "Get the Component Type Schema for a Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/hierarchy/:blueprintId/typeSchema?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"hierarchy",
								":blueprintId",
								"typeSchema"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the component type schema (component schemas not included) for a blueprint."
					},
					"response": []
				},
				{
					"name": "Get the Request Form for a Blueprint Component",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/hierarchy/:blueprintId/:fieldPath/form/:formType?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"hierarchy",
								":blueprintId",
								":fieldPath",
								"form",
								":formType"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								},
								{
									"value": "{{fieldPath}}",
									"id": "fieldPath"
								},
								{
									"value": "{{formType}}",
									"id": "formType"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the request form for a component within a blueprint."
					},
					"response": []
				},
				{
					"name": "Get Updates to the Request Form of a Blueprint Component",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/hierarchy/:blueprintId/:fieldPath/form/:formType/update?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"hierarchy",
								":blueprintId",
								":fieldPath",
								"form",
								":formType",
								"update"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								},
								{
									"value": "{{fieldPath}}",
									"id": "fieldPath"
								},
								{
									"value": "{{formType}}",
									"id": "formType"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "An ElementMetadataRequest instance containing the affected elements."
						},
						"description": "Get updates to the request form of a component within a blueprint based on provided inputs. Example uses of this API include returning dynamic property value choices."
					},
					"response": []
				},
				{
					"name": "Get the Possible Values for a Form Field of a Component in a Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/hierarchy/:blueprintId/:fieldPath/form/:formType/:formElementId/values?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"hierarchy",
								":blueprintId",
								":fieldPath",
								"form",
								":formType",
								":formElementId",
								"values"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								},
								{
									"value": "{{fieldPath}}",
									"id": "fieldPath"
								},
								{
									"value": "{{formType}}",
									"id": "formType"
								},
								{
									"value": "{{formElementId}}",
									"id": "formElementId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "An ElementValuesRequest specifying the dependency values from the current form state  and any search text provided by the user to filter the possible values."
						},
						"description": "Get the possible values for a specific field in the request form of a component in a blueprint."
					},
					"response": []
				},
				{
					"name": "Get the Request Schema for a Blueprint Component",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/hierarchy/:blueprintId/:fieldPath/schema?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"hierarchy",
								":blueprintId",
								":fieldPath",
								"schema"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								},
								{
									"value": "{{fieldPath}}",
									"id": "fieldPath"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the request schema for a component within a blueprint."
					},
					"response": []
				},
				{
					"name": "Get Updates to the Request Schema of a Blueprint Component",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/hierarchy/:blueprintId/:fieldPath/schema/update?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"hierarchy",
								":blueprintId",
								":fieldPath",
								"schema",
								"update"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								},
								{
									"value": "{{fieldPath}}",
									"id": "fieldPath"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "An ElementMetadataRequest instance containing the affected elements."
						},
						"description": "Get updates to the request schema of a component within a blueprint based on provided inputs. Example uses of this API include returning dynamic property value choices."
					},
					"response": []
				},
				{
					"name": "Get the Component Type Schema for a Blueprint Component",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/hierarchy/:blueprintId/:fieldPath/typeSchema?subtenantId={{subtenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								"hierarchy",
								":blueprintId",
								":fieldPath",
								"typeSchema"
							],
							"query": [
								{
									"key": "subtenantId",
									"value": "{{subtenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{blueprintId}}",
									"id": "blueprintId"
								},
								{
									"value": "{{fieldPath}}",
									"id": "fieldPath"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the component type schema for a component within a blueprint."
					},
					"response": []
				},
				{
					"name": "Initialize Request",
					"request": {
						"url": "https://{{vra-fqdn}}/composition-service/api/requests/request_initializer",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Request data."
						},
						"description": "Initialize a request to provision a blueprint, or a resource action. Do not kick off the request."
					},
					"response": []
				},
				{
					"name": "Get Status of a Blueprint Request",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/:blueprintRequestId/status",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								":blueprintRequestId",
								"status"
							],
							"variable": [
								{
									"value": "{{blueprintRequestId}}",
									"id": "blueprintRequestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get status of a blueprint request along with status information for all its component requests."
					},
					"response": []
				},
				{
					"name": "Delete Request",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/:callbackRequestId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								":callbackRequestId"
							],
							"variable": [
								{
									"value": "{{callbackRequestId}}",
									"id": "callbackRequestId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete an initialized request, such as when it is not approved prior to being submitted."
					},
					"response": []
				},
				{
					"name": "Get Request Data for Blueprint Component and Request",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/:requestId/components/:componentPath/data",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								":requestId",
								"components",
								":componentPath",
								"data"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								},
								{
									"value": "{{componentPath}}",
									"id": "componentPath"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Contains two pieces of information: 1) Literal map of Catalog-specific request data and 2) Dynamic data request that contains specific fields to resolve."
						},
						"description": "Returns request data for the specified ComponentDeclaration (via componentPath) for the given blueprint request)."
					},
					"response": []
				},
				{
					"name": "Get Request Data LiteralMap for Blueprint and Request",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/:requestId/data",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								":requestId",
								"data"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Contains literal map of Catalog-specific request data."
						},
						"description": "Returns request data for the specified ComponentDeclaration (via componentPath) for the given blueprint request)."
					},
					"response": []
				},
				{
					"name": "Get Requested Item Metadata",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/:requestId/metadata",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								":requestId",
								"metadata"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get metadata for item requested by given request id."
					},
					"response": []
				},
				{
					"name": "Rollback Request",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/:requestId/rollback",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								":requestId",
								"rollback"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Rollback request data."
						},
						"description": "Trigger rollback of a request, such as when it is rejected during the approval process."
					},
					"response": []
				},
				{
					"name": "Get the Request Schema for a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/:requestId/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								":requestId",
								"schema"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the request schema (component schemas not included) for a blueprint, given a blueprint request id."
					},
					"response": []
				},
				{
					"name": "Get Updates to the Request Schema of a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/:requestId/schema/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								":requestId",
								"schema",
								"update"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "An ElementMetadataRequest instance containing the affected elements."
						},
						"description": "Get updates to the request schema of a blueprint, given a blueprint request id and based on provided inputs. Example uses of this API include returning dynamic property value choices."
					},
					"response": []
				},
				{
					"name": "Get the Request Schema for a Component in a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/:requestId/:compPath/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								":requestId",
								":compPath",
								"schema"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								},
								{
									"value": "{{compPath}}",
									"id": "compPath"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the request schema for a component within a blueprint, given a blueprint request id."
					},
					"response": []
				},
				{
					"name": "Get Updates to the Request Schema of a Component in a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/requests/:requestId/:compPath/schema/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"requests",
								":requestId",
								":compPath",
								"schema",
								"update"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								},
								{
									"value": "{{compPath}}",
									"id": "compPath"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "An ElementMetadataRequest instance containing the affected elements."
						},
						"description": "Get updates to the request schema of a component in a requested blueprint, given a blueprint request id and based on provided inputs. Example uses of this API include returning dynamic property value choices."
					},
					"response": []
				},
				{
					"name": "Get BlueprintNode Tree for a Requested Blueprint",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/resources/catalog/:cafeResourceId/hierarchy",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"resources",
								"catalog",
								":cafeResourceId",
								"hierarchy"
							],
							"variable": [
								{
									"value": "{{cafeResourceId}}",
									"id": "cafeResourceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the tree of BlueprintNode instances for a snapshotted blueprint contained within a deployment given its catalog resource ID."
					},
					"response": []
				},
				{
					"name": "Get the Request Schema for a Requested Deployment",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/resources/catalog/:cafeResourceId/hierarchy/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"resources",
								"catalog",
								":cafeResourceId",
								"hierarchy",
								"schema"
							],
							"variable": [
								{
									"value": "{{cafeResourceId}}",
									"id": "cafeResourceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the request schema (component schemas not included) for a deployment, given a catalog resource ID."
					},
					"response": []
				},
				{
					"name": "Get the Component Type Schema for a Requested Deployment",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/resources/catalog/:cafeResourceId/hierarchy/typeSchema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"resources",
								"catalog",
								":cafeResourceId",
								"hierarchy",
								"typeSchema"
							],
							"variable": [
								{
									"value": "{{cafeResourceId}}",
									"id": "cafeResourceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the component type schema (component schemas not included) for a deployment, given a catalog resource id."
					},
					"response": []
				},
				{
					"name": "Get the Resource Schema for a Component in a Requested Deployment",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/resources/catalog/:cafeResourceId/hierarchy/:compPath/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"resources",
								"catalog",
								":cafeResourceId",
								"hierarchy",
								":compPath",
								"schema"
							],
							"variable": [
								{
									"value": "{{cafeResourceId}}",
									"id": "cafeResourceId"
								},
								{
									"value": "{{compPath}}",
									"id": "compPath"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the resource schema for a component within a deployment, given a catalog resource ID."
					},
					"response": []
				},
				{
					"name": "Get the Component Type Schema for a Component in a Requested Deployment",
					"request": {
						"url": {
							"raw": "https/:///composition-service/api/resources/catalog/:cafeResourceId/hierarchy/:fieldPath/typeSchema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"composition-service",
								"api",
								"resources",
								"catalog",
								":cafeResourceId",
								"hierarchy",
								":fieldPath",
								"typeSchema"
							],
							"variable": [
								{
									"value": "{{cafeResourceId}}",
									"id": "cafeResourceId"
								},
								{
									"value": "{{fieldPath}}",
									"id": "fieldPath"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the component type schema for a component within a deployment, given a catalog resource ID."
					},
					"response": []
				}
			]
		},
		{
			"name": "Container Service",
			"description": "Folder for api",
			"item": [
				{
					"name": "Performs additional actions post submission.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/callbacks/catalog/post-submission-extension",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Service Catalog representation of a Container instance Request."
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Handles the validation callback for an unsubmitted Request from the Service Catalog. This callback is used to both validate the request as well obtain additional properties if needed before the request is submitted.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/callbacks/catalog/requestValidations",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Service Catalog representation of a Container Instance Request."
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Handles submitted Request from the Service Catalog to the Container service.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/callbacks/catalog/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Service Catalog representation of a Container instance Request."
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Handles the direction to rollback a rejected request from the Service Catalog.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/callbacks/catalog/requests/:requestId/rollback",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"callbacks",
								"catalog",
								"requests",
								":requestId",
								"rollback"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieves collection of resources by resource type.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/callbacks/catalog/resources/types/:resourceTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"callbacks",
								"catalog",
								"resources",
								"types",
								":resourceTypeId"
							],
							"variable": [
								{
									"value": "{{resourceTypeId}}",
									"id": "resourceTypeId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "List of resources to be fetched for."
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieves a single resource by its unique identifier.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/callbacks/catalog/resources/types/:resourceTypeId/:bindingId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"callbacks",
								"catalog",
								"resources",
								"types",
								":resourceTypeId",
								":bindingId"
							],
							"variable": [
								{
									"value": "{{resourceTypeId}}",
									"id": "resourceTypeId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Accepts a new request to allocate a Container component from composition service.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/callbacks/composition/componentallocator/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Accepts a new request to deallocate a Container component from composition service.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/callbacks/composition/componentdeallocator",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Accepts a new request to provision a Container component type from composition service.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/callbacks/composition/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The CompositionProviderRequest defining the request parameters."
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieves all EndpointStates.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/config/endpoints?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list EndpointStates."
					},
					"response": []
				},
				{
					"name": "Creates a EndpointState.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/config/endpoints",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create EndpointStates."
					},
					"response": []
				},
				{
					"name": "Retrieves a EndpointState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/endpoints/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"endpoints",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create EndpointStates."
					},
					"response": []
				},
				{
					"name": "Updates a EndpointState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/endpoints/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"endpoints",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The EndpointState to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update EndpointState."
					},
					"response": []
				},
				{
					"name": "Patches a EndpointState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/endpoints/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"endpoints",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the EndpointState"
						},
						"description": "Only Solution users, Container admins, and System admins can patch ContainerStates."
					},
					"response": []
				},
				{
					"name": "Deletes a EndpointState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/endpoints/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"endpoints",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete EndpointStates."
					},
					"response": []
				},
				{
					"name": "Retrieves all EnvironmentMappingStates.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/config/env-mapping?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list EnvironmentMappingStates."
					},
					"response": []
				},
				{
					"name": "Creates a EnvironmentMappingState.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/config/env-mapping",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create EnvironmentMappingStates."
					},
					"response": []
				},
				{
					"name": "Retrieves a EnvironmentMappingState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/env-mapping/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"env-mapping",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create EnvironmentMappingStates."
					},
					"response": []
				},
				{
					"name": "Updates a EnvironmentMappingState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/env-mapping/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"env-mapping",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The EnvironmentMappingState to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update EnvironmentMappingState."
					},
					"response": []
				},
				{
					"name": "Patches a EnvironmentMappingState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/env-mapping/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"env-mapping",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the EnvironmentMappingState"
						},
						"description": "Only Solution users, Container admins, and System admins can patch EnvironmentMappingStates."
					},
					"response": []
				},
				{
					"name": "Deletes a EnvironmentMappingState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/env-mapping/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"env-mapping",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete EnvironmentMappingStates."
					},
					"response": []
				},
				{
					"name": "Retrieves all ConfigurationStates.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/config/props?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list ConfigurationStates."
					},
					"response": []
				},
				{
					"name": "Creates a ConfigurationState.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/config/props",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users and System admins can create ConfigurationStates."
					},
					"response": []
				},
				{
					"name": "Retrieves a ConfigurationState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/props/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"props",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list ConfigurationStates."
					},
					"response": []
				},
				{
					"name": "Updates a ConfigurationState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/props/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"props",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The ConfigurationState to be updated."
						},
						"description": "Only Solution users and System admins can update ConfigurationState."
					},
					"response": []
				},
				{
					"name": "Patches a ConfigurationState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/props/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"props",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the ConfigurationState"
						},
						"description": "Only Solution users and System admins can patch ConfigurationStates."
					},
					"response": []
				},
				{
					"name": "Deletes a ConfigurationState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/props/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"props",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users and System admins can delete ConfigurationStates."
					},
					"response": []
				},
				{
					"name": "Retrieves all RegistryStates.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/config/registries?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list RegistryStates."
					},
					"response": []
				},
				{
					"name": "Creates a RegistryState.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/config/registries",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create RegistryStates."
					},
					"response": []
				},
				{
					"name": "Retrieves a RegistryState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/registries/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"registries",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve RegistryStates."
					},
					"response": []
				},
				{
					"name": "Updates a RegistryState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/registries/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"registries",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The RegistryState to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update RegistryStates."
					},
					"response": []
				},
				{
					"name": "Patches a RegistryState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/registries/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"registries",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the RegistryState"
						},
						"description": "Only Solution users, Container admins, and System admins can patch RegistryStates."
					},
					"response": []
				},
				{
					"name": "Deletes a RegistryState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/registries/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"registries",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete RegistryStates."
					},
					"response": []
				},
				{
					"name": "Helper method for adding and validating docker registries.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/config/registry-spec?validate={{validate}}",
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "RegistryState + SslTrustCertificateState"
						},
						"description": "Only Solution users, Container admins, and System admins can add or validate docker registries."
					},
					"response": []
				},
				{
					"name": "Retrieves all SslTrustCertificateStates.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/config/trust-certs?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list SslTrustCertificateStates."
					},
					"response": []
				},
				{
					"name": "Creates a SslTrustCertificateState.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/config/trust-certs",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create SslTrustCertificateStates."
					},
					"response": []
				},
				{
					"name": "Imports and transforms a Server certificate from URI and store if valid and accepted.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/config/trust-certs-import",
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins import server certificates."
					},
					"response": []
				},
				{
					"name": "Retrieves a SslTrustCertificateState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/trust-certs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"trust-certs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve SslTrustCertificateStates."
					},
					"response": []
				},
				{
					"name": "Updates a SslTrustCertificateState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/trust-certs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"trust-certs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The SslTrustCertificateState to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update SslTrustCertificateStates."
					},
					"response": []
				},
				{
					"name": "Patches a SslTrustCertificateState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/trust-certs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"trust-certs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the SslTrustCertificateState"
						},
						"description": "Only Solution users, Container admins, and System admins can patch SslTrustCertificateStates."
					},
					"response": []
				},
				{
					"name": "Deletes a SslTrustCertificateState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/config/trust-certs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"config",
								"trust-certs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete SslTrustCertificateStates."
					},
					"response": []
				},
				{
					"name": "Retrieves all ContainerType with specified paging, sorting and filtering parameters.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/containers/types?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list ContainerTypes."
					},
					"response": []
				},
				{
					"name": "Creates a ContainerType.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/containers/types",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create ContainerDescriptions."
					},
					"response": []
				},
				{
					"name": "Retrieves a ContainerType.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/containers/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"containers",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve ContainerTypes."
					},
					"response": []
				},
				{
					"name": "Creates or updates a ContainerType.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/containers/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"containers",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The ContainerType to be updated"
						},
						"description": "Only Solution users, Container admins, and System admins can create ContainerDescriptions."
					},
					"response": []
				},
				{
					"name": "Deletes a ContainerType with the given ID.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/containers/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"containers",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete ContainerDescriptions."
					},
					"response": []
				},
				{
					"name": "Retrieves all AuthCredentialsServiceStates.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/core/auth/credentials?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list AuthCredentialsServiceStates."
					},
					"response": []
				},
				{
					"name": "Creates a AuthCredentialsServiceState.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/core/auth/credentials",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create AuthCredentialsServiceStates."
					},
					"response": []
				},
				{
					"name": "Retrieves a AuthCredentialsServiceState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/core/auth/credentials/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"core",
								"auth",
								"credentials",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve AuthCredentialsServiceStates."
					},
					"response": []
				},
				{
					"name": "Updates a AuthCredentialsServiceState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/core/auth/credentials/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"core",
								"auth",
								"credentials",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The AuthCredentialsServiceState to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update AuthCredentialsServiceState."
					},
					"response": []
				},
				{
					"name": "Patches a AuthCredentialsServiceState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/core/auth/credentials/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"core",
								"auth",
								"credentials",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the AuthCredentialsServiceState"
						},
						"description": "Only Solution users, Container admins, and System admins can patch AuthCredentialsServiceStates."
					},
					"response": []
				},
				{
					"name": "Deletes a AuthCredentialsServiceState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/core/auth/credentials/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"core",
								"auth",
								"credentials",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete AuthCredentialsServiceStates."
					},
					"response": []
				},
				{
					"name": "Triggers full data collection.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/data-collection",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can trigger data collection."
					},
					"response": []
				},
				{
					"name": "Triggers data collection of all hosts and associated containers per containerType and related provider.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/data-collection/types/:containerTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"data-collection",
								"types",
								":containerTypeId"
							],
							"variable": [
								{
									"value": "{{containerTypeId}}",
									"id": "containerTypeId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can trigger data collection."
					},
					"response": []
				},
				{
					"name": "Retrieves all Business Group and Tenant infos from the identity-service and transformed in group property.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/groups?tenantid={{tenantid}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list Tenant info."
					},
					"response": []
				},
				{
					"name": "Retrieves the Business Group and Tenant info from the identity-service and transformed in group property.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/groups/:tenantLink/**",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"groups",
								":tenantLink",
								"**"
							],
							"variable": [
								{
									"value": "{{tenantLink}}",
									"id": "tenantLink"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve Tenant info."
					},
					"response": []
				},
				{
					"name": "Retrieves all ContainerRequestStatuss.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/request-status?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list ContainerRequestStatuss."
					},
					"response": []
				},
				{
					"name": "Retrieves a ContainerRequestStatus.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/request-status/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"request-status",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve ContainerRequestStatuss."
					},
					"response": []
				},
				{
					"name": "Patches a ContainerRequestStatus.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/request-status/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"request-status",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the ContainerRequestStatus"
						},
						"description": "Only Solution users, Container admins, and System admins can patch ContainerRequestStatuss."
					},
					"response": []
				},
				{
					"name": "Deletes a ContainerRequestStatus.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/request-status/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"request-status",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete ContainerRequestStatuss."
					},
					"response": []
				},
				{
					"name": "Retrieves all RequestBrokerStates.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/requests?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list RequestBrokerStates."
					},
					"response": []
				},
				{
					"name": "Creates a RequestBrokerState.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create RequestBrokerStates."
					},
					"response": []
				},
				{
					"name": "Retrieves a RequestBrokerState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/requests/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"requests",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve RequestBrokerStates."
					},
					"response": []
				},
				{
					"name": "Updates a RequestBrokerState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/requests/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"requests",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The RequestBrokerState to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update RequestBrokerStates."
					},
					"response": []
				},
				{
					"name": "Patches a RequestBrokerState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/requests/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"requests",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the RequestBrokerState"
						},
						"description": "Only Solution users, Container admins, and System admins can patch RequestBrokerStates."
					},
					"response": []
				},
				{
					"name": "Deletes a RequestBrokerState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/requests/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"requests",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete RequestBrokerStates."
					},
					"response": []
				},
				{
					"name": "Retrieves all CompositeComponents.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/composite-components?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list CompositeComponents."
					},
					"response": []
				},
				{
					"name": "Creates a CompositeComponent.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/composite-components",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create CompositeComponents."
					},
					"response": []
				},
				{
					"name": "Retrieves a CompositeComponent.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/composite-components/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"composite-components",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve CompositeComponents."
					},
					"response": []
				},
				{
					"name": "Updates a CompositeComponent.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/composite-components/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"composite-components",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The CompositeComponent to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update CompositeComponents."
					},
					"response": []
				},
				{
					"name": "Patches a CompositeComponent.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/composite-components/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"composite-components",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the CompositeComponent"
						},
						"description": "Only Solution users, Container admins, and System admins can patch CompositeComponents."
					},
					"response": []
				},
				{
					"name": "Deletes a CompositeComponent.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/composite-components/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"composite-components",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete CompositeComponents."
					},
					"response": []
				},
				{
					"name": "Retrieves all CompositeDescriptions.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/composite-descriptions?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list CompositeDescriptions."
					},
					"response": []
				},
				{
					"name": "Creates a CompositeDescription.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/composite-descriptions",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create CompositeDescriptions."
					},
					"response": []
				},
				{
					"name": "Creates a clone of the CompositeDescription.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/composite-descriptions-clone",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can clone a CompositeDescriptions."
					},
					"response": []
				},
				{
					"name": "Retrieves a CompositeDescription or the images of it's descriptions as CompositeDescriptionImages.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/composite-descriptions/:id?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"composite-descriptions",
								":id"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve CompositeDescription."
					},
					"response": []
				},
				{
					"name": "Updates a CompositeDescription.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/composite-descriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"composite-descriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The CompositeDescription to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update CompositeDescription."
					},
					"response": []
				},
				{
					"name": "Patches a CompositeDescription.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/composite-descriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"composite-descriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the CompositeDescription"
						},
						"description": "Only Solution users, Container admins, and System admins can patch CompositeDescription."
					},
					"response": []
				},
				{
					"name": "Deletes a CompositeDescription.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/composite-descriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"composite-descriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete CompositeDescriptions."
					},
					"response": []
				},
				{
					"name": "Exports the Composite Description in YAML format.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/composite-templates?selfLink={{selfLink}}&={{}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Solution users, System admins, Container admins, and Container architects can export a CompositeDescription."
					},
					"response": []
				},
				{
					"name": "Imports the YAML content as a Composite Description.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/composite-templates",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "YAML content to import as a Composite Description"
						},
						"description": "Solution users, System admins, Container admins, and Container architects can import a CompositeDescription."
					},
					"response": []
				},
				{
					"name": "Retrieves all ComputeStates.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/compute?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list ComputeStates."
					},
					"response": []
				},
				{
					"name": "Creates a ComputeState.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/compute",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create ComputeStates."
					},
					"response": []
				},
				{
					"name": "Retrieves all ComputeDescriptions.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/compute-descriptions?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list ComputeDescriptions."
					},
					"response": []
				},
				{
					"name": "Creates a ComputeDescription.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/compute-descriptions",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create ComputeDescriptions."
					},
					"response": []
				},
				{
					"name": "Retrieves a ComputeDescription.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/compute-descriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"compute-descriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve ComputeDescriptions."
					},
					"response": []
				},
				{
					"name": "Updates a ComputeDescription.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/compute-descriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"compute-descriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The ComputeDescription to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update ComputeDescriptions."
					},
					"response": []
				},
				{
					"name": "Patches a ComputeDescription.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/compute-descriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"compute-descriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the ComputeDescription"
						},
						"description": "Only Solution users, Container admins, and System admins can patch ComputeDescriptions."
					},
					"response": []
				},
				{
					"name": "Deletes a ComputeDescription.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/compute-descriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"compute-descriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete ComputeDescriptions."
					},
					"response": []
				},
				{
					"name": "Retrieves a ComputeState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/compute/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"compute",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Solution users, System admins, Container admins, and Container architects can retrieve ComputeStates."
					},
					"response": []
				},
				{
					"name": "Updates a ComputeState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/compute/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"compute",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The ComputeState to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update ComputeStates."
					},
					"response": []
				},
				{
					"name": "Patches a ComputeState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/compute/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"compute",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the ComputeState"
						},
						"description": "Only Solution users, Container admins, and System admins can patch ComputeStates."
					},
					"response": []
				},
				{
					"name": "Deletes a ComputeState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/compute/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"compute",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete ComputeStates."
					},
					"response": []
				},
				{
					"name": "Retrieves all ContainerDescriptions.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/container-descriptions?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list ContainerDescriptions."
					},
					"response": []
				},
				{
					"name": "Creates a ContainerDescription.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/container-descriptions",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create ContainerDescriptions."
					},
					"response": []
				},
				{
					"name": "Retrieves a ContainerDescription.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/container-descriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"container-descriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve ContainerDescriptions."
					},
					"response": []
				},
				{
					"name": "Updates a ContainerDescription.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/container-descriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"container-descriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The ContainerDescription to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update ContainerDescriptions."
					},
					"response": []
				},
				{
					"name": "Publishes a container description to catalog.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/container-descriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"container-descriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can publush ContainerDescriptions."
					},
					"response": []
				},
				{
					"name": "Patches a ContainerDescription.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/container-descriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"container-descriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the ContainerDescription"
						},
						"description": "Only Solution users, Container admins, and System admins can patch ContainerDescriptions."
					},
					"response": []
				},
				{
					"name": "Deletes a ContainerDescription.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/container-descriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"container-descriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete ContainerDescriptions."
					},
					"response": []
				},
				{
					"name": "Retrieves a LogServiceState.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/container-logs?id={{id}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Solution users, System admins, Container admins, and Container architects can get LogServiceState."
					},
					"response": []
				},
				{
					"name": "Retrieves all ContainerStates.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/containers?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list ContainerStates."
					},
					"response": []
				},
				{
					"name": "Creates a ContainerState.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/containers",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create ContainerStates."
					},
					"response": []
				},
				{
					"name": "Retrieves a ContainerState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/containers/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"containers",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Updates a ContainerState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/containers/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"containers",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The ContainerState to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update ContainerStates."
					},
					"response": []
				},
				{
					"name": "Patches a ContainerState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/containers/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"containers",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the ContainerState"
						},
						"description": "Only Solution users, Container admins, and System admins can patch ContainerStates."
					},
					"response": []
				},
				{
					"name": "Deletes a ContainerState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/containers/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"containers",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete ContainerStates."
					},
					"response": []
				},
				{
					"name": "Retrieves the stats of a ContainerState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/containers/:id/stats",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"containers",
								":id",
								"stats"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieves all DeploymentPolicies.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/deployment-policies?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list DeploymentPolicies."
					},
					"response": []
				},
				{
					"name": "Creates a DeploymentPolicy.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/deployment-policies",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create DeploymentPolicies."
					},
					"response": []
				},
				{
					"name": "Retrieves a DeploymentPolicy.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/deployment-policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"deployment-policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve DeploymentPolicies."
					},
					"response": []
				},
				{
					"name": "Updates a DeploymentPolicy.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/deployment-policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"deployment-policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The DeploymentPolicy to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update DeploymentPolicies."
					},
					"response": []
				},
				{
					"name": "Patches a DeploymentPolicy.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/deployment-policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"deployment-policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the DeploymentPolicy"
						},
						"description": "Only Solution users, Container admins, and System admins can patch DeploymentPolicies."
					},
					"response": []
				},
				{
					"name": "Deletes a DeploymentPolicy.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/deployment-policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"deployment-policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete DeploymentPolicies."
					},
					"response": []
				},
				{
					"name": "Retrieves all EventLogStates.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/event-logs?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list EventLogStates."
					},
					"response": []
				},
				{
					"name": "Creates a EventLogState.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/event-logs",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create EventLogStates."
					},
					"response": []
				},
				{
					"name": "Retrieves a EventLogState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/event-logs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"event-logs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve EventLogStates."
					},
					"response": []
				},
				{
					"name": "Updates a EventLogState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/event-logs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"event-logs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The EventLogState to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update EventLogStates."
					},
					"response": []
				},
				{
					"name": "Patches a EventLogState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/event-logs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"event-logs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the EventLogState"
						},
						"description": "Only Solution users, Container admins, and System admins can patch EventLogStates."
					},
					"response": []
				},
				{
					"name": "Deletes a EventLogState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/event-logs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"event-logs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete EventLogStates."
					},
					"response": []
				},
				{
					"name": "Retrieves a ExposedServiceDescriptionState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/exposed-services/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"exposed-services",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Solution users, System admins, Container admins, and Container architects can retrieve a ExposedServiceDescriptionState."
					},
					"response": []
				},
				{
					"name": "Retrieves all GroupResourcePolicyStates.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/group-policies?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list GroupResourcePolicyStates."
					},
					"response": []
				},
				{
					"name": "Creates a GroupResourcePolicyState.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/group-policies",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create GroupResourcePolicyStates."
					},
					"response": []
				},
				{
					"name": "Retrieves a GroupResourcePolicyState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/group-policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"group-policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve GroupResourcePolicyStates."
					},
					"response": []
				},
				{
					"name": "Updates a GroupResourcePolicyState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/group-policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"group-policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The GroupResourcePolicyState to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update GroupResourcePolicyStates."
					},
					"response": []
				},
				{
					"name": "Patches a GroupResourcePolicyState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/group-policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"group-policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the GroupResourcePolicyState"
						},
						"description": "Only Solution users, Container admins, and System admins can patch GroupResourcePolicyStates."
					},
					"response": []
				},
				{
					"name": "Deletes a GroupResourcePolicyState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/group-policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"group-policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete GroupResourcePolicyStates."
					},
					"response": []
				},
				{
					"name": "Helper method for adding and validating container hosts.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/hosts?validate={{validate}}",
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The state for the container host to be created or validated."
						},
						"description": "Only Solution users, Container admins, and System admins can add or validate container hosts."
					},
					"response": []
				},
				{
					"name": "Retrieves request and eventlog notifications.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/notifications?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve NotificationsStates."
					},
					"response": []
				},
				{
					"name": "Retrieves all ResourcePoolStates.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/pools?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can list ResourcePoolStates."
					},
					"response": []
				},
				{
					"name": "Creates a ResourcePoolState.",
					"request": {
						"url": "https://{{vra-fqdn}}/container-service/api/resources/pools",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can create ResourcePoolStates."
					},
					"response": []
				},
				{
					"name": "Retrieves a ResourcePoolState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/pools/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"pools",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can retrieve ResourcePoolStates."
					},
					"response": []
				},
				{
					"name": "Updates a ResourcePoolState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/pools/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"pools",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The ResourcePoolState to be updated."
						},
						"description": "Only Solution users, Container admins, and System admins can update ResourcePoolStates."
					},
					"response": []
				},
				{
					"name": "Patches a ResourcePoolState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/pools/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"pools",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The patch of the ResourcePoolState"
						},
						"description": "Only Solution users, Container admins, and System admins can patch ResourcePoolStates."
					},
					"response": []
				},
				{
					"name": "Deletes a ResourcePoolState.",
					"request": {
						"url": {
							"raw": "https/:///container-service/api/resources/pools/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"container-service",
								"api",
								"resources",
								"pools",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Only Solution users, Container admins, and System admins can delete ResourcePoolStates."
					},
					"response": []
				}
			]
		},
		{
			"name": "Content Service",
			"description": "Folder for api",
			"item": [
				{
					"name": "Get content list",
					"request": {
						"url": "https://{{vra-fqdn}}/api/contents?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get all content with specified paging, sorting and filtering parameters."
					},
					"response": []
				},
				{
					"name": "Upload content data",
					"request": {
						"url": {
							"raw": "https/:///api/contents/:contentTypeId/:contentId/data",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"contents",
								":contentTypeId",
								":contentId",
								"data"
							],
							"variable": [
								{
									"value": "{{contentTypeId}}",
									"id": "contentTypeId"
								},
								{
									"value": "{{contentId}}",
									"id": "contentId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "{{Content-Type}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Raw content to be uploaded."
						},
						"description": "This API is generally used to upload the raw data directly and not deal with any of its dependencies."
					},
					"response": []
				},
				{
					"name": "Get content",
					"request": {
						"url": {
							"raw": "https/:///api/contents/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"contents",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "The content here only contains high level information about the underlying artifact like - name, description, type, etc.\n\nHaving permission to content's metadata doesn't mean that the user will have access its raw content since it is governed by specific permissions defined by the content provider."
					},
					"response": []
				},
				{
					"name": "Get content data",
					"request": {
						"url": {
							"raw": "https/:///api/contents/:id/data?secureValueFormat={{secureValueFormat}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"contents",
								":id",
								"data"
							],
							"query": [
								{
									"key": "secureValueFormat",
									"value": "{{secureValueFormat}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This API is generally used to download the raw data directly associated with the content and will not download any dependencies along with it."
					},
					"response": []
				},
				{
					"name": "List packages",
					"request": {
						"url": "https://{{vra-fqdn}}/api/packages?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This API will list all packages in the system with specified paging, sorting and filtering parameters."
					},
					"response": []
				},
				{
					"name": "Import package",
					"request": {
						"url": "https://{{vra-fqdn}}/api/packages?resolutionMode={{resolutionMode}}",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "{{file}}",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "Import content of a zip package. The zip file will be validated and import will be performed based on the 'dependencies' specified in the metadata file. The result of the import operation will be captured in OperationInfo object.\nAt this point, we don't support any form of rollback strategies. A failed import may potentially leave the system in an inconsistent state. Hence, its highly recommend to run a precheck/dry-run before the import to validate the package.\nSee HTTP POST /api/packages/validate for more details. This will help catch most of the errors upfront.\nAlthough the API looks similar to create package API but differs in the 'Content-Type' header where it expects 'multipart/form-data'."
					},
					"response": []
				},
				{
					"name": "Validate package import",
					"request": {
						"url": "https://{{vra-fqdn}}/api/packages/validate?resolutionMode={{resolutionMode}}",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"value": "{{file}}",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "Validate content of a zip package. The zip file will be validated for all of its content, dependencies, etc. However, no import will be performed in this operation. It is highly recommended to use this operation before performing an import. See the import API for more details."
					},
					"response": []
				},
				{
					"name": "Export package",
					"request": {
						"url": {
							"raw": "https/:///api/packages/:id?secureValueFormat={{secureValueFormat}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"packages",
								":id"
							],
							"query": [
								{
									"key": "secureValueFormat",
									"value": "{{secureValueFormat}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Exports the contents of a Package compressed in a ZIP file. The content type of the response is \"application/octet-stream\".The exported zip contains the entities that the user has access to. Based on the requested package for export, the content graph is built. However, if the user does not have access to some of the entities then they are skipped from the export. It is recommended to use the export dry run to get details about the entities that were skipped from the export.\nAlthough the API looks similar to retrieve package API but differs in the 'Accept' header where it expects 'application/octet-stream' or 'application/zip'."
					},
					"response": []
				},
				{
					"name": "List package contents",
					"request": {
						"url": {
							"raw": "https/:///api/packages/:id/contents?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"packages",
								":id",
								"contents"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "API to list content items for a given package id. This API can be used to see information of content associated with the given package.\n\nNote: This will not list content that is deleted but still referenced by the package."
					},
					"response": []
				},
				{
					"name": "Validate package export",
					"request": {
						"url": {
							"raw": "https/:///api/packages/:id/validate",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"packages",
								":id",
								"validate"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Performs a dry run/validation operation for export. It gathers the metadata about all the entities in the content graph that will be exported as part of the package export. In case of any permission exceptions where certain entities are skipped from the export then the user is alerted about the missed entities."
					},
					"response": []
				},
				{
					"name": "Get package",
					"request": {
						"url": {
							"raw": "https/:///api/packages/:pkgId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"packages",
								":pkgId"
							],
							"variable": [
								{
									"value": "{{pkgId}}",
									"id": "pkgId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "API to retrieve package a consumer is permitted to see"
					},
					"response": []
				},
				{
					"name": "Update package",
					"request": {
						"url": {
							"raw": "https/:///api/packages/:pkgId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"packages",
								":pkgId"
							],
							"variable": [
								{
									"value": "{{pkgId}}",
									"id": "pkgId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The package details"
						},
						"description": "This will update a package."
					},
					"response": []
				},
				{
					"name": "Delete package",
					"request": {
						"url": {
							"raw": "https/:///api/packages/:pkgId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"packages",
								":pkgId"
							],
							"variable": [
								{
									"value": "{{pkgId}}",
									"id": "pkgId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This will delete a package."
					},
					"response": []
				},
				{
					"name": "Save provider content",
					"request": {
						"url": "https://{{vra-fqdn}}/api/provider/contents",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The provider content"
						},
						"description": "Saves the provider content."
					},
					"response": []
				},
				{
					"name": "Get provider content",
					"request": {
						"url": {
							"raw": "https/:///api/provider/contents/:contentTypeId/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"provider",
								"contents",
								":contentTypeId",
								":id"
							],
							"variable": [
								{
									"value": "{{contentTypeId}}",
									"id": "contentTypeId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the provider content."
					},
					"response": []
				},
				{
					"name": "Delete provider content",
					"request": {
						"url": {
							"raw": "https/:///api/provider/contents/:contentTypeId/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"provider",
								"contents",
								":contentTypeId",
								":id"
							],
							"variable": [
								{
									"value": "{{contentTypeId}}",
									"id": "contentTypeId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes the provider content."
					},
					"response": []
				},
				{
					"name": "Get content type",
					"request": {
						"url": "https://{{vra-fqdn}}/api/provider/contenttypes?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the content type."
					},
					"response": []
				},
				{
					"name": "Save content type",
					"request": {
						"url": "https://{{vra-fqdn}}/api/provider/contenttypes",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The content type to be updated"
						},
						"description": "Creates or updates content type."
					},
					"response": []
				},
				{
					"name": "Get content type",
					"request": {
						"url": {
							"raw": "https/:///api/provider/contenttypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"provider",
								"contenttypes",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the content type."
					},
					"response": []
				},
				{
					"name": "Save content type",
					"request": {
						"url": {
							"raw": "https/:///api/provider/contenttypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"provider",
								"contenttypes",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The content type to be updated"
						},
						"description": "Creates or updates content type."
					},
					"response": []
				},
				{
					"name": "Delete content type",
					"request": {
						"url": {
							"raw": "https/:///api/provider/contenttypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"provider",
								"contenttypes",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes content type for the given id"
					},
					"response": []
				}
			]
		},
		{
			"name": "Endpoint Configuration Service",
			"description": "Folder for api",
			"item": [
				{
					"name": "Gets paged list of endpoint type categories",
					"request": {
						"url": "https://{{vra-fqdn}}/endpoint-configuration-service/api/categories?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "The API returns paged list of endpoint type categories."
					},
					"response": []
				},
				{
					"name": "Creates a new endpoint type category",
					"request": {
						"url": "https://{{vra-fqdn}}/endpoint-configuration-service/api/categories",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Endpoint type category to be created."
						},
						"description": "The API creates a new endpoint type category. The API validates that the endpoint type category does not exist already, before creating new endpoint type category"
					},
					"response": []
				},
				{
					"name": "Get endpoint type category, based on the category id",
					"request": {
						"url": {
							"raw": "https/:///endpoint-configuration-service/api/categories/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"endpoint-configuration-service",
								"api",
								"categories",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "The API returns a specific endpoint type category, based on the category id."
					},
					"response": []
				},
				{
					"name": "Updates an existing endpoint type category",
					"request": {
						"url": {
							"raw": "https/:///endpoint-configuration-service/api/categories/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"endpoint-configuration-service",
								"api",
								"categories",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Endpoint type category to be updated."
						},
						"description": "The API updates an existing endpoint type category. If the category exists, it is updated.Otherwise, a new endpoint type category is created"
					},
					"response": []
				},
				{
					"name": "Deletes an existing endpoint type category",
					"request": {
						"url": {
							"raw": "https/:///endpoint-configuration-service/api/categories/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"endpoint-configuration-service",
								"api",
								"categories",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "The API deletes an existing endpoint type category. The API returns an error, ifendpoint type category with the specified id does not exist or if there are existing endpoint types under the specified category."
					},
					"response": []
				},
				{
					"name": "Retrieve the instance data.",
					"request": {
						"url": {
							"raw": "https/:///endpoint-configuration-service/api/data-service/data/:classId/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"endpoint-configuration-service",
								"api",
								"data-service",
								"data",
								":classId",
								":id"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The dynamic data request object."
						},
						"description": "Retrieve the instance data for service and class"
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object class",
					"request": {
						"url": {
							"raw": "https/:///endpoint-configuration-service/api/data-service/schema/:classId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"endpoint-configuration-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"default"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema for the specified object class."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object type",
					"request": {
						"url": {
							"raw": "https/:///endpoint-configuration-service/api/data-service/schema/:classId/types/:typeFilter",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"endpoint-configuration-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This returns the schema of a particular type within a class of object."
					},
					"response": []
				},
				{
					"name": "Gets paged list of endpoints, optionally based on type or category",
					"request": {
						"url": "https://{{vra-fqdn}}/endpoint-configuration-service/api/endpoints?category={{category}}&type={{type}}&secureFields={{secureFields}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "The API returns paged list of endpoints."
					},
					"response": []
				},
				{
					"name": "Creates a new endpoint",
					"request": {
						"url": "https://{{vra-fqdn}}/endpoint-configuration-service/api/endpoints",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Endpoint to be created."
						},
						"description": "The API creates a new endpoint. The API performs the following validation before creating the endpoint:<br>1. The id of the endpoint is null.</br><br>2. Another endpoint wth the same name exist.</br><br>3. The type of the endpoint is already registered.</br><br>4. The endpoint passes schema validation, based on the endpoint type's schema.</br>"
					},
					"response": []
				},
				{
					"name": "Get endpoint, based on the endpoint id",
					"request": {
						"url": {
							"raw": "https/:///endpoint-configuration-service/api/endpoints/:id?secureFields={{secureFields}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"endpoint-configuration-service",
								"api",
								"endpoints",
								":id"
							],
							"query": [
								{
									"key": "secureFields",
									"value": "{{secureFields}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "The API returns a specific endpoint, based on the endpoint id."
					},
					"response": []
				},
				{
					"name": "Updates an existing endpoint",
					"request": {
						"url": {
							"raw": "https/:///endpoint-configuration-service/api/endpoints/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"endpoint-configuration-service",
								"api",
								"endpoints",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Endpoint to be updated."
						},
						"description": "The API updates an existing endpoint. The API performs the following validation before updating the endpoint:<br>1. There is an existing endpoint with the specified id.</br><br>2. Another endpoint wth the same name does exist.</br><br>3. The type of the endpoint is already registered.</br><br>4. The endpoint passes schema validation, based on the endpoint type's schema.</br>"
					},
					"response": []
				},
				{
					"name": "Deletes an existing endpoint",
					"request": {
						"url": {
							"raw": "https/:///endpoint-configuration-service/api/endpoints/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"endpoint-configuration-service",
								"api",
								"endpoints",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "The API deletes an existing endpoint. The API returns an error, ifendpoint with the specified id does not exist."
					},
					"response": []
				},
				{
					"name": "Gets paged list of endpoint types",
					"request": {
						"url": "https://{{vra-fqdn}}/endpoint-configuration-service/api/types?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "The API returns paged list of endpoint types."
					},
					"response": []
				},
				{
					"name": "Creates a new endpoint type",
					"request": {
						"url": "https://{{vra-fqdn}}/endpoint-configuration-service/api/types",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Endpoint type to be created."
						},
						"description": "The API creates a new endpoint type. The API performs the following validation before updating the endpoint type: <br>1. There is an no existing endpoint type with the specified id.</br><br>2. Another endpoint type wth the same name does not exist.</br>"
					},
					"response": []
				},
				{
					"name": "Get endpoint type",
					"request": {
						"url": {
							"raw": "https/:///endpoint-configuration-service/api/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"endpoint-configuration-service",
								"api",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "The API returns a specific endpoint type, based on the endpoint type id."
					},
					"response": []
				},
				{
					"name": "Updates an existing endpoint type",
					"request": {
						"url": {
							"raw": "https/:///endpoint-configuration-service/api/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"endpoint-configuration-service",
								"api",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Endpoint type to be updated with."
						},
						"description": "The API updates an existing endpoint type. The API performs the following validation before updating the endpoint type:<br>1. There is an existing endpoint type with the specified id.</br><br>2. Another endpoint type wth the same name does not exist.</br>"
					},
					"response": []
				},
				{
					"name": "Deletes an existing endpoint type",
					"request": {
						"url": {
							"raw": "https/:///endpoint-configuration-service/api/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"endpoint-configuration-service",
								"api",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "The API deletes an existing endpoint type. The API returns an error, ifendpoint type with the specified id does not exist."
					},
					"response": []
				}
			]
		},
		{
			"name": "Event Broker Service",
			"description": "Folder for api",
			"item": [
				{
					"name": "Get a set of data for the specified object",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/data-service/data/:classId/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"data-service",
								"data",
								":classId",
								":id"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a set of data for the specified object."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of possible values for a given type of object",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/data-service/list/:classId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"data-service",
								"list",
								":classId",
								"default"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of possible values for a given type of object."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of possible values for a given type of object",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/data-service/list/:classId/types/:typeFilter",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"data-service",
								"list",
								":classId",
								"types",
								":typeFilter"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of possible values for a given type of object."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object class",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/data-service/schema/:classId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"default"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema for the specified object class."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/data-service/schema/:classId/default/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"default",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/data-service/schema/:classId/default/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"default",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/data-service/schema/:classId/instances/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This returns the schema of a particular type adjusted to the state of a specific instance.."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/data-service/schema/:classId/instances/:id/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/data-service/schema/:classId/instances/:id/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object type",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/data-service/schema/:classId/types/:typeFilter",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This returns the schema of a particular type within a class of object."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/data-service/schema/:classId/types/:typeFilter/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/data-service/schema/:classId/types/:typeFilter/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get Events",
					"request": {
						"url": "https://{{vra-fqdn}}/event-broker-service/api/events?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get Events by pages."
					},
					"response": []
				},
				{
					"name": "Create an Event",
					"request": {
						"url": "https://{{vra-fqdn}}/event-broker-service/api/events",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Event object"
						},
						"description": "Create an Event."
					},
					"response": []
				},
				{
					"name": "Get Events by type",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/events/types/:eventTypeName?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"events",
								"types",
								":eventTypeName"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{eventTypeName}}",
									"id": "eventTypeName"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get Events by event type with specified pageing parameters."
					},
					"response": []
				},
				{
					"name": "Get Event by id",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/events/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"events",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the details of a specified Event."
					},
					"response": []
				},
				{
					"name": "Unsupported operation",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/events/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"events",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Unsupported operation"
					},
					"response": []
				},
				{
					"name": "Delete Event",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/events/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"events",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete Event by id."
					},
					"response": []
				},
				{
					"name": "Reply on published Event",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/events/:originEventId/reply",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"events",
								":originEventId",
								"reply"
							],
							"variable": [
								{
									"value": "{{originEventId}}",
									"id": "originEventId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the Reply Event"
						},
						"description": "Reply on published Event."
					},
					"response": []
				},
				{
					"name": "Get all Subscriptions",
					"request": {
						"url": "https://{{vra-fqdn}}/event-broker-service/api/subscriptions?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get all Subscriptions with specified pageing parameters."
					},
					"response": []
				},
				{
					"name": "Registers Subscription",
					"request": {
						"url": "https://{{vra-fqdn}}/event-broker-service/api/subscriptions",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Registers Subscription. Only Solution users and system admin (e.g. for vRO) can manage subscriptions."
					},
					"response": []
				},
				{
					"name": "Get Active Subscriptions",
					"request": {
						"url": "https://{{vra-fqdn}}/event-broker-service/api/subscriptions/active",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get Active Subscriptions."
					},
					"response": []
				},
				{
					"name": "Retrieves Subscription",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/subscriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"subscriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves Subscription by id."
					},
					"response": []
				},
				{
					"name": "Delete Subscription",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/subscriptions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"subscriptions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete Subscription. Only Solution users and system admin (e.g. for vRO) can manage subscriptions."
					},
					"response": []
				},
				{
					"name": "Pull events for subscription id",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/subscriptions/:subscriptionId/poll/:count",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"subscriptions",
								":subscriptionId",
								"poll",
								":count"
							],
							"variable": [
								{
									"value": "{{subscriptionId}}",
									"id": "subscriptionId"
								},
								{
									"value": "{{count}}",
									"id": "count"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Poll count events from the subscription queue with id."
					},
					"response": []
				},
				{
					"name": "Get all Event Topics",
					"request": {
						"url": "https://{{vra-fqdn}}/event-broker-service/api/topics?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get all Event Topics with specified pageing parameters."
					},
					"response": []
				},
				{
					"name": "Registers Event Topic",
					"request": {
						"url": "https://{{vra-fqdn}}/event-broker-service/api/topics",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the Event Topic to register or update"
						},
						"description": "Registers or updates Event Topic. The operation is idempotent."
					},
					"response": []
				},
				{
					"name": "Registers or updates a replyable Event Topic",
					"request": {
						"url": "https://{{vra-fqdn}}/event-broker-service/api/topics/replyable",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the Event Topic to register or update"
						},
						"description": "Registers or updates a replyable Event Topic. The operation is idempotent."
					},
					"response": []
				},
				{
					"name": "Get permisions for Event Topic",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/topics/:eventTopicId/principals/:principalId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"topics",
								":eventTopicId",
								"principals",
								":principalId"
							],
							"variable": [
								{
									"value": "{{eventTopicId}}",
									"id": "eventTopicId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get permisions for Event Topic and for specified principal."
					},
					"response": []
				},
				{
					"name": "Create permission for Event Topic",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/topics/:eventTopicId/principals/:principalId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"topics",
								":eventTopicId",
								"principals",
								":principalId"
							],
							"variable": [
								{
									"value": "{{eventTopicId}}",
									"id": "eventTopicId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Create permission for Event Topic for specified principal."
					},
					"response": []
				},
				{
					"name": "Delete permission for Event Topic",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/topics/:eventTopicId/principals/:principalId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"topics",
								":eventTopicId",
								"principals",
								":principalId"
							],
							"variable": [
								{
									"value": "{{eventTopicId}}",
									"id": "eventTopicId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete permission for Event Topic for specific principal."
					},
					"response": []
				},
				{
					"name": "Retrieves Event Topic",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/topics/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"topics",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves Event Topic by id."
					},
					"response": []
				},
				{
					"name": "Creates or updates an Event Topic",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/topics/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"topics",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the Event Topic to register or update"
						},
						"description": "Creates or updates an Event Topic"
					},
					"response": []
				},
				{
					"name": "Unregisters an Event Topic",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/topics/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"topics",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Unregisters an Event Topic"
					},
					"response": []
				},
				{
					"name": "Retrieves replyable Event Topics endpoint",
					"request": {
						"url": {
							"raw": "https/:///event-broker-service/api/topics/:id/replyable/subscription",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"event-broker-service",
								"api",
								"topics",
								":id",
								"replyable",
								"subscription"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves replyable Event Topics endpoint"
					},
					"response": []
				}
			]
		},
		{
			"name": "Extensibility Service",
			"description": "",
			"item": [
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/api/plugins?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a plugin",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/api/plugins",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The plugin to be created"
						},
						"description": "A plugin is defined using metadata that specifies the extension it implements. An extension is a component that extends the functionality of another component based on a predefined contract. Extensions are packaged in plugins, and contain metadata that describes what component it is extending and how."
					},
					"response": []
				},
				{
					"name": "Get all the extensions",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/api/plugins/extensions?pointId={{pointId}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get all the extensions for pointIds.  If pointIds is empty or null, get all the extensions"
					},
					"response": []
				},
				{
					"name": "Get an extension",
					"request": {
						"url": {
							"raw": "https/:///component-registry/api/plugins/extensions/:extensionId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"api",
								"plugins",
								"extensions",
								":extensionId"
							],
							"variable": [
								{
									"value": "{{extensionId}}",
									"id": "extensionId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get an extension by extensionId"
					},
					"response": []
				},
				{
					"name": "Get a plugin",
					"request": {
						"url": {
							"raw": "https/:///component-registry/api/plugins/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"api",
								"plugins",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a plugin by id."
					},
					"response": []
				},
				{
					"name": "Update a plugin",
					"request": {
						"url": {
							"raw": "https/:///component-registry/api/plugins/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"api",
								"plugins",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The plugin data to be updated"
						},
						"description": "Update the existing plugin identified by the input id with the input plugin."
					},
					"response": []
				},
				{
					"name": "Delete a plugin",
					"request": {
						"url": {
							"raw": "https/:///component-registry/api/plugins/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"api",
								"plugins",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete a plugin by id."
					},
					"response": []
				},
				{
					"name": "List all the extensions for a plugin",
					"request": {
						"url": {
							"raw": "https/:///component-registry/api/plugins/:id/extensions?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"api",
								"plugins",
								":id",
								"extensions"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a list of all the extensions for a plugin"
					},
					"response": []
				},
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/api/wizardstates?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a wizard state for the logged in user",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/api/wizardstates",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The wizard state to be created"
						},
						"description": "Create a wizard state for the logged in user.  The application has goal based wizards to enable users to complete a number of steps to achieve a goal.  This domain object persists the last step visited by the user. It does not imply that they have completed all preceding steps, nor even the current step."
					},
					"response": []
				},
				{
					"name": "Get the current wizard state for the logged in user",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/api/wizardstates/current",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the current wizard state for the logged in user.  The application has goal based wizards to enable users to complete a number of steps to achieve a goal.  This domain object persists the last step visited by the user. It does not imply that they have completed all preceding steps, nor even the current step."
					},
					"response": []
				},
				{
					"name": "Gets the wizard state identified by id",
					"request": {
						"url": {
							"raw": "https/:///component-registry/api/wizardstates/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"api",
								"wizardstates",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove a wizard state",
					"request": {
						"url": {
							"raw": "https/:///component-registry/api/wizardstates/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"api",
								"wizardstates",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Remove the wizard state matching the provided id."
					},
					"response": []
				}
			]
		},
		{
			"name": "Forms Service",
			"description": "Folder for api",
			"item": [
				{
					"name": "Get Forms",
					"request": {
						"url": "https://{{vra-fqdn}}/forms-service/api/forms?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get Forms by pages."
					},
					"response": []
				},
				{
					"name": "Create a Form",
					"request": {
						"url": "https://{{vra-fqdn}}/forms-service/api/forms",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Form object"
						},
						"description": "Create a Form."
					},
					"response": []
				},
				{
					"name": "Get Form by parent and type",
					"request": {
						"url": {
							"raw": "https/:///forms-service/api/forms/parent/:parent/type/:type",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"forms-service",
								"api",
								"forms",
								"parent",
								":parent",
								"type",
								":type"
							],
							"variable": [
								{
									"value": "{{parent}}",
									"id": "parent"
								},
								{
									"value": "{{type}}",
									"id": "type"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the details of a specified Form."
					},
					"response": []
				},
				{
					"name": "Get Form by id",
					"request": {
						"url": {
							"raw": "https/:///forms-service/api/forms/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"forms-service",
								"api",
								"forms",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the details of a specified Form."
					},
					"response": []
				},
				{
					"name": "Update or create a Form",
					"request": {
						"url": {
							"raw": "https/:///forms-service/api/forms/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"forms-service",
								"api",
								"forms",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Form object"
						},
						"description": "Update or create a Form."
					},
					"response": []
				},
				{
					"name": "Deletes a form",
					"request": {
						"url": {
							"raw": "https/:///forms-service/api/forms/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"forms-service",
								"api",
								"forms",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a form by id."
					},
					"response": []
				}
			]
		},
		{
			"name": "IPAM Service",
			"description": "Folder for api",
			"item": [
				{
					"name": "Method to be called by o11n gateway service to indicate the workflow completed",
					"request": {
						"url": "https://{{vra-fqdn}}/ipam-service/api/o11n-gateway/workflow/callback",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Result of the requested workflow"
						},
						"description": "Callback called by the provider o11n-gateway-service"
					},
					"response": []
				},
				{
					"name": "Returns a collection of address spaces with specified paging, sorting and filtering parameters, sorting and filtering parameters.",
					"request": {
						"url": {
							"raw": "https/:///ipam-service/api/providers/:providerEndpointId/address-spaces?additionalFilter={{additionalFilter}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"ipam-service",
								"api",
								"providers",
								":providerEndpointId",
								"address-spaces"
							],
							"query": [
								{
									"key": "additionalFilter",
									"value": "{{additionalFilter}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{providerEndpointId}}",
									"id": "providerEndpointId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Paging and sorting criteria"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a collection of address spaces with specified ids.",
					"request": {
						"url": {
							"raw": "https/:///ipam-service/api/providers/:providerEndpointId/address-spaces/searchExternalIds",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"ipam-service",
								"api",
								"providers",
								":providerEndpointId",
								"address-spaces",
								"searchExternalIds"
							],
							"variable": [
								{
									"value": "{{providerEndpointId}}",
									"id": "providerEndpointId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Collection of address space IDs"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a collection of ip ranges with specified paging, sorting and filtering parameters.",
					"request": {
						"url": {
							"raw": "https/:///ipam-service/api/providers/:providerEndpointId/ip-ranges?additionalFilter={{additionalFilter}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"ipam-service",
								"api",
								"providers",
								":providerEndpointId",
								"ip-ranges"
							],
							"query": [
								{
									"key": "additionalFilter",
									"value": "{{additionalFilter}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{providerEndpointId}}",
									"id": "providerEndpointId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Paging and sorting criteria"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a collection of ip ranges with specified ids.",
					"request": {
						"url": {
							"raw": "https/:///ipam-service/api/providers/:providerEndpointId/ip-ranges/searchExternalIds",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"ipam-service",
								"api",
								"providers",
								":providerEndpointId",
								"ip-ranges",
								"searchExternalIds"
							],
							"variable": [
								{
									"value": "{{providerEndpointId}}",
									"id": "providerEndpointId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Collection of range IDs"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "New request for ip allocation/deallocation",
					"request": {
						"url": "https://{{vra-fqdn}}/ipam-service/api/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "allocation or deallocation request"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get request completion details",
					"request": {
						"url": {
							"raw": "https/:///ipam-service/api/requests/:requestId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"ipam-service",
								"api",
								"requests",
								":requestId"
							],
							"variable": [
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "IaaS Proxy Provider Service",
			"description": "Folder for api",
			"item": [
				{
					"name": "Retrieves the list of available Amazon images",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/amazon/images?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of available Amazon images"
					},
					"response": []
				},
				{
					"name": "Retrieves the list of available Instance types",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/amazon/instance-types?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of available Instance types"
					},
					"response": []
				},
				{
					"name": "Returns an InstanceType.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/amazon/instance-types/:instanceTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"amazon",
								"instance-types",
								":instanceTypeId"
							],
							"variable": [
								{
									"value": "{{instanceTypeId}}",
									"id": "instanceTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns the InstanceType associated with the given id."
					},
					"response": []
				},
				{
					"name": "Retrieves Amazon request form data.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/amazon/request-data?businessGroupId={{businessGroupId}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves Amazon request form data."
					},
					"response": []
				},
				{
					"name": "List of the allocations data for business groups.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/business-groups/allocations?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a paginated list of the allocations data for business groups in the current tenant."
					},
					"response": []
				},
				{
					"name": "Accumulated Allocations data for business groups.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/business-groups/allocations",
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The list of business group ids"
						},
						"description": "Accumulated Allocations data for selected business groups in the current tenant."
					},
					"response": []
				},
				{
					"name": "Accumulated Allocations data for business groups.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/business-groups/allocations/totals",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Accumulated Allocations data for all business groups in the current tenant."
					},
					"response": []
				},
				{
					"name": "List of the IaaS Machines for a specific business group.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/business-groups/:groupId/machines",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"business-groups",
								":groupId",
								"machines"
							],
							"variable": [
								{
									"value": "{{groupId}}",
									"id": "groupId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "List of the IaaS Machines for a specific business group."
					},
					"response": []
				},
				{
					"name": "List of the reservations for a specific business group.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/business-groups/:groupId/reservations",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"business-groups",
								":groupId",
								"reservations"
							],
							"variable": [
								{
									"value": "{{groupId}}",
									"id": "groupId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "List of the reservations for a specific business group."
					},
					"response": []
				},
				{
					"name": "Invalidates currency symbol cache",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/currency",
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Invalidates currency symbol cache"
					},
					"response": []
				},
				{
					"name": "Retrieves a page of location properties.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/data-center-locations?groupId={{groupId}}&platformTypeId={{platformTypeId}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a page of location properties."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of available isos",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/isoes?platformTypeId={{platformTypeId}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of available isos"
					},
					"response": []
				},
				{
					"name": "Returns a page of the key pairs.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/keyPairs?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of the key pairs."
					},
					"response": []
				},
				{
					"name": "Create a new KeyPair",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/keyPairs",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The key pair to be created."
						},
						"description": "Create a new KeyPair"
					},
					"response": []
				},
				{
					"name": "Returns a key pair.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/keyPairs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"keyPairs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns the key pair associated with the given id."
					},
					"response": []
				},
				{
					"name": "Updates an existing KeyPair",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/keyPairs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"keyPairs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The key pair to be updated."
						},
						"description": "Updates an existing KeyPair."
					},
					"response": []
				},
				{
					"name": "Deletes a key pair corresponding to its unique Id",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/keyPairs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"keyPairs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a key pair corresponding to its unique Id"
					},
					"response": []
				},
				{
					"name": "Retrieves the list of available machine actions.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/machine-actions?platformTypeId={{platformTypeId}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of available machine actions."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of available machine prefixes.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/machine-prefixes?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of available machine prefixes."
					},
					"response": []
				},
				{
					"name": "Returns a page of management endpoints from iaas provider.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/management-endpoints?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of management endpoints with support for OData filtering, sorting and paging."
					},
					"response": []
				},
				{
					"name": "Returns a page of the network profiles.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/network/profiles?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of the network profiles."
					},
					"response": []
				},
				{
					"name": "Create a new NetworkProfile",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/network/profiles",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The network profile to be created."
						},
						"description": "Create a new NetworkProfile"
					},
					"response": []
				},
				{
					"name": "Returns a list of IP addresses within the network profile.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/network/profiles/addresses/:id?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"network",
								"profiles",
								"addresses",
								":id"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a list of IP addresses within the network profile."
					},
					"response": []
				},
				{
					"name": "Returns a list of range summaries within the network profile.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/network/profiles/range-summaries/:id?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"network",
								"profiles",
								"range-summaries",
								":id"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a list of range summaries within the network profile."
					},
					"response": []
				},
				{
					"name": "Returns the network profile.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/network/profiles/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"network",
								"profiles",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns the network profile associated with the given id."
					},
					"response": []
				},
				{
					"name": "Updates an existing NetworkProfile.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/network/profiles/{{networkProfileId}}",
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The network profile to be updated."
						},
						"description": "Updates an existing NetworkProfile."
					},
					"response": []
				},
				{
					"name": "Deletes a network profile corresponding to its unique Id.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/network/profiles/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"network",
								"profiles",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a network profile corresponding to its unique Id."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of available Openstack flavors",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/openstack/flavors?regionId={{regionId}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of available Openstack flavors"
					},
					"response": []
				},
				{
					"name": "Retrieves the list of available Openstack images.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/openstack/images?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of available Openstack images."
					},
					"response": []
				},
				{
					"name": "Retrieves the available openstack security groups.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/openstack/security-groups/businessgroup/:id?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"openstack",
								"security-groups",
								"businessgroup",
								":id"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the available openstack security groups based on business group."
					},
					"response": []
				},
				{
					"name": "Retrieves a page of provisioning workflows.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/provisioning-workflows?platformTypeId={{platformTypeId}}&actionId={{actionId}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a page of provisioning workflows based on action and platform type."
					},
					"response": []
				},
				{
					"name": "Collection of blueprint names.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/capacityUsageReport/blueprints?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Collection of blueprint names."
					},
					"response": []
				},
				{
					"name": "Retrieve a capacity usage report keyed by the blueprint.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/capacityUsageReport/byBlueprint?blueprintName={{blueprintName}}&machineType={{machineType}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a capacity usage report keyed by the blueprint."
					},
					"response": []
				},
				{
					"name": "Retrieve a capacity usage report keyed by the compute resource.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/capacityUsageReport/byComputeResource?computeResourceName={{computeResourceName}}&machineType={{machineType}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a capacity usage report keyed by the compute resource."
					},
					"response": []
				},
				{
					"name": "Retrieve a capacity usage report keyed by the group.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/capacityUsageReport/byGroup?groupName={{groupName}}&machineType={{machineType}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a capacity usage report keyed by the group."
					},
					"response": []
				},
				{
					"name": "Retrieve a capacity usage report keyed by the machine owner.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/capacityUsageReport/byOwner?ownerName={{ownerName}}&machineType={{machineType}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a capacity usage report keyed by the machine owner."
					},
					"response": []
				},
				{
					"name": "Collection of compute resource names.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/capacityUsageReport/computeResources?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Collection of compute resource names."
					},
					"response": []
				},
				{
					"name": "Collection of group names.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/capacityUsageReport/groups?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Collection of group names."
					},
					"response": []
				},
				{
					"name": "Collection of user names",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/capacityUsageReport/owners?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Collection of user names, one for each user that is listed as the owner of at least one machine."
					},
					"response": []
				},
				{
					"name": "Retrieve a chargeback report keyed by the machine owner.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/chargebackReport/byOwner?groupName={{groupName}}&machineType={{machineType}}&startDate={{startDate}}&endDate={{endDate}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a chargeback report keyed by the machine owner."
					},
					"response": []
				},
				{
					"name": "Collection of group names.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/chargebackReport/groups?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Collection of group names."
					},
					"response": []
				},
				{
					"name": "Retrieve a reclamation cost savings report keyed by the group.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/reclamationSavingsReport/byGroup?groupName={{groupName}}&machineType={{machineType}}&beginDate={{beginDate}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a reclamation cost savings report keyed by the group."
					},
					"response": []
				},
				{
					"name": "Retrieve a reclamation cost savings report keyed by the machine owner.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/reclamationSavingsReport/byOwner?ownerName={{ownerName}}&machineType={{machineType}}&beginDate={{beginDate}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a reclamation cost savings report keyed by the machine owner."
					},
					"response": []
				},
				{
					"name": "Collection of group names.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/reclamationSavingsReport/groups?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Collection of group names."
					},
					"response": []
				},
				{
					"name": "Collection of user names",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/reports/reclamationSavingsReport/owners?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Collection of user names, one for each user that is listed as the owner of at least one machine."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of available hardware profiles.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/scvmm/hardware-profiles?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of available hardware profiles."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of virtual hard disks",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/scvmm/virtual-hard-disks?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of virtual hard disks"
					},
					"response": []
				},
				{
					"name": "Asynchronous call to find IaaS services",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId?task={{task}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId"
							],
							"query": [
								{
									"key": "task",
									"value": "{{task}}"
								}
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Asynchronous call to find IaaS services by serviceId and add service catalog callback endpoint type UpdateCatalogItemType and ResourceType registrations for Iaas Service."
					},
					"response": []
				},
				{
					"name": "Retrieve the instance data.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/data-service/data/:classId/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"data-service",
								"data",
								":classId",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The dynamic data request object."
						},
						"description": "Retrieve the instance data for service and class"
					},
					"response": []
				},
				{
					"name": "Retrieve the default schema.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/data-service/schema/:classId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"data-service",
								"schema",
								":classId",
								"default"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the default schema for service and class"
					},
					"response": []
				},
				{
					"name": "Get the permissible values.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/data-service/schema/:classId/default/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"data-service",
								"schema",
								":classId",
								"default",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The element values request object."
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Retrieve the instance schema.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/data-service/schema/:classId/instances/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the instance schema for service and class"
					},
					"response": []
				},
				{
					"name": "Retrieve the specified schema.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/data-service/schema/:classId/types/:typeFilter",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the specified schema for service and class"
					},
					"response": []
				},
				{
					"name": "Get the permissible values.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/data-service/schema/:classId/types/:typeFilter/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The element values request object."
						},
						"description": "Get the permissible values of a field in the type specific schema."
					},
					"response": []
				},
				{
					"name": "Method to be called by ipam service to notify the iaas proxy service that a previously submitted request has been completed",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/ipam/:bindingId/complete",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"ipam",
								":bindingId",
								"complete"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Status object returned from the provider"
						},
						"description": "Callback called by the ipam service"
					},
					"response": []
				},
				{
					"name": "Returns a page of the LoadBalancer.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/load-balancers?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"load-balancers"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of the LoadBalancer from the iaas provider."
					},
					"response": []
				},
				{
					"name": "Create and save a LoadBalancer",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/load-balancers",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"load-balancers"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The Load Balancer to be created and saved."
						},
						"description": "Create and save a LoadBalancer"
					},
					"response": []
				},
				{
					"name": "Get allocation constraint",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/load-balancers-allocation-constraints?relatedCompTypeId={{relatedCompTypeId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"load-balancers-allocation-constraints"
							],
							"query": [
								{
									"key": "relatedCompTypeId",
									"value": "{{relatedCompTypeId}}"
								}
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The load balancer."
						},
						"description": "Get allocation constraint for load balancer"
					},
					"response": []
				},
				{
					"name": "Get Component Allocation Info",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/load-balancers-allocator",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"load-balancers-allocator"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The AllocateComponentRequest object."
						},
						"description": "Get Component Allocation Info for an AllocateComponentRequest object"
					},
					"response": []
				},
				{
					"name": "Deallocate Component",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/load-balancers-deallocator",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"load-balancers-deallocator"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The CompositionProviderRequest object."
						},
						"description": "Deallocate Component for a CompositionProviderRequest object"
					},
					"response": []
				},
				{
					"name": "Returns a LoadBalancer.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/load-balancers/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"load-balancers",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns the LoadBalancer associated with the given id."
					},
					"response": []
				},
				{
					"name": "Updates an existing managed LoadBalancer",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/load-balancers/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"load-balancers",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the LoadBalancer to be updated"
						},
						"description": "Updates an existing managed LoadBalancer"
					},
					"response": []
				},
				{
					"name": "Returns a page of the Network.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/networks?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"networks"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of the Network from the iaas provider."
					},
					"response": []
				},
				{
					"name": "Create and save a Network",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/networks",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"networks"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The Network to be created and saved."
						},
						"description": "Create and save a Network upon validation on Network fields"
					},
					"response": []
				},
				{
					"name": "Get allocation constraint",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/networks-allocation-constraints?relatedCompTypeId={{relatedCompTypeId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"networks-allocation-constraints"
							],
							"query": [
								{
									"key": "relatedCompTypeId",
									"value": "{{relatedCompTypeId}}"
								}
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The network containing the allocation constraint"
						},
						"description": "Get allocation constraint for the network"
					},
					"response": []
				},
				{
					"name": "Allocate Component",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/networks-allocator",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"networks-allocator"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The AllocateComponentRequest object."
						},
						"description": "Allocate Component for an AllocateComponentRequest object"
					},
					"response": []
				},
				{
					"name": "Deallocate Component",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/networks-deallocator",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"networks-deallocator"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The CompositionProviderRequest object."
						},
						"description": "Deallocate Component for a CompositionProviderRequest object"
					},
					"response": []
				},
				{
					"name": "Returns the Network.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/networks/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"networks",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns the Network associated with the given id."
					},
					"response": []
				},
				{
					"name": "Deletes a Network",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/networks/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"networks",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a Network corresponding to its unique Id."
					},
					"response": []
				},
				{
					"name": "Submit request from network service.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/requests",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"requests"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Network Service representation of a request."
						},
						"description": "Submit request from network service to the IaaS proxy provider service"
					},
					"response": []
				},
				{
					"name": "Returns a page of the SecurityGroup.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-groups?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-groups"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of the SecurityGroup from the iaas provider."
					},
					"response": []
				},
				{
					"name": "Create and save a SecurityGroup",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-groups",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-groups"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The SecurityGroup to be created and saved."
						},
						"description": "Create and save a SecurityGroup upon validation on SecurityGroup fields"
					},
					"response": []
				},
				{
					"name": "Get allocation constraint",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-groups-allocation-constraints?relatedCompTypeId={{relatedCompTypeId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-groups-allocation-constraints"
							],
							"query": [
								{
									"key": "relatedCompTypeId",
									"value": "{{relatedCompTypeId}}"
								}
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The security group."
						},
						"description": "Get allocation constraint for security group"
					},
					"response": []
				},
				{
					"name": "Returns the SecurityGroup.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-groups/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-groups",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns the SecurityGroup associated with the given id."
					},
					"response": []
				},
				{
					"name": "Updates an existing managed SecurityGroup",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-groups/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-groups",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the SecurityGroup to be updated"
						},
						"description": "Updates an existing managed SecurityGroup upon validation on SecurityGroup fields.Returns the updated SecurityGroup or RestEntity which wraps the newly created SecurityGroup."
					},
					"response": []
				},
				{
					"name": "Deletes a SecurityGroup",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-groups/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-groups",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a SecurityGroup corresponding to its unique Id."
					},
					"response": []
				},
				{
					"name": "Add a list of machines to a security group",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-groups/:id/machines",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-groups",
								":id",
								"machines"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The list of virtualMachineIds to be assigned to the security group."
						},
						"description": "Add a list of machines to a security group"
					},
					"response": []
				},
				{
					"name": "Add a list of security policies",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-groups/:id/security-policies",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-groups",
								":id",
								"security-policies"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The list of security policy ids to be assigned to the security group."
						},
						"description": "Add a list of security policies to a security group"
					},
					"response": []
				},
				{
					"name": "Returns a page of the SecurityPolicy.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-policies?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-policies"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of the SecurityPolicy from the iaas provider."
					},
					"response": []
				},
				{
					"name": "Create and save a SecurityPolicy",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-policies",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-policies"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The security policy object."
						},
						"description": "Create and save a SecurityPolicy upon validation on SecurityPolicy fields"
					},
					"response": []
				},
				{
					"name": "Returns a SecurityPolicy.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-policies",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns the SecurityPolicy associated with the given id."
					},
					"response": []
				},
				{
					"name": "Load a security policy",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-policy-load",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-policy-load"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The SecurityPolicy to be loaded."
						},
						"description": "Load a security policy"
					},
					"response": []
				},
				{
					"name": "Load a security tag",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-tag-load",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-tag-load"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The security tag object to be loaded."
						},
						"description": "Load a security tag"
					},
					"response": []
				},
				{
					"name": "Returns a page of the SecurityTag.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-tags?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-tags"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of the SecurityTag from the iaas provider."
					},
					"response": []
				},
				{
					"name": "Get allocation constraint",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-tags-allocation-constraints?relatedCompTypeId={{relatedCompTypeId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-tags-allocation-constraints"
							],
							"query": [
								{
									"key": "relatedCompTypeId",
									"value": "{{relatedCompTypeId}}"
								}
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The security tag."
						},
						"description": "Get allocation constraint for security tag"
					},
					"response": []
				},
				{
					"name": "Add a list of security tags machines to a machine",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-tags/applyToMachine/:machineId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-tags",
								"applyToMachine",
								":machineId"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{machineId}}",
									"id": "machineId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The list of Security Tags to be assigned to the machine."
						},
						"description": "Add a list of security tags machines to a machine"
					},
					"response": []
				},
				{
					"name": "Returns a SecurityTag.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/network/security-tags/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"network",
								"security-tags",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns the SecurityTag associated with the given id."
					},
					"response": []
				},
				{
					"name": "Perform post request submission actions.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/post-submission-extension",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"post-submission-extension"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Service Catalog representation of a blueprint request."
						},
						"description": "Perform post request submission actions. Retrieves the complete set of custom properties associated with a request for a blueprint."
					},
					"response": []
				},
				{
					"name": "Validate catalog request.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/requestValidations",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"requestValidations"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Service Catalog representation of a blueprint request."
						},
						"description": "Validates un-submitted catalog request and gets the quotes for the request.The request could be a machine request or resource action request."
					},
					"response": []
				},
				{
					"name": "Submit request from service catalog.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/requests",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"requests"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Service catalog representation of a blueprint request."
						},
						"description": "Submit catalog request to iaas proxy provider service."
					},
					"response": []
				},
				{
					"name": "Signal catalog request completion.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/requests/:requestId/complete?callbackServiceId={{callbackServiceId}}&resourceAction={{resourceAction}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"requests",
								":requestId",
								"complete"
							],
							"query": [
								{
									"key": "callbackServiceId",
									"value": "{{callbackServiceId}}"
								},
								{
									"key": "resourceAction",
									"value": "{{resourceAction}}"
								}
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Request completion details such as request state, resource identifiers and completion text."
						},
						"description": "Updates the server catalog from IaaS service for request completion.It does not perform resource updating."
					},
					"response": []
				},
				{
					"name": "Rollback a rejected catalog request.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/requests/:requestId/rollback",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"requests",
								":requestId",
								"rollback"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Rollback request data such as resource identifiers etc."
						},
						"description": "Rolls back a rejected request from the service catalog to IaaS."
					},
					"response": []
				},
				{
					"name": "Returns a page of the reservations from iaas provider.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/reservations?category={{category}}&expandMode={{expandMode}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"reservations"
							],
							"query": [
								{
									"key": "category",
									"value": "{{category}}"
								},
								{
									"key": "expandMode",
									"value": "{{expandMode}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of the reservations, with different content in extensionData depending on the parameter specified in expandMode."
					},
					"response": []
				},
				{
					"name": "Create and save a reservation in iaas provider.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/reservations",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"reservations"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The reservation object"
						},
						"description": "Create and save a reservation upon validation on Reservation fields."
					},
					"response": []
				},
				{
					"name": "Returns a page of the reservation policy.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/reservations/policies?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"reservations",
								"policies"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of the reservation policy from iaas provider."
					},
					"response": []
				},
				{
					"name": "Create and save a reservation policy.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/reservations/policies",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"reservations",
								"policies"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The reservation policy object."
						},
						"description": "Create and save a reservation policy upon validation on reservation policy fields."
					},
					"response": []
				},
				{
					"name": "Returns the reservation policy.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/reservations/policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"reservations",
								"policies",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns the reservation policy associated with the given id."
					},
					"response": []
				},
				{
					"name": "Updates or creates a reservation policy.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/reservations/policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"reservations",
								"policies",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The reservation policy object."
						},
						"description": "Updates or creates a reservation policy upon validation on reservation policy fields.Returns the updated ReservationPolicy or RestEntity which wraps the newly created ReservationPolicy."
					},
					"response": []
				},
				{
					"name": "Deletes a reservation policy.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/reservations/policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"reservations",
								"policies",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a reservation policy corresponding to its unique Id."
					},
					"response": []
				},
				{
					"name": "Returns the reservation",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/reservations/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"reservations",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns the reservation associated with the given id."
					},
					"response": []
				},
				{
					"name": "Updates or creates a reservation.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/reservations/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"reservations",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The id of the reservation to be updated."
						},
						"description": "Returns the updated reservation or RestEntity which wraps the newly created reservation."
					},
					"response": []
				},
				{
					"name": "Deletes a Reservation.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/reservations/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"reservations",
								":id"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a Reservation corresponding to its unique Id."
					},
					"response": []
				},
				{
					"name": "Submit request from network service.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/resource-actions",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"resource-actions"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Submit request from network service to the IaaS proxy provider service"
					},
					"response": []
				},
				{
					"name": "Retrieves the list of status updates.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/services/:serviceId/status/:taskId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"services",
								":serviceId",
								"status",
								":taskId"
							],
							"variable": [
								{
									"value": "{{serviceId}}",
									"id": "serviceId"
								},
								{
									"value": "{{taskId}}",
									"id": "taskId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of status updates"
					},
					"response": []
				},
				{
					"name": "Retrieves the list of snapshots for a machine.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/source-machine-snapshots?machineId={{machineId}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of snapshots for a machine."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of VM templates.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/source-machines?platformTypeId={{platformTypeId}}&actionId={{actionId}}&loadTemplates={{loadTemplates}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of VM templates."
					},
					"response": []
				},
				{
					"name": "Retrieves a VM template by id with disks.",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/source-machines/:id?platformTypeId={{platformTypeId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"source-machines",
								":id"
							],
							"query": [
								{
									"key": "platformTypeId",
									"value": "{{platformTypeId}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a VM template by id with disks."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of available transport zones.",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/transport-zones?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of available transport zones."
					},
					"response": []
				},
				{
					"name": "Initiates the migration of business group and tenant administrators",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/upgrade/administrators",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Initiates the migration of business group and tenant administrators"
					},
					"response": []
				},
				{
					"name": "Initiates the migration of a IaaS build profile",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/upgrade/buildProfile/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"upgrade",
								"buildProfile",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Initiates the migration of a IaaS build profile"
					},
					"response": []
				},
				{
					"name": "Clean up the upgrade flag",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/upgrade/complete",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Clean up the upgrade flag in ConfigurationData(enabled features)"
					},
					"response": []
				},
				{
					"name": "Migrates affected governance content",
					"request": {
						"url": "https://{{vra-fqdn}}/iaas-proxy-provider/api/upgrade/governance",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Migrates affected governance content"
					},
					"response": []
				},
				{
					"name": "Initiates the migration of a IaaS property definition",
					"request": {
						"url": {
							"raw": "https/:///iaas-proxy-provider/api/upgrade/property-definition/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"iaas-proxy-provider",
								"api",
								"upgrade",
								"property-definition",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Initiates the migration of a IaaS property definition"
					},
					"response": []
				}
			]
		},
		{
			"name": "Identity Service",
			"description": "",
			"item": [
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/identity/api/authorization/permissions?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns the resource associated with the given id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/permissions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"permissions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create or update a permission",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/permissions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"permissions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the permission to use for the operation"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Return the admin permissions of a permission",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/permissions/:permissionId/permissions/admin?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"permissions",
								":permissionId",
								"permissions",
								"admin"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{permissionId}}",
									"id": "permissionId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add an empty permission to admin permissions",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/permissions/:permissionId/permissions/admin",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"permissions",
								":permissionId",
								"permissions",
								"admin"
							],
							"variable": [
								{
									"value": "{{permissionId}}",
									"id": "permissionId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Adds an empty permission to the list of admin permissions of another permission.\nUsed for testing purposes only."
					},
					"response": []
				},
				{
					"name": "Delete an empty permission from admin permissions",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/permissions/:permissionId/permissions/admin",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"permissions",
								":permissionId",
								"permissions",
								"admin"
							],
							"variable": [
								{
									"value": "{{permissionId}}",
									"id": "permissionId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Removes an empty permission from the list of admin permissions of another permission. Used for testing purposes only."
					},
					"response": []
				},
				{
					"name": "Add a permission to admin permissions",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/permissions/:permissionId/permissions/admin/:adminPermissionId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"permissions",
								":permissionId",
								"permissions",
								"admin",
								":adminPermissionId"
							],
							"variable": [
								{
									"value": "{{permissionId}}",
									"id": "permissionId"
								},
								{
									"value": "{{adminPermissionId}}",
									"id": "adminPermissionId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Add a permission to the list of admin permissions of another permission."
					},
					"response": []
				},
				{
					"name": "Delete a permission from admin permissions",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/permissions/:permissionId/permissions/admin/:adminPermissionId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"permissions",
								":permissionId",
								"permissions",
								"admin",
								":adminPermissionId"
							],
							"variable": [
								{
									"value": "{{permissionId}}",
									"id": "permissionId"
								},
								{
									"value": "{{adminPermissionId}}",
									"id": "adminPermissionId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Removes a permission from the list of admin permissions of another permission."
					},
					"response": []
				},
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/identity/api/authorization/resource-types?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns the resource associated with the given id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/resource-types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"resource-types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update or create a resource type by its id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/resource-types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"resource-types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the resource type to update or create"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/identity/api/authorization/roles?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Return the roles to assign to other users",
					"request": {
						"url": "https://{{vra-fqdn}}/identity/api/authorization/roles/assignable?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return the roles that the current user has permissions to assign to other users."
					},
					"response": []
				},
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/identity/api/authorization/roles/extensions?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add an empty permission to a role extension.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/extensions/:extensionId/permissions/assigned",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								"extensions",
								":extensionId",
								"permissions",
								"assigned"
							],
							"variable": [
								{
									"value": "{{extensionId}}",
									"id": "extensionId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Adds an empty permission to the list of permissions of a role extension.\nUsed for testing purposes only."
					},
					"response": []
				},
				{
					"name": "Remove an empty permission from a role extension",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/extensions/:extensionId/permissions/assigned",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								"extensions",
								":extensionId",
								"permissions",
								"assigned"
							],
							"variable": [
								{
									"value": "{{extensionId}}",
									"id": "extensionId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Removes an empty permission from the list of permissions of a role extension.\nUsed for testing purposes only."
					},
					"response": []
				},
				{
					"name": "Add a permission to a role extension",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/extensions/:extensionId/permissions/assigned/:permissionId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								"extensions",
								":extensionId",
								"permissions",
								"assigned",
								":permissionId"
							],
							"variable": [
								{
									"value": "{{extensionId}}",
									"id": "extensionId"
								},
								{
									"value": "{{permissionId}}",
									"id": "permissionId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Adds a permission to the list of permissions of a role extension."
					},
					"response": []
				},
				{
					"name": "Remove a permission from a role extension",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/extensions/:extensionId/permissions/assigned/:permissionId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								"extensions",
								":extensionId",
								"permissions",
								"assigned",
								":permissionId"
							],
							"variable": [
								{
									"value": "{{extensionId}}",
									"id": "extensionId"
								},
								{
									"value": "{{permissionId}}",
									"id": "permissionId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Removes a permission from the list of permissions of a role extension."
					},
					"response": []
				},
				{
					"name": "Returns the resource associated with the given id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/extensions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								"extensions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update or create a role extension",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/extensions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								"extensions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the role extension to update or create"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns the resource associated with the given id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Return the role extension assigned to a role",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/:roleId/extensions?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								":roleId",
								"extensions"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{roleId}}",
									"id": "roleId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Return all permissions of a role",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/:roleId/permissions?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								":roleId",
								"permissions"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{roleId}}",
									"id": "roleId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return all the permissions of a role, taken from the permissions directly assigned to the role and form the permissions of the role's role extensions."
					},
					"response": []
				},
				{
					"name": "Return the admin permissions of a role",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/:roleId/permissions/admin?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								":roleId",
								"permissions",
								"admin"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{roleId}}",
									"id": "roleId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return all the admin permissions of a role, computed as the union of the admin permissions of all the admin permissions of the role's permissions."
					},
					"response": []
				},
				{
					"name": "Return the permissions assigned to a role",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/:roleId/permissions/assigned?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								":roleId",
								"permissions",
								"assigned"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{roleId}}",
									"id": "roleId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return the permissions directly assigned to a role."
					},
					"response": []
				},
				{
					"name": "Add an empty permission to a role.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/:roleId/permissions/assigned",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								":roleId",
								"permissions",
								"assigned"
							],
							"variable": [
								{
									"value": "{{roleId}}",
									"id": "roleId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Adds an empty permission to the list of permissions of a role.\nUsed for testing purposes only."
					},
					"response": []
				},
				{
					"name": "Remove an empty permission from a role.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/:roleId/permissions/assigned",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								":roleId",
								"permissions",
								"assigned"
							],
							"variable": [
								{
									"value": "{{roleId}}",
									"id": "roleId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Remove an empty permission from the list of permissions of a role.\nUsed for testing purposes only."
					},
					"response": []
				},
				{
					"name": "Add a permission to a role.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/:roleId/permissions/assigned/:permissionId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								":roleId",
								"permissions",
								"assigned",
								":permissionId"
							],
							"variable": [
								{
									"value": "{{roleId}}",
									"id": "roleId"
								},
								{
									"value": "{{permissionId}}",
									"id": "permissionId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Adds a permission to the list of permissions of a role."
					},
					"response": []
				},
				{
					"name": "Remove permission from a role.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/roles/:roleId/permissions/assigned/:permissionId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"roles",
								":roleId",
								"permissions",
								"assigned",
								":permissionId"
							],
							"variable": [
								{
									"value": "{{roleId}}",
									"id": "roleId"
								},
								{
									"value": "{{permissionId}}",
									"id": "permissionId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Remove permission from the list of permissions of a role."
					},
					"response": []
				},
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/identity/api/authorization/scopes/types?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns the resource associated with the given id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/scopes/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"scopes",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create or update a scope type by id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/scopes/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"scopes",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the scope type to update or create"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Return admin permission for a scope type",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/scopes/types/:typeId/permissions/admin?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"scopes",
								"types",
								":typeId",
								"permissions",
								"admin"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{typeId}}",
									"id": "typeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return the prerequisite admin permissions associated with the requested scope."
					},
					"response": []
				},
				{
					"name": "Add empty permission to a scope type",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/scopes/types/:typeId/permissions/admin",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"scopes",
								"types",
								":typeId",
								"permissions",
								"admin"
							],
							"variable": [
								{
									"value": "{{typeId}}",
									"id": "typeId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Add an empty permission to the list of admin permissions of a scope type.\nUsed for testing purposes only."
					},
					"response": []
				},
				{
					"name": "Delete empty permission from a scope type",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/scopes/types/:typeId/permissions/admin",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"scopes",
								"types",
								":typeId",
								"permissions",
								"admin"
							],
							"variable": [
								{
									"value": "{{typeId}}",
									"id": "typeId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete an empty permission from the list of admin permissions of a scope type.\nUsed for testing purposes only."
					},
					"response": []
				},
				{
					"name": "Add permission to a scope type",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/scopes/types/:typeId/permissions/admin/:adminPermissionId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"scopes",
								"types",
								":typeId",
								"permissions",
								"admin",
								":adminPermissionId"
							],
							"variable": [
								{
									"value": "{{typeId}}",
									"id": "typeId"
								},
								{
									"value": "{{adminPermissionId}}",
									"id": "adminPermissionId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Add a permission to the list of admin permissions of a scope type."
					},
					"response": []
				},
				{
					"name": "Delete permission from a scope type",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/scopes/types/:typeId/permissions/admin/:adminPermissionId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"scopes",
								"types",
								":typeId",
								"permissions",
								"admin",
								":adminPermissionId"
							],
							"variable": [
								{
									"value": "{{typeId}}",
									"id": "typeId"
								},
								{
									"value": "{{adminPermissionId}}",
									"id": "adminPermissionId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete a permission from the list of admin permissions of a scope type."
					},
					"response": []
				},
				{
					"name": "Return ACL for a tenant",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/acl?principalId={{principalId}}&resourceRefId={{resourceRefId}}&roleId={{roleId}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"acl"
							],
							"query": [
								{
									"key": "principalId",
									"value": "{{principalId}}"
								},
								{
									"key": "resourceRefId",
									"value": "{{resourceRefId}}"
								},
								{
									"key": "roleId",
									"value": "{{roleId}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves ACL entries from the specified tenant. The result can be filtered directly by principal, resource and/or role. If no filter is specified a custom query can be provided within the pagination information."
					},
					"response": []
				},
				{
					"name": "Set ACL of a tenant",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/acl",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"acl"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "collection of ACL entries to set"
						},
						"description": "Set a collection of ACL entries to the specified tenant after removing the tenant's existing ACL entries."
					},
					"response": []
				},
				{
					"name": "Add ACL to a tenant",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/acl",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"acl"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "collection of ACL entries"
						},
						"description": "Adds a collection of ACL entries to the specified tenant."
					},
					"response": []
				},
				{
					"name": "Remove ACL entries from a tenant",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/acl?principalId={{principalId}}&resourceRefId={{resourceRefId}}&roleId={{roleId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"acl"
							],
							"query": [
								{
									"key": "principalId",
									"value": "{{principalId}}"
								},
								{
									"key": "resourceRefId",
									"value": "{{resourceRefId}}"
								},
								{
									"key": "roleId",
									"value": "{{roleId}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Return the extended authorities for principals",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/authorities/extended?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"authorities",
								"extended"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the collection of principal reference(s)."
						},
						"description": "Retrieves the extended authorities that a collection of principal references hold system wide, including effective roles and effective permissions.\n\nIf some principals in 'refs' are not found, the operation doesn't fail with a 404, but instead returns a result for the ones that were found."
					},
					"response": []
				},
				{
					"name": "Return the extended authorities permissions for principals",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/authorities/extended/permissions?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"authorities",
								"extended",
								"permissions"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the collection of principal reference(s)."
						},
						"description": "Retrieves the extended authorities that a collection of principal references hold system wide, including effective roles and effective permissions.\n\nIf some principals in 'refs' are not found, the operation doesn't fail with a 404, but instead returns a result for the ones that were found."
					},
					"response": []
				},
				{
					"name": "Return the extended authorities roles for principals",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/authorities/extended/roles?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"authorities",
								"extended",
								"roles"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the collection of principal reference(s)."
						},
						"description": "Retrieves the extended authorities that a collection of principal references hold system wide, including effective roles and effective permissions.\n\nIf some principals in 'refs' are not found, the operation doesn't fail with a 404, but instead returns a result for the ones that were found."
					},
					"response": []
				},
				{
					"name": "Return permissions for principals",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/authorities/permissions?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"authorities",
								"permissions"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the collection of principal reference(s)."
						},
						"description": "Retrieves the authorities that a collection of principal references hold system wide, including effective roles and effective permissions.\n\nIf some principals in 'refs' are not found, the operation doesn't fail with a 404, but instead returns a result for the ones that were found."
					},
					"response": []
				},
				{
					"name": "Return roles for principals",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/authorities/roles?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"authorities",
								"roles"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the collection of principal reference(s)."
						},
						"description": "Retrieves the authorities that a collection of principal references hold system wide, including effective roles and effective permissions.\n\nIf some principals in 'refs' are not found, the operation doesn't fail with a 404, but instead returns a result for the ones that were found."
					},
					"response": []
				},
				{
					"name": "Return principal extensions",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals?containsRole={{containsRole}}&hasRole={{hasRole}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals"
							],
							"query": [
								{
									"key": "containsRole",
									"value": "{{containsRole}}"
								},
								{
									"key": "hasRole",
									"value": "{{hasRole}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the principal extensions for the specified tenant, and optionally filtered by type of roles associated with it. Scope roles are not taken into account in the filtering."
					},
					"response": []
				},
				{
					"name": "Delete all principal extensions",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes all principal extensions, filtering them by the oData query inside the paging information if provided."
					},
					"response": []
				},
				{
					"name": "Return a principal extension by id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create or update a principal extension",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the principal extension to create or update"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete a principal extension",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes the principal extension associated with a principal id."
					},
					"response": []
				},
				{
					"name": "Return the effective permissions for principal",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId/permissions?roleType={{roleType}}&scopeType={{scopeType}}&scopeId={{scopeId}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId",
								"permissions"
							],
							"query": [
								{
									"key": "roleType",
									"value": "{{roleType}}"
								},
								{
									"key": "scopeType",
									"value": "{{scopeType}}"
								},
								{
									"key": "scopeId",
									"value": "{{scopeId}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the effective permissions a principal holds system wide, determined by their cumulative system, tenant and scope roles. It's possible to filter the permissions by type(s), and the type and/or id of the scope for scope roles."
					},
					"response": []
				},
				{
					"name": "Return the effective roles for principal",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId/roles?type={{type}}&scopeType={{scopeType}}&scopeId={{scopeId}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId",
								"roles"
							],
							"query": [
								{
									"key": "type",
									"value": "{{type}}"
								},
								{
									"key": "scopeType",
									"value": "{{scopeType}}"
								},
								{
									"key": "scopeId",
									"value": "{{scopeId}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the effective roles a principal holds system wide. It's possible to filter the roles by type(s), and the type and/or id of the scope for scope roles."
					},
					"response": []
				},
				{
					"name": "Set System and Tenant roles(s) to a principal",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId/roles",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId",
								"roles"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "collection with the id(s) of the role(s) to set"
						},
						"description": "Sets the specified System and Tenant role(s) to a principal. As result the principal will contain only that set of System and Tenant roles."
					},
					"response": []
				},
				{
					"name": "Remove an empty System or Tenant role from a principal",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId/roles",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId",
								"roles"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Remove an empty System or Tenant role from a principal.\nUsed for testing purposes only."
					},
					"response": []
				},
				{
					"name": "Add System or Tenant role to a principal",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId/roles/:roleId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId",
								"roles",
								":roleId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								},
								{
									"value": "{{roleId}}",
									"id": "roleId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove a System or Tenant tole from a principal",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId/roles/:roleId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId",
								"roles",
								":roleId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								},
								{
									"value": "{{roleId}}",
									"id": "roleId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Return the scopes for principal",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId/scopes?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId",
								"scopes"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return the scopes a principal is included in system wide."
					},
					"response": []
				},
				{
					"name": "Return a specific scope for principal",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId/scopes/:scopeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId",
								"scopes",
								":scopeId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								},
								{
									"value": "{{scopeId}}",
									"id": "scopeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a specific scope a principal is included in system wide."
					},
					"response": []
				},
				{
					"name": "Set scope role(s) to a principal",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId/scopes/:scopeId/roles",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId",
								"scopes",
								":scopeId",
								"roles"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								},
								{
									"value": "{{scopeId}}",
									"id": "scopeId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "collection with id(s) of the scope role(s) to set"
						},
						"description": "Sets the specified Scope role(s) to a principal in the context of a scope. As result the principal will contain only that set of Scope roles."
					},
					"response": []
				},
				{
					"name": "Add scope role(s) to a principal",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId/scopes/:scopeId/roles",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId",
								"scopes",
								":scopeId",
								"roles"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								},
								{
									"value": "{{scopeId}}",
									"id": "scopeId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "collection with id(s) of the scope role(s) to add"
						},
						"description": "Add the specified Scope role(s) to a principal in the context of a scope."
					},
					"response": []
				},
				{
					"name": "Remove an empty Scope role from a principal",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId/scopes/:scopeId/roles",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId",
								"scopes",
								":scopeId",
								"roles"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								},
								{
									"value": "{{scopeId}}",
									"id": "scopeId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Remove an empty scope role from a principal in the context of a scope.\nUsed for testing purposes only."
					},
					"response": []
				},
				{
					"name": "Add a scope role to a principal in the context of a scope",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId/scopes/:scopeId/roles/:scopeRoleId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId",
								"scopes",
								":scopeId",
								"roles",
								":scopeRoleId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								},
								{
									"value": "{{scopeId}}",
									"id": "scopeId"
								},
								{
									"value": "{{scopeRoleId}}",
									"id": "scopeRoleId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove an Scope role from a principal",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/principals/:principalId/scopes/:scopeId/roles/:scopeRoleId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"principals",
								":principalId",
								"scopes",
								":scopeId",
								"roles",
								":scopeRoleId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								},
								{
									"value": "{{scopeId}}",
									"id": "scopeId"
								},
								{
									"value": "{{scopeRoleId}}",
									"id": "scopeRoleId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Remove a scope role from a principal in the context of a scope."
					},
					"response": []
				},
				{
					"name": "Return resources",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/resources?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"resources"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return resource for the specified tenant."
					},
					"response": []
				},
				{
					"name": "Delete resources",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/resources?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"resources"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes resources within the specified tenant.\nCan delete resources based on ODATA query options."
					},
					"response": []
				},
				{
					"name": "Return resource by its id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/resources/:resourceId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"resources",
								":resourceId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update or create a resource by its id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/resources/:resourceId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"resources",
								":resourceId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the resource to create or update"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete resource",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/resources/:resourceId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"resources",
								":resourceId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Return scopes for tenant",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/scopes?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"scopes"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete all scopes for a tenant",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/scopes?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"scopes"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Can delete scope based on ODATA query options."
					},
					"response": []
				},
				{
					"name": "Return principals that belong to a set of scopes",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/scopes-principals?roleId={{roleId}}&permissionId={{permissionId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"scopes-principals"
							],
							"query": [
								{
									"key": "roleId",
									"value": "{{roleId}}"
								},
								{
									"key": "permissionId",
									"value": "{{permissionId}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the set of scopes the principals belongs to"
						},
						"description": "Return the principals that belong to a collection of scopes, and optionally filtered by a specific role or a specific permission. When filtering the result the role takes precedence over the permission."
					},
					"response": []
				},
				{
					"name": "Return scope by id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/scopes/:scopeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"scopes",
								":scopeId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{scopeId}}",
									"id": "scopeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create or update a scope by id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/scopes/:scopeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"scopes",
								":scopeId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{scopeId}}",
									"id": "scopeId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the scope to create or update"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete a scope",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/scopes/:scopeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"scopes",
								":scopeId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{scopeId}}",
									"id": "scopeId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Set resource(s) to a scope",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/scopes/:scopeId/resources",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"scopes",
								":scopeId",
								"resources"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{scopeId}}",
									"id": "scopeId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "collection with the resource(s) to set"
						},
						"description": "Set the specified resource(s) to a scope. As result the scope will contain only that set of resources."
					},
					"response": []
				},
				{
					"name": "Add resources to a scope",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/scopes/:scopeId/resources",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"scopes",
								":scopeId",
								"resources"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{scopeId}}",
									"id": "scopeId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "collection with the resource(s) to add"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remve resources from a scope",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/scopes/:scopeId/resources?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"scopes",
								":scopeId",
								"resources"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{scopeId}}",
									"id": "scopeId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Remove resource from a scope",
					"request": {
						"url": {
							"raw": "https/:///identity/api/authorization/tenants/:tenantId/scopes/:scopeId/resources/:resourceId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"authorization",
								"tenants",
								":tenantId",
								"scopes",
								":scopeId",
								"resources",
								":resourceId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{scopeId}}",
									"id": "scopeId"
								},
								{
									"value": "{{resourceId}}",
									"id": "resourceId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get a set of data for the specified object",
					"request": {
						"url": {
							"raw": "https/:///identity/api/data-service/data/:classId/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"data-service",
								"data",
								":classId",
								":id"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a set of data for the specified object."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of possible values for a given type of object",
					"request": {
						"url": {
							"raw": "https/:///identity/api/data-service/list/:classId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"data-service",
								"list",
								":classId",
								"default"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of possible values for a given type of object."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of possible values for a given type of object",
					"request": {
						"url": {
							"raw": "https/:///identity/api/data-service/list/:classId/types/:typeFilter",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"data-service",
								"list",
								":classId",
								"types",
								":typeFilter"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of possible values for a given type of object."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object class",
					"request": {
						"url": {
							"raw": "https/:///identity/api/data-service/schema/:classId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"data-service",
								"schema",
								":classId",
								"default"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema for the specified object class."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///identity/api/data-service/schema/:classId/default/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"data-service",
								"schema",
								":classId",
								"default",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///identity/api/data-service/schema/:classId/default/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"data-service",
								"schema",
								":classId",
								"default",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object",
					"request": {
						"url": {
							"raw": "https/:///identity/api/data-service/schema/:classId/instances/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This returns the schema of a particular type adjusted to the state of a specific instance.."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///identity/api/data-service/schema/:classId/instances/:id/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///identity/api/data-service/schema/:classId/instances/:id/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object type",
					"request": {
						"url": {
							"raw": "https/:///identity/api/data-service/schema/:classId/types/:typeFilter",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This returns the schema of a particular type within a class of object."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///identity/api/data-service/schema/:classId/types/:typeFilter/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///identity/api/data-service/schema/:classId/types/:typeFilter/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Return a page of tenants",
					"request": {
						"url": "https://{{vra-fqdn}}/identity/api/tenants?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update service client secret",
					"request": {
						"url": "https://{{vra-fqdn}}/identity/api/tenants/solutions",
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Solution info data"
						},
						"description": "Update service client secret (or in case of SSO2 solution user certificate) with the target tenant"
					},
					"response": []
				},
				{
					"name": "Return a tenant by its id.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create or update a tenant.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the tenant to update or create"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete a tenant by its id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Return identity stores (aka: directories)",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/directories?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"directories"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return the requested page of identity stores (aka: directories) for the provided tenant"
					},
					"response": []
				},
				{
					"name": "Create an identity store",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/directories",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"directories"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the identity store to create"
						},
						"description": "Create an identity store. Http status 400 will be returned if an IdentityStore with the given domain exist for the target tenant."
					},
					"response": []
				},
				{
					"name": "Test the connectivity to an identity store",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/directories/connectivity",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"directories",
								"connectivity"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the identity store configuration to test"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve an identity store by its id",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/directories/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"directories",
								":id"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create or update an identity store",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/directories/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"directories",
								":id"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the identity store to update or create"
						},
						"description": "Creates or update a given IdentityStore. Use the returned instance for further operations as the save operation might have changed the entity instance completely."
					},
					"response": []
				},
				{
					"name": "Delete an identity store",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/directories/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"directories",
								":id"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete an existing identity store identified by its id."
					},
					"response": []
				},
				{
					"name": "Retrieve the status of an identity store",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/directories/:id/status",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"directories",
								":id",
								"status"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the status of an identity store identified by its id."
					},
					"response": []
				},
				{
					"name": "Retrieves all custom groups and SSO groups.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/groups?criteria={{criteria}}&domain={{domain}}&parentGroup={{parentGroup}}&groupType={{groupType}}&permissionFiltered={{permissionFiltered}}&role={{role}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"groups"
							],
							"query": [
								{
									"key": "criteria",
									"value": "{{criteria}}"
								},
								{
									"key": "domain",
									"value": "{{domain}}"
								},
								{
									"key": "parentGroup",
									"value": "{{parentGroup}}"
								},
								{
									"key": "groupType",
									"value": "{{groupType}}"
								},
								{
									"key": "permissionFiltered",
									"value": "{{permissionFiltered}}"
								},
								{
									"key": "role",
									"value": "{{role}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves all custom groups and SSO groups that correspond to the search criteria.\nParameters 'page', '$top' and 'limit' are taken into account only when 'groupType' is set to CUSTOM.\nParameters '$skip', '$filter', '$orderby' are never takeninto account. Please use 'criteria' instead of '$filter'."
					},
					"response": []
				},
				{
					"name": "Create a custom group",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/groups",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"groups"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the group to be created"
						},
						"description": "Create a custom group at the top of the tree."
					},
					"response": []
				},
				{
					"name": "Retrieves all assigned custom groups and SSO groups.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/groups/assigned?criteria={{criteria}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"groups",
								"assigned"
							],
							"query": [
								{
									"key": "criteria",
									"value": "{{criteria}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves all custom groups and SSO that has assigned roles and groups that correspond to the search criteria.\nParameter '$filter' is not taken into account, please use 'criteria' instead."
					},
					"response": []
				},
				{
					"name": "Retrieve a group.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/groups/:groupId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"groups",
								":groupId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{groupId}}",
									"id": "groupId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a group by its id."
					},
					"response": []
				},
				{
					"name": "Update a custom group",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/groups/:groupId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"groups",
								":groupId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{groupId}}",
									"id": "groupId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "custom grroup data to update"
						},
						"description": "Updates a Custom group. Only the group data is updated, all members are untouched."
					},
					"response": []
				},
				{
					"name": "Add users/grops to a parent group.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/groups/:groupId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"groups",
								":groupId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{groupId}}",
									"id": "groupId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "wrapper of the incoming groups and users"
						},
						"description": "Adds a set of groups and users to a parent group. Each group and element must be already existing, otherwise the request will fail. This request will append the provided relations to the already existing ones."
					},
					"response": []
				},
				{
					"name": "Delete a custom group",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/groups/:groupId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"groups",
								":groupId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{groupId}}",
									"id": "groupId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete a custom group. All child custom groups are preserved and are moved at the top of the tree."
					},
					"response": []
				},
				{
					"name": "Return all parent groups",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/groups/:groupId/parents?groupType={{groupType}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"groups",
								":groupId",
								"parents"
							],
							"query": [
								{
									"key": "groupType",
									"value": "{{groupType}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{groupId}}",
									"id": "groupId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return all parent groups of a child group. Groups are iterated recursively up the tree."
					},
					"response": []
				},
				{
					"name": "Find business groups of a group",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/groups/:groupId/subtenants?role={{role}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"groups",
								":groupId",
								"subtenants"
							],
							"query": [
								{
									"key": "role",
									"value": "{{role}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{groupId}}",
									"id": "groupId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete a SSO group from a custom group",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/groups/:parentGroupId/groups/:groupId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"groups",
								":parentGroupId",
								"groups",
								":groupId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{parentGroupId}}",
									"id": "parentGroupId"
								},
								{
									"value": "{{groupId}}",
									"id": "groupId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Find users in groups",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/groups/:parentGroupId/users?criteria={{criteria}}&expandGroups={{expandGroups}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"groups",
								":parentGroupId",
								"users"
							],
							"query": [
								{
									"key": "criteria",
									"value": "{{criteria}}"
								},
								{
									"key": "expandGroups",
									"value": "{{expandGroups}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{parentGroupId}}",
									"id": "parentGroupId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Finds users in both SSO and Custom groups by tenant and parent group.\nParameters 'page', 'limit', '$skip', '$filter','$orderby' are not taken into account. Please use 'criteria' instead of '$filter'."
					},
					"response": []
				},
				{
					"name": "Remove a user from a custom group",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/groups/:parentGroupId/users/:userId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"groups",
								":parentGroupId",
								"users",
								":userId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{parentGroupId}}",
									"id": "parentGroupId"
								},
								{
									"value": "{{userId}}",
									"id": "userId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "FindsXXX regular users in one of the identity providers configured for the tenant.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/principals?criteria={{criteria}}&domain={{domain}}&parentGroup={{parentGroup}}&permissionFiltered={{permissionFiltered}}&role={{role}}&expandGroups={{expandGroups}}&localUsersOnly={{localUsersOnly}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"principals"
							],
							"query": [
								{
									"key": "criteria",
									"value": "{{criteria}}"
								},
								{
									"key": "domain",
									"value": "{{domain}}"
								},
								{
									"key": "parentGroup",
									"value": "{{parentGroup}}"
								},
								{
									"key": "permissionFiltered",
									"value": "{{permissionFiltered}}"
								},
								{
									"key": "role",
									"value": "{{role}}"
								},
								{
									"key": "expandGroups",
									"value": "{{expandGroups}}"
								},
								{
									"key": "localUsersOnly",
									"value": "{{localUsersOnly}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Below are the priorities for each search option:\n- if 'role' is set, find all users matching that role and return\n- else use 'criteria' to search either the account name, first name, last name, or description of the account. Filter results based on 'permissionFiltered' (if provided).\n\nParameters 'page', '$skip' and '$filter' are not taken into account. Use 'limit' and 'criteria' instead."
					},
					"response": []
				},
				{
					"name": "Return users by ids.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/principals",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"principals"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "list of principal ids to fetch data for"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a local user.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/principals",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"principals"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the user to create"
						},
						"description": "Create a local user in vIDM. Applicable only in vIDM mode. Returns 405 Method Not Allowed in SSO2 mode."
					},
					"response": []
				},
				{
					"name": "Return a user",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/principals/:userId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"principals",
								":userId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{userId}}",
									"id": "userId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Find a single user by id. This method performs a search in SSO"
					},
					"response": []
				},
				{
					"name": "Update a local user.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/principals/:userId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"principals",
								":userId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{userId}}",
									"id": "userId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the user update data"
						},
						"description": "Update a local user in vIDM. Applicable only in vIDM mode. Returns 405 Method Not Allowed in SSO2 mode."
					},
					"response": []
				},
				{
					"name": "Delete a local user.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/principals/:userId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"principals",
								":userId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{userId}}",
									"id": "userId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete a local user in vIDM. Applicable only in vIDM mode. Returns 405 Method Not Allowed in SSO2 mode."
					},
					"response": []
				},
				{
					"name": "Return parent groups of a user",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/principals/:userId/groups?groupType={{groupType}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"principals",
								":userId",
								"groups"
							],
							"query": [
								{
									"key": "groupType",
									"value": "{{groupType}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{userId}}",
									"id": "userId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Return business groups for a user",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/principals/:userId/subtenants?role={{role}}&expandGroups={{expandGroups}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"principals",
								":userId",
								"subtenants"
							],
							"query": [
								{
									"key": "role",
									"value": "{{role}}"
								},
								{
									"key": "expandGroups",
									"value": "{{expandGroups}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{userId}}",
									"id": "userId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Finds business groups that a user belongs to. They might be filtered by role and/or expanded to take into account SSO/custom groups that the user belongs to. The returned collection of subtenants contains the list of roles that the user has on those tenants (without the list of principals that belong to those tenants)."
					},
					"response": []
				},
				{
					"name": "Register or update relying party",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/relyingparty",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"relyingparty"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "relying party data"
						},
						"description": "Register or update a relying party with the target tenant"
					},
					"response": []
				},
				{
					"name": "List all business groups",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a business group",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the business group to create"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Return business groups principals",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants/principals?criteria={{criteria}}&role={{role}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants",
								"principals"
							],
							"query": [
								{
									"key": "criteria",
									"value": "{{criteria}}"
								},
								{
									"key": "role",
									"value": "{{role}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the list of business group ids"
						},
						"description": "Return a list of principals for the specified list of business groups, optionally filtered by role name.\nAll business groups must belong to the same tenant."
					},
					"response": []
				},
				{
					"name": "Find principals assigned to a role",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants/roles/:scopeRoleRef/principals?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants",
								"roles",
								":scopeRoleRef",
								"principals"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{scopeRoleRef}}",
									"id": "scopeRoleRef"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "list of business group ids"
						},
						"description": "Find all principals within the provided business groups who are assigned to a provided role."
					},
					"response": []
				},
				{
					"name": "Get a business group",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants",
								":id"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a business group by its id"
					},
					"response": []
				},
				{
					"name": "Update a business group",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants",
								":id"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the business group to update"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete a business group",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants",
								":id"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete a business group by its id"
					},
					"response": []
				},
				{
					"name": "Return business group principals",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants/:id/principals?criteria={{criteria}}&role={{role}}&page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants",
								":id",
								"principals"
							],
							"query": [
								{
									"key": "criteria",
									"value": "{{criteria}}"
								},
								{
									"key": "role",
									"value": "{{role}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return a list of principals for the specified business group, optionally filtered by role name."
					},
					"response": []
				},
				{
					"name": "Return roles for principal",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants/:id/principals/:principalId/roles?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants",
								":id",
								"principals",
								":principalId",
								"roles"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return a list of business group roles that the provided principal has in the provided business group"
					},
					"response": []
				},
				{
					"name": "Return business group roles",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants/:id/roles?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants",
								":id",
								"roles"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add roles to a business group",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants/:id/roles?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants",
								":id",
								"roles"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the roles to add"
						},
						"description": "Adds a list of business group roles to the already existing roles of the specified business group."
					},
					"response": []
				},
				{
					"name": "Remove role from a business group",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants/:id/roles/:scopeRoleRef?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants",
								":id",
								"roles",
								":scopeRoleRef"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{scopeRoleRef}}",
									"id": "scopeRoleRef"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Remove the specified business group role from the given business group"
					},
					"response": []
				},
				{
					"name": "Find business group principals assigned with a role",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants/:id/roles/:scopeRoleRef/principals?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants",
								":id",
								"roles",
								":scopeRoleRef",
								"principals"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{scopeRoleRef}}",
									"id": "scopeRoleRef"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Finds all principals within a business group who are assigned a given role."
					},
					"response": []
				},
				{
					"name": "Add principals to a business group role",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants/:id/roles/:scopeRoleRef/principals?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants",
								":id",
								"roles",
								":scopeRoleRef",
								"principals"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{scopeRoleRef}}",
									"id": "scopeRoleRef"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the principals to add to the provided subtenant role"
						},
						"description": "Adds the provided principals to the identified business group role."
					},
					"response": []
				},
				{
					"name": "Remove a principal from a business group role",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tenants/:tenantId/subtenants/:id/roles/:scopeRoleRef/principals/:principalId?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tenants",
								":tenantId",
								"subtenants",
								":id",
								"roles",
								":scopeRoleRef",
								"principals",
								":principalId"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{scopeRoleRef}}",
									"id": "scopeRoleRef"
								},
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a token associated with the provided credentials.",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.clearEnvironmentVariable(\"token\");",
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"token\", data.id);"
								]
							}
						}
					],
					"request": {
						"url": "https://{{vra-fqdn}}/identity/api/tokens",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"{{username}}\",\n    \"password\":\"{{password}}\",\n    \"tenant\":\"{{tenantId}}\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Deletes the UserTokenResource associated with the provided principal.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tokens/principals/:principal",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tokens",
								"principals",
								":principal"
							],
							"variable": [
								{
									"value": "{{principal}}",
									"id": "principal"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a token matching the provided request details.",
					"request": {
						"url": "https://{{vra-fqdn}}/identity/api/tokens/suiteToken",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The requested token details."
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Deletes the UserTokenResource associated with the provided token id.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tokens/:tokenId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tokens",
								":tokenId"
							],
							"variable": [
								{
									"value": "{{tokenId}}",
									"id": "tokenId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Validates if a given token is still valid and not expired.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tokens/:tokenId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tokens",
								":tokenId"
							],
							"variable": [
								{
									"value": "{{tokenId}}",
									"id": "tokenId"
								}
							]
						},
						"method": "HEAD",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns the UserSecurityContext associated with the provided token id.",
					"request": {
						"url": {
							"raw": "https/:///identity/api/tokens/:tokenId/securityContext",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"identity",
								"api",
								"tokens",
								":tokenId",
								"securityContext"
							],
							"variable": [
								{
									"value": "{{tokenId}}",
									"id": "tokenId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Licensing Service",
			"description": "",
			"item": [
				{
					"name": "Get all assets",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/api/assets",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves all assets present in the system."
					},
					"response": []
				},
				{
					"name": "Get DLFs",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/api/dlfs",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves all DLFs present in the system."
					},
					"response": []
				},
				{
					"name": "Add DLF",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/api/dlfs",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The DLF to be added."
						},
						"description": "Add a new DLF to the system."
					},
					"response": []
				},
				{
					"name": "Get DLF",
					"request": {
						"url": {
							"raw": "https/:///component-registry/api/dlfs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"api",
								"dlfs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a DLF."
					},
					"response": []
				},
				{
					"name": "Delete DLF",
					"request": {
						"url": {
							"raw": "https/:///component-registry/api/dlfs/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"component-registry",
								"api",
								"dlfs",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete a DLF from the system that was added by a user."
					},
					"response": []
				},
				{
					"name": "Get all licenses",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/api/licenses",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves all licenses present in the system."
					},
					"response": []
				},
				{
					"name": "Add serial key",
					"request": {
						"url": "https://{{vra-fqdn}}/component-registry/api/licenses",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The serial key information to be added."
						},
						"description": "Adds a serial key to the system."
					},
					"response": []
				}
			]
		},
		{
			"name": "Management Service",
			"description": "",
			"item": [
				{
					"name": "Retrieve Management Endpoint",
					"request": {
						"url": {
							"raw": "https/:///management-service/api/management/endpoint/:tenantId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"management-service",
								"api",
								"management",
								"endpoint",
								":tenantId"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieval of Metrics provider Management Endpoint. If default metrics provider is used, then response body will be empty."
					},
					"response": []
				},
				{
					"name": "Update Management Endpoint",
					"request": {
						"url": {
							"raw": "https/:///management-service/api/management/endpoint/:tenantId?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"management-service",
								"api",
								"management",
								"endpoint",
								":tenantId"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updation of Metrics provider Management Endpoint."
					},
					"response": []
				},
				{
					"name": "Create Management Endpoint",
					"request": {
						"url": {
							"raw": "https/:///management-service/api/management/endpoint/:tenantId?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"management-service",
								"api",
								"management",
								"endpoint",
								":tenantId"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Creation of Metrics provider Management Endpoint."
					},
					"response": []
				},
				{
					"name": "Remove Management Endpoint",
					"request": {
						"url": {
							"raw": "https/:///management-service/api/management/endpoint/:tenantId?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"management-service",
								"api",
								"management",
								"endpoint",
								":tenantId"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Removal of Metrics provider Management Endpoint. After removal, the default metric provider for vRA will be used."
					},
					"response": []
				},
				{
					"name": "Utility function to get the endpoint certificate",
					"request": {
						"url": {
							"raw": "https/:///management-service/api/management/endpoint/:tenantId/certificate",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"management-service",
								"api",
								"management",
								"endpoint",
								":tenantId",
								"certificate"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Endpoint details"
						},
						"description": "Utility function to get the endpoint certificate."
					},
					"response": []
				},
				{
					"name": "Utility method to check if vRops is configured",
					"request": {
						"url": {
							"raw": "https/:///management-service/api/management/endpoint/:tenantId/isvropsconfigured",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"management-service",
								"api",
								"management",
								"endpoint",
								":tenantId",
								"isvropsconfigured"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Utility method to check if vRops is configured"
					},
					"response": []
				},
				{
					"name": "Test connection to the Management Endpoint",
					"request": {
						"url": {
							"raw": "https/:///management-service/api/management/endpoint/:tenantId/testconnection",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"management-service",
								"api",
								"management",
								"endpoint",
								":tenantId",
								"testconnection"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Endpoint details"
						},
						"description": "Test connection to the Management Endpoint"
					},
					"response": []
				},
				{
					"name": "Get VM performance metrics",
					"request": {
						"url": "https://{{vra-fqdn}}/management-service/api/management/metrics?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Performance Metrics Query"
						},
						"description": "Get VM performance metrics, based on the passed query."
					},
					"response": []
				},
				{
					"name": "Get performance metrics for a vm",
					"request": {
						"url": {
							"raw": "https/:///management-service/api/management/metrics/:vmIaasID",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"management-service",
								"api",
								"management",
								"metrics",
								":vmIaasID"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get performance metrics for a specific VM."
					},
					"response": []
				},
				{
					"name": "Get Reclamation Requests",
					"request": {
						"url": "https://{{vra-fqdn}}/management-service/api/management/requests?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get all the reclamation requests."
					},
					"response": []
				},
				{
					"name": "Cancel Reclamation Requests",
					"request": {
						"url": "https://{{vra-fqdn}}/management-service/api/management/requests/cancel",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "List of request Ids"
						},
						"description": "Cancel a list of reclamation requests."
					},
					"response": []
				},
				{
					"name": "Callback for Work Item Service",
					"request": {
						"url": "https://{{vra-fqdn}}/management-service/api/work-item/callbacks",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "instance of WorkItemCallbackAction"
						},
						"description": "Controller method, callbacks from the Work Item service to the Management service."
					},
					"response": []
				},
				{
					"name": "Create reclamation work items",
					"request": {
						"url": "https://{{vra-fqdn}}/management-service/api/work-item/tasks?={{}}",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "List of VM ids"
						},
						"description": "Creation of Reclamation request work items."
					},
					"response": []
				}
			]
		},
		{
			"name": "Network Service",
			"description": "",
			"item": [
				{
					"name": "Retrieve allocation constraint for network or security component",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/composition/allocationconstraints/resourcetypes/:resTypeId?componenttypeid={{componenttypeid}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"composition",
								"allocationconstraints",
								"resourcetypes",
								":resTypeId"
							],
							"query": [
								{
									"key": "componenttypeid",
									"value": "{{componenttypeid}}"
								}
							],
							"variable": [
								{
									"value": "{{resTypeId}}",
									"id": "resTypeId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Provisioning request from the composition service"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Allocate network or security component",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/composition/componentallocator/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Allocation request, includes allocation constraints and component info"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "De-allocate network or security component",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/composition/componentdeallocator",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Composition request, includes component info"
						},
						"description": "Destroy the network or security components. Called as day-2 destroy operation. "
					},
					"response": []
				},
				{
					"name": "Validates a single network or security component",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/composition/componentvalidator",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Composition request, includes component info"
						},
						"description": "Called by the composition service when the blueprint is saved"
					},
					"response": []
				},
				{
					"name": "New request for provisioning network or security components",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/composition/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Provisioning request from composition service"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a collection of load balancers with specified paging, sorting and filtering parameters",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/load-balancers?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Paging and sorting criteria"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a collection of load balancer types with specified paging, sorting and filtering parameters",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/load-balancers/types?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Paging and sorting criteria"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a load balancer type",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/load-balancers/types",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Load balancer type object"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve load balancer type by ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/load-balancers/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"load-balancers",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create or update a load balancer type",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/load-balancers/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"load-balancers",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Load balancer type object"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete a load balancer type",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/load-balancers/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"load-balancers",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve a load balancer by ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/load-balancers/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"load-balancers",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a collection of networks with specified paging, sorting and filtering parameters",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/networks?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Paging and sorting criteria"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a network",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/networks",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The network object to be created"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a collection of network types with specified paging, sorting and filtering parameters",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/networks/types?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Paging and sorting criteria"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a network type",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/networks/types",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Network type object"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get a network type by ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/networks/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"networks",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create or update a network type",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/networks/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"networks",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Network type object"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete a network type",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/networks/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"networks",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve a network",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/networks/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"networks",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete a network",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/networks/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"networks",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Method to be called by a provider to notify the network service that a previously submitted allocation request has been completed",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/providers/:providerId/allocation-requests/:bindingId/complete",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"providers",
								":providerId",
								"allocation-requests",
								":bindingId",
								"complete"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Status object returned from the provider"
						},
						"description": "Callback called by the provider iaas-proxy"
					},
					"response": []
				},
				{
					"name": "Method to be called by a provider to notify the network service that a previously submitted request has been completed",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/providers/:providerId/requests/:bindingId/complete",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"providers",
								":providerId",
								"requests",
								":bindingId",
								"complete"
							],
							"variable": [
								{
									"value": "{{providerId}}",
									"id": "providerId"
								},
								{
									"value": "{{bindingId}}",
									"id": "bindingId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Status object returned from the provider"
						},
						"description": "Callback called by the provider iaas-proxy"
					},
					"response": []
				},
				{
					"name": "New request for network or security resource, or any day-two operation request on an existing resource",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Provider request with the resource parameters"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a collection of security groups with specified paging, sorting and filtering parameters",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/security-groups?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Paging and sorting criteria"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create and return the newly created on-demand security group",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/security-groups",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The security group to be found or created"
						},
						"description": "In case of an existing security group, the api returns the security group object based on external id or name"
					},
					"response": []
				},
				{
					"name": "Returns a collection of security group types with specified paging, sorting and filtering parameters",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/security-groups/types?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Paging criteria"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a security group type",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/security-groups/types",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Security group type object"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the security group type by ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-groups/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-groups",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Updates a security group type by its ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-groups/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-groups",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Security group type object"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Deletes a security group type by its ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-groups/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-groups",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve the security group identified by its ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-groups/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-groups",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update the security group identified by its ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-groups/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-groups",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The security group to be updated"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete the security group identified by its ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-groups/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-groups",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Assign the security group to the specified machine(s)",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-groups/:id/machines",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-groups",
								":id",
								"machines"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Collection of machine IDs"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Add a list of security policies to an on-demand security group",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-groups/:id/security-policies",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-groups",
								":id",
								"security-policies"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "List of security policy IDs"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a collection of security policies with specified paging, sorting and filtering parameters",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/security-policies?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Pagination Information"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a collection of security policy types with specified paging, sorting and filtering parameters",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/security-policies/types?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Paging, sorting and filtering criteria"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a security policy type",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/security-policies/types",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Security policy type object"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the security policy type by ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-policies/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-policies",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Updates a security policy type by its ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-policies/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-policies",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Security Policy type object"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Deletes a security policy type by its ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-policies/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-policies",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": " Returns the security policy associated with the given id",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-policies/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-policies",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a collection of security tags with specified paging, sorting and filtering parameters",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/security-tags?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Paging and sorting criteria"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Apply a collection of security tags to a machine",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-tags/applyToMachine/:machineId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-tags",
								"applyToMachine",
								":machineId"
							],
							"variable": [
								{
									"value": "{{machineId}}",
									"id": "machineId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Collection of security tag IDs"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a collection of security tag types with specified paging, sorting and filtering parameters",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/security-tags/types?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Paging, sorting and filtering criteria"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Creates a security tag type",
					"request": {
						"url": "https://{{vra-fqdn}}/network-service/api/security-tags/types",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Security tag type object"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get the security tag type by ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-tags/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-tags",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Updates or creates a security tag type by its ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-tags/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-tags",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Security Tag type object"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Deletes a security tag type by its ID",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-tags/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-tags",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns the security tag associated with the given id",
					"request": {
						"url": {
							"raw": "https/:///network-service/api/security-tags/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"network-service",
								"api",
								"security-tags",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Notification Service",
			"description": "",
			"item": [
				{
					"name": "Retrieves a page of global notification providers.",
					"request": {
						"url": "https://{{vra-fqdn}}/notification-service/api/notifications/global/providers?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a page of global notification providers."
					},
					"response": []
				},
				{
					"name": "Creates a global notification provider.",
					"request": {
						"url": "https://{{vra-fqdn}}/notification-service/api/notifications/global/providers",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Creats a global notification provider."
					},
					"response": []
				},
				{
					"name": "Returns a page of global Notification Provider Creation Info.",
					"request": {
						"url": "https://{{vra-fqdn}}/notification-service/api/notifications/global/providers/creationinfo?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of global Notification Provider Creation Info."
					},
					"response": []
				},
				{
					"name": "Retrieves a global notification provider given its unique identifier.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/global/providers/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"global",
								"providers",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a global notification provider given its unique identifier."
					},
					"response": []
				},
				{
					"name": "Updates a global notification provider.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/global/providers/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"global",
								"providers",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updates a global notification provider."
					},
					"response": []
				},
				{
					"name": "Deletes a global notification provider given its unique identifier.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/global/providers/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"global",
								"providers",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a global notification provider given its unique identifier."
					},
					"response": []
				},
				{
					"name": "Tests the connection of a notification provider.",
					"request": {
						"url": "https://{{vra-fqdn}}/notification-service/api/notifications/providers/connectivity",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Tests the connection of a notification provider."
					},
					"response": []
				},
				{
					"name": "Retrieves the notification scenario with given id.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/scenarios/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"scenarios",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the notification scenario with given id."
					},
					"response": []
				},
				{
					"name": "Creates or updates notification scenario.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/scenarios/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"scenarios",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Creates or updates notification scenario."
					},
					"response": []
				},
				{
					"name": "Deletes notification scenario.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/scenarios/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"scenarios",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a notification scenario."
					},
					"response": []
				},
				{
					"name": "Retrieves a page of notification providers of a given tenant.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/tenants/:tenantId/providers?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"tenants",
								":tenantId",
								"providers"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a page of notification providers of a given tenant."
					},
					"response": []
				},
				{
					"name": "Creats a tenant notification provider.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/tenants/:tenantId/providers",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"tenants",
								":tenantId",
								"providers"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a tenant notification provider."
					},
					"response": []
				},
				{
					"name": "Returns a page of tenant Notification Provider Creation Info.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/tenants/:tenantId/providers/creationinfo?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"tenants",
								":tenantId",
								"providers",
								"creationinfo"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of tenant Notification Provider Creation Info."
					},
					"response": []
				},
				{
					"name": "Retrieves a tenant notification provider given its unique identifier.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/tenants/:tenantId/providers/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"tenants",
								":tenantId",
								"providers",
								":id"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a tenant notification provider given its unique identifier."
					},
					"response": []
				},
				{
					"name": "Updates a tenant notification provider.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/tenants/:tenantId/providers/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"tenants",
								":tenantId",
								"providers",
								":id"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updates a tenant notification provider."
					},
					"response": []
				},
				{
					"name": "Deletes a tenant notification provider given its unique identifier.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/tenants/:tenantId/providers/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"tenants",
								":tenantId",
								"providers",
								":id"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a tenant notification provider given its unique identifier."
					},
					"response": []
				},
				{
					"name": "Retrieves the notification scenario configuration for the specified tenant.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/tenants/:tenantId/scenarioConfiguration",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"tenants",
								":tenantId",
								"scenarioConfiguration"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the notification scenario configuration for the specified tenant.  A notification scenario configuration refers to whether messages should be sent in response to given notification scenarios. It consists of multiple notification scenario settings."
					},
					"response": []
				},
				{
					"name": "Updates a notification scenario configuration for the specified tenant.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/tenants/:tenantId/scenarioConfiguration",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"tenants",
								":tenantId",
								"scenarioConfiguration"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updatesa notification scenario configuration for the specified tenant.  A notification configuration consists of multiple notification scenario settings. Settings in the existing notification scenario configuration will remain untouched if not specified in the update notification configuration."
					},
					"response": []
				},
				{
					"name": "Retrieves a page of notification scenario settings.",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/tenants/:tenantId/scenarioConfiguration/settings?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"tenants",
								":tenantId",
								"scenarioConfiguration",
								"settings"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a page of global notification providers. A notification scenario setting consists of a notification scenario and a flagwhether that scenario is enabled or not."
					},
					"response": []
				},
				{
					"name": "Create notification",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/tenants/:tenantName/notifications",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"tenants",
								":tenantName",
								"notifications"
							],
							"variable": [
								{
									"value": "{{tenantName}}",
									"id": "tenantName"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Creates a notification and sends it."
					},
					"response": []
				},
				{
					"name": "Returns the notification",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/tenants/:tenantName/notifications/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								"tenants",
								":tenantName",
								"notifications",
								":id"
							],
							"variable": [
								{
									"value": "{{tenantName}}",
									"id": "tenantName"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns the notification."
					},
					"response": []
				},
				{
					"name": "Returns notification preference for the logged-in user.",
					"request": {
						"url": "https://{{vra-fqdn}}/notification-service/api/notifications/userPreference",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns notification preference for the logged-in user.If no preference has been saved for the user, the method returns default preferences."
					},
					"response": []
				},
				{
					"name": "Updates notification preference for the logged-in user.",
					"request": {
						"url": "https://{{vra-fqdn}}/notification-service/api/notifications/userPreference?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updates notification preference for the logged-in user."
					},
					"response": []
				},
				{
					"name": "Retrieves the supported notification locales.",
					"request": {
						"url": "https://{{vra-fqdn}}/notification-service/api/notifications/userPreference/locales?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the supported notification locales."
					},
					"response": []
				},
				{
					"name": "Returns a page of notification delivery mechanisms for the logged-in user.",
					"request": {
						"url": "https://{{vra-fqdn}}/notification-service/api/notifications/userPreference/mechanisms?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of notification delivery mechanisms for the logged-in user.If no preference has been saved for the user, the method returns default preferences."
					},
					"response": []
				},
				{
					"name": "Returns a page of default notification delivery mechanisms for the current tenant.",
					"request": {
						"url": "https://{{vra-fqdn}}/notification-service/api/notifications/userPreference/mechanisms/defaults?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of default notification delivery mechanisms for the current tenant."
					},
					"response": []
				},
				{
					"name": "Returns the delivery status of notification",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/:id/deliverystatus",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								":id",
								"deliverystatus"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns the delivery status of notification."
					},
					"response": []
				},
				{
					"name": "Returns inbound messages of a notification",
					"request": {
						"url": {
							"raw": "https/:///notification-service/api/notifications/:id/responses?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"notification-service",
								"api",
								"notifications",
								":id",
								"responses"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns a page of inbound messages in descending order of the date/time it was received by the mail server for the given notification id."
					},
					"response": []
				}
			]
		},
		{
			"name": "Orchestration Gateway Service",
			"description": "",
			"item": [
				{
					"name": "Search for o11nAction",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/actions?name={{name}}&categoryName={{categoryName}}&description={{description}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"actions"
							],
							"query": [
								{
									"key": "name",
									"value": "{{name}}"
								},
								{
									"key": "categoryName",
									"value": "{{categoryName}}"
								},
								{
									"key": "description",
									"value": "{{description}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Searches for o11nAction by containment of name, description and categoryName"
					},
					"response": []
				},
				{
					"name": "execute script action",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/actions/:categoryName/:actionName/execute",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"actions",
								":categoryName",
								":actionName",
								"execute"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{categoryName}}",
									"id": "categoryName"
								},
								{
									"value": "{{actionName}}",
									"id": "actionName"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Executes synchronously script action."
					},
					"response": []
				},
				{
					"name": "Get o11nAction",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/actions/:categoryName/:name",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"actions",
								":categoryName",
								":name"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{categoryName}}",
									"id": "categoryName"
								},
								{
									"value": "{{name}}",
									"id": "name"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get o11nAction by given category name and action name for tenant."
					},
					"response": []
				},
				{
					"name": "get root category for given tenant",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/categories/workflows",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"categories",
								"workflows"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the root category for the given tenantId."
					},
					"response": []
				},
				{
					"name": "get category by parent category id in tenant",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/categories/workflows/:categoryId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"categories",
								"workflows",
								":categoryId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{categoryId}}",
									"id": "categoryId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a category by parent category id for requested tenantId."
					},
					"response": []
				},
				{
					"name": "Get orchestrationConfiguration in tenant",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/configurations",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"configurations"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the orchestrationConfiguration for the given tenant."
					},
					"response": []
				},
				{
					"name": "Create or Update orchestrationConfiguration in tenant",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/configurations",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"configurations"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Create or Update orchestrationConfiguration for the given tenant."
					},
					"response": []
				},
				{
					"name": "Gets a certificate",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/configurations/certificate",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"configurations",
								"certificate"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets a certificate for the given configuration"
					},
					"response": []
				},
				{
					"name": "Set default orchestrationConfiguration for tenant",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/configurations/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"configurations",
								"default"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Set the default/embedded orchestrationConfiguration for the given tenant."
					},
					"response": []
				},
				{
					"name": "test default orchestrationConfiguration for tenant",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/configurations/default/status",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"configurations",
								"default",
								"status"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "test connectivity to default vRO for the given tenant."
					},
					"response": []
				},
				{
					"name": "test orchestrationConfiguration for tenant",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/configurations/status",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"configurations",
								"status"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "test connectivity to vRO according to the given orchestrationConfiguration for the given tenant."
					},
					"response": []
				},
				{
					"name": "Get orchestrationConfiguration",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/configurations/:configurationId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"configurations",
								":configurationId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{configurationId}}",
									"id": "configurationId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get orchestrationConfiguration by given configurationId in specified tenantId."
					},
					"response": []
				},
				{
					"name": "Delete orchestrationConfiguration",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/configurations/:configurationId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"configurations",
								":configurationId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{configurationId}}",
									"id": "configurationId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete orchestrationConfiguration. Only Solution user, system and tenant admins can delete orchestrationConfigurations."
					},
					"response": []
				},
				{
					"name": "Get inventory resource by objectUri in given tenant",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/inventory/objectUri/:objectUri",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"inventory",
								"objectUri",
								":objectUri"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{objectUri}}",
									"id": "objectUri"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get inventory resource by provided objectUri in given tenant."
					},
					"response": []
				},
				{
					"name": "Get inventory resources by provided vcoType in given tenant",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/inventory/:vcoType?criteria={{criteria}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"inventory",
								":vcoType"
							],
							"query": [
								{
									"key": "criteria",
									"value": "{{criteria}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{vcoType}}",
									"id": "vcoType"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get inventory resources by provided vcoType in given tenant. Additional ciretira could be supplied to narrow down the response"
					},
					"response": []
				},
				{
					"name": "Get inventory resource by provided vcoType and id in given tenant",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/inventory/:vcoType/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"inventory",
								":vcoType",
								":id"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{vcoType}}",
									"id": "vcoType"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get inventory resource by provided vcoType and id in given tenant."
					},
					"response": []
				},
				{
					"name": "Get endpoint names in given tenant",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/metadata",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"metadata"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get endpoint names in given tenant."
					},
					"response": []
				},
				{
					"name": "Get Inventory types",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/metadata/types?endpointType={{endpointType}}&typeName={{typeName}}&includeSimpleTypes={{includeSimpleTypes}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"metadata",
								"types"
							],
							"query": [
								{
									"key": "endpointType",
									"value": "{{endpointType}}"
								},
								{
									"key": "typeName",
									"value": "{{typeName}}"
								},
								{
									"key": "includeSimpleTypes",
									"value": "{{includeSimpleTypes}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get inventory types in the provided tenantId, according to filter criteria ."
					},
					"response": []
				},
				{
					"name": "Get endpoint metadata for given endpointName",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/metadata/:endpointName",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"metadata",
								":endpointName"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{endpointName}}",
									"id": "endpointName"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get endpoint metadata for given endpointName in provided tenantId."
					},
					"response": []
				},
				{
					"name": "Get Inventory type icon",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/metadata/:endpointName/:type/icon",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"metadata",
								":endpointName",
								":type",
								"icon"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{endpointName}}",
									"id": "endpointName"
								},
								{
									"value": "{{type}}",
									"id": "type"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get inventory type icon for the given endpointName and type in provided tenantId."
					},
					"response": []
				},
				{
					"name": "Get Inventory type schema",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/metadata/:endpointName/:type/schema",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"metadata",
								":endpointName",
								":type",
								"schema"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{endpointName}}",
									"id": "endpointName"
								},
								{
									"value": "{{type}}",
									"id": "type"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get inventory type schema for the given endpointName and type in provided tenantId."
					},
					"response": []
				},
				{
					"name": "Get permissible values",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/metadata/:endpointName/:type/values?asTree={{asTree}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"metadata",
								":endpointName",
								":type",
								"values"
							],
							"query": [
								{
									"key": "asTree",
									"value": "{{asTree}}"
								}
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{endpointName}}",
									"id": "endpointName"
								},
								{
									"value": "{{type}}",
									"id": "type"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get permissible values for inventory type from given endpoint in provided tenantId."
					},
					"response": []
				},
				{
					"name": "Import package",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/package/import",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"package",
								"import"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "fileupload",
									"value": "{{fileupload}}",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "Import package in vCO. Operation will succeed even in case the prerequisites for the content to import are not presented."
					},
					"response": []
				},
				{
					"name": "Get run info",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/requests/correlation/:correlationType/:correlationId/info",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"requests",
								"correlation",
								":correlationType",
								":correlationId",
								"info"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{correlationType}}",
									"id": "correlationType"
								},
								{
									"value": "{{correlationId}}",
									"id": "correlationId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a run information for the given correlation tyep and id."
					},
					"response": []
				},
				{
					"name": "Cancel run request",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/requests/:requestId/cancel",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"requests",
								":requestId",
								"cancel"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Cancels run result for the given request id."
					},
					"response": []
				},
				{
					"name": "Get run info",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/requests/:requestId/info",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"requests",
								":requestId",
								"info"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a run information for a given request id."
					},
					"response": []
				},
				{
					"name": "Get run logs",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/requests/:requestId/logs",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"requests",
								":requestId",
								"logs"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a run logs for a given request id."
					},
					"response": []
				},
				{
					"name": "Get run result",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/requests/:requestId/result",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"requests",
								":requestId",
								"result"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{requestId}}",
									"id": "requestId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a run result for a given request id."
					},
					"response": []
				},
				{
					"name": "Get workflow",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/workflows/:workflowId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"workflows",
								":workflowId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{workflowId}}",
									"id": "workflowId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get workflow by given workflowId from the vRO configured for the current tenant."
					},
					"response": []
				},
				{
					"name": "Request workflow to run",
					"request": {
						"url": {
							"raw": "https/:///o11n-gateway-service/api/tenants/:tenantId/workflows/:workflowId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"o11n-gateway-service",
								"api",
								"tenants",
								":tenantId",
								"workflows",
								":workflowId"
							],
							"variable": [
								{
									"value": "{{tenantId}}",
									"id": "tenantId"
								},
								{
									"value": "{{workflowId}}",
									"id": "workflowId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Request workflow, by given workflowId, to run by the vRO configured for the current tenant."
					},
					"response": []
				}
			]
		},
		{
			"name": "Placement Service",
			"description": "",
			"item": [
				{
					"name": "Process Workload Placement Request",
					"request": {
						"url": "https://{{vra-fqdn}}/placement-service/api/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The workload placement request."
						},
						"description": "Process a workload placement request, returning component-specific recommendations and a unique, generated request ID."
					},
					"response": []
				},
				{
					"name": "Utility method to check the availability of the vROps VSIS service.",
					"request": {
						"url": "https://{{vra-fqdn}}/placement-service/api/requests/checkVropsAvailability",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Utility method to check the availability of the vROps VSIS service."
					},
					"response": []
				},
				{
					"name": "Commit Placement Request",
					"request": {
						"url": {
							"raw": "https/:///placement-service/api/requests/:id/commit",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"placement-service",
								"api",
								"requests",
								":id",
								"commit"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Commit all placement recommendations from the given request."
					},
					"response": []
				},
				{
					"name": "Roll Back Placement Request",
					"request": {
						"url": {
							"raw": "https/:///placement-service/api/requests/:id/rollback",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"placement-service",
								"api",
								"requests",
								":id",
								"rollback"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Roll back all placement recommendations from the given request."
					},
					"response": []
				},
				{
					"name": "Commit Single Placement Request",
					"request": {
						"url": {
							"raw": "https/:///placement-service/api/requests/:id/:componentId/:index/commit",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"placement-service",
								"api",
								"requests",
								":id",
								":componentId",
								":index",
								"commit"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{componentId}}",
									"id": "componentId"
								},
								{
									"value": "{{index}}",
									"id": "index"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Commit a single placement recommendation from the given request."
					},
					"response": []
				},
				{
					"name": "Roll Back Single Placement Request",
					"request": {
						"url": {
							"raw": "https/:///placement-service/api/requests/:id/:componentId/:index/rollback",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"placement-service",
								"api",
								"requests",
								":id",
								":componentId",
								":index",
								"rollback"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{componentId}}",
									"id": "componentId"
								},
								{
									"value": "{{index}}",
									"id": "index"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Roll back a single placement recommendation from the given request."
					},
					"response": []
				}
			]
		},
		{
			"name": "Portal Service",
			"description": "",
			"item": [
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/api/portals?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create portal",
					"request": {
						"url": "https://{{vra-fqdn}}/api/portals",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The portal to create"
						},
						"description": "Creates the portal with populated attributes. Sets the userID based on the value received inthe SSO token. Invokes the base class implementation to create the portal."
					},
					"response": []
				},
				{
					"name": "Get portal",
					"request": {
						"url": {
							"raw": "https/:///api/portals/name/:name",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"portals",
								"name",
								":name"
							],
							"variable": [
								{
									"value": "{{name}}",
									"id": "name"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the portal corresponding to the name."
					},
					"response": []
				},
				{
					"name": "Returns the resource associated with the given id",
					"request": {
						"url": {
							"raw": "https/:///api/portals/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"portals",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update portal",
					"request": {
						"url": {
							"raw": "https/:///api/portals/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"portals",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "UUID of the portal to update"
						},
						"description": "Updates the portal with the changed attributes supplied in the PUT request. Sets the userIDbased on the value received in the SSO token. Overrides the implementation in the AbstractCrudController."
					},
					"response": []
				},
				{
					"name": "Deletes a resource",
					"request": {
						"url": {
							"raw": "https/:///api/portals/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"portals",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/api/portletconfigurations?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a portlet configuration",
					"request": {
						"url": "https://{{vra-fqdn}}/api/portletconfigurations",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The portlet config to create"
						},
						"description": "Creates a new portlet config."
					},
					"response": []
				},
				{
					"name": "Returns the resource associated with the given id",
					"request": {
						"url": {
							"raw": "https/:///api/portletconfigurations/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"portletconfigurations",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Update portlet configuration",
					"request": {
						"url": {
							"raw": "https/:///api/portletconfigurations/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"portletconfigurations",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The portlet config to update"
						},
						"description": "Updates the portlet config corresponding to the UUID."
					},
					"response": []
				},
				{
					"name": "Delete a portlet configuration",
					"request": {
						"url": {
							"raw": "https/:///api/portletconfigurations/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"api",
								"portletconfigurations",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes the portlet config corresponding to the UUID."
					},
					"response": []
				}
			]
		},
		{
			"name": "Properties Service",
			"description": "",
			"item": [
				{
					"name": "Get Property Definitions",
					"request": {
						"url": "https://{{vra-fqdn}}/properties-service/api/propertydefinitions?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve Property Definitions that the current user may access. This API returns Property Definitions in the current tenant and global Property Definitions."
					},
					"response": []
				},
				{
					"name": "Create a Property Definition",
					"request": {
						"url": "https://{{vra-fqdn}}/properties-service/api/propertydefinitions",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The Property Definition to create or update"
						},
						"description": "Creates a new Property Definition. If the Property Definition to create conflicts with an existing definition, an error is raised."
					},
					"response": []
				},
				{
					"name": "Get Multiple Property Definitions",
					"request": {
						"url": "https://{{vra-fqdn}}/properties-service/api/propertydefinitions/ids?tenantId={{tenantId}}",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The ids of the property definitions to retrieve"
						},
						"description": "Retrieve mulitple Property Definitions by a set of IDs. Searches within the specified tenant and the global scope."
					},
					"response": []
				},
				{
					"name": "Get Property Definition",
					"request": {
						"url": {
							"raw": "https/:///properties-service/api/propertydefinitions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"properties-service",
								"api",
								"propertydefinitions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a single Property Definition by its id. Searches the current tenant. If no tenant specific definition is found, searches within the global scope."
					},
					"response": []
				},
				{
					"name": "Create or update a Property Definition",
					"request": {
						"url": {
							"raw": "https/:///properties-service/api/propertydefinitions/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"properties-service",
								"api",
								"propertydefinitions",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The Property Definition to create or update"
						},
						"description": "Creates or updates a Property Definition"
					},
					"response": []
				},
				{
					"name": "Delete a Property Definition",
					"request": {
						"url": {
							"raw": "https/:///properties-service/api/propertydefinitions/:id?tenantId={{tenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"properties-service",
								"api",
								"propertydefinitions",
								":id"
							],
							"query": [
								{
									"key": "tenantId",
									"value": "{{tenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a Property Definition. If the tenantId is supplied, only a Property Definition that matches on id and tenant will be deleted. If tenantId is not supplied, this API will try to find a matching Property Definition in the current tenant. If no such Property Definition was found and the user has permission to manage global Property Definitions, find a matching global Property Definition."
					},
					"response": []
				},
				{
					"name": "Get permissible values for a Property Definition",
					"request": {
						"url": {
							"raw": "https/:///properties-service/api/propertydefinitions/:id/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"properties-service",
								"api",
								"propertydefinitions",
								":id",
								"values"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The values of any bound properties"
						},
						"description": "Retrieve the permissible values for a Property Definition with display advice of Dropdown. When the dropdown is backed by a vRO Script Action, the body must contain values for any parameters bound to other properties."
					},
					"response": []
				},
				{
					"name": "Get Property Groups",
					"request": {
						"url": "https://{{vra-fqdn}}/properties-service/api/propertygroups?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve Property Groups that the current user may access. This API returns Property Groups in the current tenant and global Property Groups."
					},
					"response": []
				},
				{
					"name": "Create a Property Group",
					"request": {
						"url": "https://{{vra-fqdn}}/properties-service/api/propertygroups",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The Property Group to create"
						},
						"description": "Creates a new Property Group. If the Property Group to create conflicts with an existing Property Group, an error is raised"
					},
					"response": []
				},
				{
					"name": "Get multiple Property Groups",
					"request": {
						"url": "https://{{vra-fqdn}}/properties-service/api/propertygroups/ids?tenantId={{tenantId}}",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The ids of the Property Groups to retrieve"
						},
						"description": "Retrieve mulitple Property Groups by a set of ids. Searches within the specified tenant and in the global scope."
					},
					"response": []
				},
				{
					"name": "Get a Property Group",
					"request": {
						"url": {
							"raw": "https/:///properties-service/api/propertygroups/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"properties-service",
								"api",
								"propertygroups",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a Property Group by its id. Searches the current tenant. If no tenant specific group is found, searches within the global scope."
					},
					"response": []
				},
				{
					"name": "Create or update a Property Group",
					"request": {
						"url": {
							"raw": "https/:///properties-service/api/propertygroups/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"properties-service",
								"api",
								"propertygroups",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The Property Group to create or update"
						},
						"description": "Creates or updates a Property Group. If no Property Group with the specified id exists, it will be created. Else the existing Property Group will be updated"
					},
					"response": []
				},
				{
					"name": "Delete a Property Group",
					"request": {
						"url": {
							"raw": "https/:///properties-service/api/propertygroups/:id?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"properties-service",
								"api",
								"propertygroups",
								":id"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a Property Group. If the tenantId is supplied, only a Property Group that matches on id and tenant will be deleted. If tenantId is not supplied, this API will try to find a matching Property Group in teh current tenant. If no such Property Group was found and the user has permission to manage global Property Groups, find a matching global Property Group"
					},
					"response": []
				}
			]
		},
		{
			"name": "Release Management Service",
			"description": "",
			"item": [
				{
					"name": "Create an Endpoint (BETA)",
					"request": {
						"url": "https://{{vra-fqdn}}/release-management-service/api/endpoints?offlineCreation={{offlineCreation}}",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "RequestBody as Endpoint type object"
						},
						"description": "Create a new endpoint instance.The optional offlineCreation query parameter can be used to skip endpoint validation"
					},
					"response": []
				},
				{
					"name": "Fetches an endpoint's data (BETA)",
					"request": {
						"url": {
							"raw": "https/:///release-management-service/api/endpoints/:endpointType/:endpointId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"release-management-service",
								"api",
								"endpoints",
								":endpointType",
								":endpointId"
							],
							"variable": [
								{
									"value": "{{endpointType}}",
									"id": "endpointType"
								},
								{
									"value": "{{endpointId}}",
									"id": "endpointId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Fetches the details of a specific endpoint"
					},
					"response": []
				},
				{
					"name": "Updates the data of an existing endpoint instance (BETA)",
					"request": {
						"url": {
							"raw": "https/:///release-management-service/api/endpoints/:endpointType/:endpointId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"release-management-service",
								"api",
								"endpoints",
								":endpointType",
								":endpointId"
							],
							"variable": [
								{
									"value": "{{endpointType}}",
									"id": "endpointType"
								},
								{
									"value": "{{endpointId}}",
									"id": "endpointId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updates the data of an existing endpoint instance"
					},
					"response": []
				},
				{
					"name": "Deletes an existing endpoint instance (BETA)",
					"request": {
						"url": {
							"raw": "https/:///release-management-service/api/endpoints/:endpointType/:endpointId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"release-management-service",
								"api",
								"endpoints",
								":endpointType",
								":endpointId"
							],
							"variable": [
								{
									"value": "{{endpointType}}",
									"id": "endpointType"
								},
								{
									"value": "{{endpointId}}",
									"id": "endpointId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes an existing endpoint instance"
					},
					"response": []
				},
				{
					"name": "Retrieve All Release Pipeline models by tags",
					"request": {
						"url": "https://{{vra-fqdn}}/release-management-service/api/release-pipelines?tags={{tags}}&name={{name}}&action={{action}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Paging and sorting criteria"
						},
						"description": "Retrieve all pipelines using tags."
					},
					"response": []
				},
				{
					"name": "REST endpoint to Import a Release Pipeline Model.",
					"request": {
						"url": "https://{{vra-fqdn}}/release-management-service/api/release-pipelines?overwrite={{overwrite}}",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "RequestBody as ReleasePipelineExportDetails type object"
						},
						"description": "The url to be used for importing a release pipeline is https://SERVER_URL/release-management-service/api/release-pipelines?action=import&overwrite={true/false}"
					},
					"response": []
				},
				{
					"name": "REST endpoint to Retrieve All or Filtered Release Pipeline Executions",
					"request": {
						"url": "https://{{vra-fqdn}}/release-management-service/api/release-pipelines/executions?filter={{filter}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns all or filtered release pipeline executions with/without a search request."
					},
					"response": []
				},
				{
					"name": "REST endpoint to fetch unique tags for release pipeline model.",
					"request": {
						"url": "https://{{vra-fqdn}}/release-management-service/api/release-pipelines/tags",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Return unique tags for release pipeline model, each tag has its name, id and value"
					},
					"response": []
				},
				{
					"name": "REST endpoint to fetch a Release Pipeline Model.",
					"request": {
						"url": {
							"raw": "https/:///release-management-service/api/release-pipelines/:rpId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"release-management-service",
								"api",
								"release-pipelines",
								":rpId"
							],
							"variable": [
								{
									"value": "{{rpId}}",
									"id": "rpId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Fetches details of a release pipeline for a given release pipeline id"
					},
					"response": []
				},
				{
					"name": "REST endpoint to update a release pipeline model",
					"request": {
						"url": {
							"raw": "https/:///release-management-service/api/release-pipelines/:rpId?pluginValidation={{pluginValidation}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"release-management-service",
								"api",
								"release-pipelines",
								":rpId"
							],
							"query": [
								{
									"key": "pluginValidation",
									"value": "{{pluginValidation}}"
								}
							],
							"variable": [
								{
									"value": "{{rpId}}",
									"id": "rpId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "RequestBody as ReleasePipelineDetails type object"
						},
						"description": "Returns pipeline details after updating the release pipeline"
					},
					"response": []
				},
				{
					"name": "REST endpoint to Delete a Release Pipeline Model.",
					"request": {
						"url": {
							"raw": "https/:///release-management-service/api/release-pipelines/:rpId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"release-management-service",
								"api",
								"release-pipelines",
								":rpId"
							],
							"variable": [
								{
									"value": "{{rpId}}",
									"id": "rpId"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a Release Pipeline - the deletion happens using passed pipeline id parameter"
					},
					"response": []
				},
				{
					"name": "REST endpoint to Execute a Release Pipeline Model.",
					"request": {
						"url": {
							"raw": "https/:///release-management-service/api/release-pipelines/:rpId/executions",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"release-management-service",
								"api",
								"release-pipelines",
								":rpId",
								"executions"
							],
							"variable": [
								{
									"value": "{{rpId}}",
									"id": "rpId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Request body as ReleasePipelineExecutionInfo type object"
						},
						"description": "Executes a release pipeline for a given pipeline Id and returns the pipeline execution information"
					},
					"response": []
				},
				{
					"name": "REST endpoint to Export a Release Pipeline Model. ",
					"request": {
						"url": {
							"raw": "https/:///release-management-service/api/release-pipelines/:rpName",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"release-management-service",
								"api",
								"release-pipelines",
								":rpName"
							],
							"variable": [
								{
									"value": "{{rpName}}",
									"id": "rpName"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "The url to be used for exporting a release pipeline is: https://SERVER_URL/release-management-service/api/release-pipelines/{rpName}?action=export"
					},
					"response": []
				},
				{
					"name": "REST endpoint to Retrieve Detailed Status of a Release Pipeline Execution",
					"request": {
						"url": {
							"raw": "https/:///release-management-service/api/release-pipelines/:rp_id/executions/:exec_id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"release-management-service",
								"api",
								"release-pipelines",
								":rp_id",
								"executions",
								":exec_id"
							],
							"variable": [
								{
									"value": "{{rp_id}}",
									"id": "rp_id"
								},
								{
									"value": "{{exec_id}}",
									"id": "exec_id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Returns execution details of a release pipeline with the associated execution id."
					},
					"response": []
				},
				{
					"name": "REST endpoint to Cancel an Execution of Release Pipeline Model.",
					"request": {
						"url": {
							"raw": "https/:///release-management-service/api/release-pipelines/:rp_id/executions/:exec_id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"release-management-service",
								"api",
								"release-pipelines",
								":rp_id",
								"executions",
								":exec_id"
							],
							"variable": [
								{
									"value": "{{rp_id}}",
									"id": "rp_id"
								},
								{
									"value": "{{exec_id}}",
									"id": "exec_id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "The url to be used for cancelling an ongoing pipeline execution is: https://SERVER_URL/release-management-service/api/release-pipelines/{rp_id}/executions/{exec_id}/?action=cancel"
					},
					"response": []
				},
				{
					"name": "REST endpoint to Delete Execution of a Release Pipeline Model.",
					"request": {
						"url": {
							"raw": "https/:///release-management-service/api/release-pipelines/:rp_id/executions/:exec_id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"release-management-service",
								"api",
								"release-pipelines",
								":rp_id",
								"executions",
								":exec_id"
							],
							"variable": [
								{
									"value": "{{rp_id}}",
									"id": "rp_id"
								},
								{
									"value": "{{exec_id}}",
									"id": "exec_id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes execution of a release pipeline for a given pipeline id."
					},
					"response": []
				}
			]
		},
		{
			"name": "Reservation Service",
			"description": "",
			"item": [
				{
					"name": "Callback to save content.",
					"request": {
						"url": "https://{{vra-fqdn}}/reservation-service/api/content",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "the import request."
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieves a raw content for specified class id and id.",
					"request": {
						"url": {
							"raw": "https/:///reservation-service/api/content/:classId/:id?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"reservation-service",
								"api",
								"content",
								":classId",
								":id"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/reservation-service/api/preferences?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a ProviderPreferences",
					"request": {
						"url": "https://{{vra-fqdn}}/reservation-service/api/preferences",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Provider preferences object"
						},
						"description": "Create a ProviderPreferences."
					},
					"response": []
				},
				{
					"name": "Retrieves provider preferences by service type id.",
					"request": {
						"url": {
							"raw": "https/:///reservation-service/api/preferences/service/:serviceTypeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"reservation-service",
								"api",
								"preferences",
								"service",
								":serviceTypeId"
							],
							"variable": [
								{
									"value": "{{serviceTypeId}}",
									"id": "serviceTypeId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Returns provider preferences associated with the given id",
					"request": {
						"url": {
							"raw": "https/:///reservation-service/api/preferences/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"reservation-service",
								"api",
								"preferences",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Updates or creates a provider preferences",
					"request": {
						"url": {
							"raw": "https/:///reservation-service/api/preferences/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"reservation-service",
								"api",
								"preferences",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Provider preferences object"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Deletes the provider preferences",
					"request": {
						"url": {
							"raw": "https/:///reservation-service/api/preferences/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"reservation-service",
								"api",
								"preferences",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Gets all Reservations.",
					"request": {
						"url": "https://{{vra-fqdn}}/reservation-service/api/reservations?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets all Reservations with specified paging, sorting and filtering parameters. Filtering is only supported on 'name', 'reservationTypeId', 'subTenantId', 'enabled', 'tenantId' and 'reservationPolicyId' fields."
					},
					"response": []
				},
				{
					"name": "Create a Reservation entity.",
					"request": {
						"url": "https://{{vra-fqdn}}/reservation-service/api/reservations",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Reservation object to be created"
						},
						"description": "Creates a Reservation entity."
					},
					"response": []
				},
				{
					"name": "Gets all Reservations.",
					"request": {
						"url": "https://{{vra-fqdn}}/reservation-service/api/reservations/info?category={{category}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Gets all Reservations with specified paging, sorting and filtering parameters. Filtering is only supported on 'name', 'reservationTypeId', 'subTenantId', 'enabled', 'tenantId' and 'reservationPolicyId' fields."
					},
					"response": []
				},
				{
					"name": "Finds all business groups",
					"request": {
						"url": "https://{{vra-fqdn}}/reservation-service/api/reservations/subtenants?tenantId={{tenantId}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "PageAndSortRequest pagination information"
						},
						"description": "System Administrator or IaaS Administrator can query the business group list of non current tenant"
					},
					"response": []
				},
				{
					"name": "Gets the business group by its identifier",
					"request": {
						"url": {
							"raw": "https/:///reservation-service/api/reservations/subtenants/:subtenantId?tenantId={{tenantId}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"reservation-service",
								"api",
								"reservations",
								"subtenants",
								":subtenantId"
							],
							"query": [
								{
									"key": "tenantId",
									"value": "{{tenantId}}"
								}
							],
							"variable": [
								{
									"value": "{{subtenantId}}",
									"id": "subtenantId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "System Administrator or IaaS Administrator can query the business group of non current tenant"
					},
					"response": []
				},
				{
					"name": "Syncronizes all reservations",
					"request": {
						"url": {
							"raw": "https/:///reservation-service/api/reservations/sync/:providerServiceTypeId?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"reservation-service",
								"api",
								"reservations",
								"sync",
								":providerServiceTypeId"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{providerServiceTypeId}}",
									"id": "providerServiceTypeId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "PageAndSortRequest start index of the reservations to be synchronized.  E.g. if page number is 2, then the data synchronization will start from page 2"
						},
						"description": "Syncronizes all reservations from Reservation Provider to Reservation Service."
					},
					"response": []
				},
				{
					"name": "Syncronizes a specific reservation",
					"request": {
						"url": {
							"raw": "https/:///reservation-service/api/reservations/sync/:providerServiceTypeId/:reservationId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"reservation-service",
								"api",
								"reservations",
								"sync",
								":providerServiceTypeId",
								":reservationId"
							],
							"variable": [
								{
									"value": "{{providerServiceTypeId}}",
									"id": "providerServiceTypeId"
								},
								{
									"value": "{{reservationId}}",
									"id": "reservationId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Syncronizes a specific reservation from a specific Reservation Provider to the Reservation Service."
					},
					"response": []
				},
				{
					"name": "Finds all tenants",
					"request": {
						"url": "https://{{vra-fqdn}}/reservation-service/api/reservations/tenants?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "PageAndSortRequest pagination information"
						},
						"description": "Only System Administrator or IaaS Administrator is qualified"
					},
					"response": []
				},
				{
					"name": "Retrieves a Reservation.",
					"request": {
						"url": {
							"raw": "https/:///reservation-service/api/reservations/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"reservation-service",
								"api",
								"reservations",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves a Reservation for provided id."
					},
					"response": []
				},
				{
					"name": "Updates a Reservation entity.",
					"request": {
						"url": {
							"raw": "https/:///reservation-service/api/reservations/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"reservation-service",
								"api",
								"reservations",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Reservation}object to be updated"
						},
						"description": "Updates a Reservation entity."
					},
					"response": []
				},
				{
					"name": "Deletes a Reservation with the given id.",
					"request": {
						"url": {
							"raw": "https/:///reservation-service/api/reservations/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"reservation-service",
								"api",
								"reservations",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes a Reservation with the given id"
					},
					"response": []
				}
			]
		},
		{
			"name": "Software Service",
			"description": "",
			"item": [
				{
					"name": "Get TaskDescriptors",
					"request": {
						"url": "https://{{vra-fqdn}}/software-service/api/admin/taskdescriptors?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get all task descriptors."
					},
					"response": []
				},
				{
					"name": "Agent Registration with the Software Service",
					"request": {
						"url": "https://{{vra-fqdn}}/software-service/api/agentcertificate/requestkey",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The software agent registration request."
						},
						"description": "Accepts an Agent's pre-registration secret and officially registers the agent"
					},
					"response": []
				},
				{
					"name": "Submit Composition Service Request",
					"request": {
						"url": "https://{{vra-fqdn}}/software-service/api/composition/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Request data, including software information."
						},
						"description": "Provision of a software component type"
					},
					"response": []
				},
				{
					"name": "Get Composition Service Request Status",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/composition/requests/:requestId/statusdetails",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"composition",
								"requests",
								":requestId",
								"statusdetails"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get status of a software component type"
					},
					"response": []
				},
				{
					"name": "Create or Update Software Content",
					"request": {
						"url": "https://{{vra-fqdn}}/software-service/api/content",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The id of the instance."
						},
						"description": "Callback to save content."
					},
					"response": []
				},
				{
					"name": "Get Software Content",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/content/:classId/:id?={{}}",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"content",
								":classId",
								":id"
							],
							"query": [
								{
									"key": "",
									"value": "{{}}"
								}
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get raw content for specified class id and id."
					},
					"response": []
				},
				{
					"name": "Get a set of data for the specified object",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/data-service/data/:classId/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"data-service",
								"data",
								":classId",
								":id"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get a set of data for the specified object."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of possible values for a given type of object",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/data-service/list/:classId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"data-service",
								"list",
								":classId",
								"default"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of possible values for a given type of object."
					},
					"response": []
				},
				{
					"name": "Retrieves the list of possible values for a given type of object",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/data-service/list/:classId/types/:typeFilter",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"data-service",
								"list",
								":classId",
								"types",
								":typeFilter"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the list of possible values for a given type of object."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object class",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/data-service/schema/:classId/default",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"default"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the schema for the specified object class."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/data-service/schema/:classId/default/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"default",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/data-service/schema/:classId/default/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"default",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/data-service/schema/:classId/instances/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This returns the schema of a particular type adjusted to the state of a specific instance.."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/data-service/schema/:classId/instances/:id/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/data-service/schema/:classId/instances/:id/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"instances",
								":id",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{id}}",
									"id": "id"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the schema for the specified object type",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/data-service/schema/:classId/types/:typeFilter",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "This returns the schema of a particular type within a class of object."
					},
					"response": []
				},
				{
					"name": "Get the state of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/data-service/schema/:classId/types/:typeFilter/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter",
								"update"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the state of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Get the permissible values of a field in the specified schema",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/data-service/schema/:classId/types/:typeFilter/:fieldId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"data-service",
								"schema",
								":classId",
								"types",
								":typeFilter",
								":fieldId",
								"values"
							],
							"variable": [
								{
									"value": "{{classId}}",
									"id": "classId"
								},
								{
									"value": "{{typeFilter}}",
									"id": "typeFilter"
								},
								{
									"value": "{{fieldId}}",
									"id": "fieldId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the permissible values of a field in the specified schema."
					},
					"response": []
				},
				{
					"name": "Submit Composition Service Request",
					"request": {
						"url": "https://{{vra-fqdn}}/software-service/api/requests",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The composition request."
						},
						"description": "Provision of a software component type"
					},
					"response": []
				},
				{
					"name": "Get SoftwareResourceRequest",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/resourcerequests/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"resourcerequests",
								":id"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get software resource request for id."
					},
					"response": []
				},
				{
					"name": "Get SoftwareRequestState",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/resourcerequests/:id/status",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"resourcerequests",
								":id",
								"status"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get status for software resource request id."
					},
					"response": []
				},
				{
					"name": "Get ScriptTypes",
					"request": {
						"url": "https://{{vra-fqdn}}/software-service/api/scripttypes?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get all script types."
					},
					"response": []
				},
				{
					"name": "Get ScriptType for file extension",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/scripttypes/fileextension/:fileExtension",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"scripttypes",
								"fileextension",
								":fileExtension"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get ScriptType for file extension."
					},
					"response": []
				},
				{
					"name": "Get ScriptType",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/scripttypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"scripttypes",
								":id"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get script type for id."
					},
					"response": []
				},
				{
					"name": "Get SoftwareComponentTypeInfos",
					"request": {
						"url": "https://{{vra-fqdn}}/software-service/api/softwarecomponenttypes?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get all software component types descriptors."
					},
					"response": []
				},
				{
					"name": "Create SoftwareComponentType",
					"request": {
						"url": "https://{{vra-fqdn}}/software-service/api/softwarecomponenttypes",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The softwareComponentType."
						},
						"description": "Create software component type."
					},
					"response": []
				},
				{
					"name": "Get SoftwareComponentType",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/softwarecomponenttypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"softwarecomponenttypes",
								":id"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get software component type by id."
					},
					"response": []
				},
				{
					"name": "Update SoftwareComponentType",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/softwarecomponenttypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"softwarecomponenttypes",
								":id"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The SoftwareComponentType contents."
						},
						"description": "Update software component type by id."
					},
					"response": []
				},
				{
					"name": "Delete SoftwareComponentType",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/softwarecomponenttypes/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"softwarecomponenttypes",
								":id"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete software component type by id."
					},
					"response": []
				},
				{
					"name": "Update SoftwareComponentType PublishStatus",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/softwarecomponenttypes/:id/status",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"softwarecomponenttypes",
								":id",
								"status"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The PublishStatus."
						},
						"description": "Update the publsh status of a given software component type."
					},
					"response": []
				},
				{
					"name": "Pre-register Node",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/tenants/:tenantId/nodes",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"tenants",
								":tenantId",
								"nodes"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The nodeData specifying the Node"
						},
						"description": "Pre-register node with configuration and create secret for inclusion in VM creation."
					},
					"response": []
				},
				{
					"name": "Get Node",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/tenants/:tenantId/nodes/:nodeId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"tenants",
								":tenantId",
								"nodes",
								":nodeId"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get node for id."
					},
					"response": []
				},
				{
					"name": "Unregister Node",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/tenants/:tenantId/nodes/:nodeId/unregister",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"tenants",
								":tenantId",
								"nodes",
								":nodeId",
								"unregister"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Unregister node for id in order to permanently disassociate software agent."
					},
					"response": []
				},
				{
					"name": "Create SoftwareResourceRequest",
					"request": {
						"url": {
							"raw": "https/:///software-service/api/tenants/:tenantId/softwarecomponenttypes/:softwareComponentTypeId/resources",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"software-service",
								"api",
								"tenants",
								":tenantId",
								"softwarecomponenttypes",
								":softwareComponentTypeId",
								"resources"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "The desired resource state map"
						},
						"description": "Create software resource request "
					},
					"response": []
				}
			]
		},
		{
			"name": "Work Item Service",
			"description": "Folder for api",
			"item": [
				{
					"name": "Retrieve the WorkItemAssignee, including delegates, for the 'current' user.",
					"request": {
						"url": "https://{{vra-fqdn}}/work-item-service/api/assignees/user/delegates",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the WorkItemAssignee, including delegates, for the 'current' user."
					},
					"response": []
				},
				{
					"name": "Creates or updates the specified WorkItemAssignee.",
					"request": {
						"url": "https://{{vra-fqdn}}/work-item-service/api/assignees/user/delegates",
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Creates or updates the specified WorkItemAssignee."
					},
					"response": []
				},
				{
					"name": "Creates or updates the specified WorkItemAssignee.",
					"request": {
						"url": "https://{{vra-fqdn}}/work-item-service/api/assignees/user/delegates",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Creates or updates the specified WorkItemAssignee."
					},
					"response": []
				},
				{
					"name": "Delete the current WorkItemAssignee.",
					"request": {
						"url": "https://{{vra-fqdn}}/work-item-service/api/assignees/user/delegates/reset",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete the current WorkItemAssignee."
					},
					"response": []
				},
				{
					"name": "Retrieve the list of delegates for the given principal/user/group.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/assignees/:principalId/delegates",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"assignees",
								":principalId",
								"delegates"
							],
							"variable": [
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the list of delegates for the given principal/user/group."
					},
					"response": []
				},
				{
					"name": "Update the WorkItemAssignee for the given principal",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/assignees/:principalId/delegates",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"assignees",
								":principalId",
								"delegates"
							],
							"variable": [
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Update the WorkItemAssignee for the given principal"
					},
					"response": []
				},
				{
					"name": "Update the WorkItemAssignee for the given principal",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/assignees/:principalId/delegates",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"assignees",
								":principalId",
								"delegates"
							],
							"variable": [
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Update the WorkItemAssignee for the given principal"
					},
					"response": []
				},
				{
					"name": "Remove the given principalId from the set of valid assignees for a workitem.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/assignees/:principalId/delegates/reset",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"assignees",
								":principalId",
								"delegates",
								"reset"
							],
							"variable": [
								{
									"value": "{{principalId}}",
									"id": "principalId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Remove the given principalId from the set of valid assignees for a workitem."
					},
					"response": []
				},
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/work-item-service/api/icons?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Creates a WorkItemActionIcon.",
					"request": {
						"url": "https://{{vra-fqdn}}/work-item-service/api/icons",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Creates a WorkItemActionIcon."
					},
					"response": []
				},
				{
					"name": "Get the image content of the specified WorkItemActionIcon.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/icons/images/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"icons",
								"images",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Get the image content of the specified WorkItemActionIcon."
					},
					"response": []
				},
				{
					"name": "Returns the resource associated with the given id",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/icons/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"icons",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Updates the WorkItemActionIcon.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/icons/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"icons",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Update the WorkItemActionIcon which corresponds to the given id."
					},
					"response": []
				},
				{
					"name": "Deletes the WorkItemActionIcon.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/icons/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"icons",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes the WorkItemActionIcon."
					},
					"response": []
				},
				{
					"name": "Retrieve a list of WorkItem.",
					"request": {
						"url": "https://{{vra-fqdn}}/work-item-service/api/workitems?userItemsOnly={{userItemsOnly}}&page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a list of WorkItem."
					},
					"response": []
				},
				{
					"name": "Create a set of WorkItems",
					"request": {
						"url": "https://{{vra-fqdn}}/work-item-service/api/workitems",
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Create a set of WorkItems"
					},
					"response": []
				},
				{
					"name": "Create a new WorkItem for the given service.",
					"request": {
						"url": "https://{{vra-fqdn}}/work-item-service/api/workitems",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Create a new WorkItem for the given service."
					},
					"response": []
				},
				{
					"name": "Completes the WorkItem if it is still active.",
					"request": {
						"url": "https://{{vra-fqdn}}/work-item-service/api/workitems/notifications",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Completes the WorkItem if it is still active."
					},
					"response": []
				},
				{
					"name": "Returns a page of the resources",
					"request": {
						"url": "https://{{vra-fqdn}}/work-item-service/api/workitems/types?page={{page}}&limit={{limit}}&$orderby={{$orderby}}&$top={{$top}}&$skip={{$skip}}&$filter={{$filter}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a new WorkItemType for a given service provider.",
					"request": {
						"url": "https://{{vra-fqdn}}/work-item-service/api/workitems/types",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Create a new WorkItemType for a given service provider."
					},
					"response": []
				},
				{
					"name": "Retrieve the details of an existing WorkItemType by id.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/workitems/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"workitems",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the details of an existing WorkItemType by id."
					},
					"response": []
				},
				{
					"name": "Updates an existing WorkItemType by id.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/workitems/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"workitems",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Updates an existing WorkItemType by id."
					},
					"response": []
				},
				{
					"name": "Deletes an existing WorkItemType by id.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/workitems/types/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"workitems",
								"types",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Deletes an existing WorkItemType by id."
					},
					"response": []
				},
				{
					"name": "Retrieve the details of the given WorkItem.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/workitems/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"workitems",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the details of the given WorkItem."
					},
					"response": []
				},
				{
					"name": "Update the WorkItem which corresponds to the given Id.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/workitems/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"workitems",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Update the WorkItem which corresponds to the given Id. <ul> <li>A work item may be updated by:</li> <ul> <li>One of its assignees</li> <li>A delegate of one of its assignees</li> </ul> <li>The application that created the work item is notified of all updates.</li> <li>Client applications must provide a REST service to receive these updates. This service will be passed:</li> <ul> <li>The updated form data for the work item as a property map</li> <li>Useful metadata (e.g. who updated the work item and when) in a fixed schema</li> </ul> </ul>   <h3>Sequence Diagram</h3> <img src='../../workitem-service/api/docs/update-workitem.png'\\>"
					},
					"response": []
				},
				{
					"name": "Delete the WorkItem corresponding to the given id.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/workitems/:id",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"workitems",
								":id"
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Delete the WorkItem corresponding to the given id."
					},
					"response": []
				},
				{
					"name": "Retrieve a list of WorkItem.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/workitems/:id/children?page={{page}}&limit={{limit}}&=",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"workitems",
								":id",
								"children"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								},
								{
									"key": "",
									"value": ""
								}
							],
							"variable": [
								{
									"value": "{{id}}",
									"id": "id"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a list of WorkItem."
					},
					"response": []
				},
				{
					"name": "Retrieve the WorkItem Form from for the selected WorkItem from the corresponding Service Provider. ",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/workitems/:id/form",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"workitems",
								":id",
								"form"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve the WorkItem Form from for the selected WorkItem from the corresponding Service Provider. If the current user has WRITE access to this form, The submission form is returned, otherwise the details form is returned."
					},
					"response": []
				},
				{
					"name": "Retrieves the metadata of multiple dynamic elements in single call. It combines the retrieval of element's ElementState and the list of permissible values for each element.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/workitems/:id/form/update",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"workitems",
								":id",
								"form",
								"update"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieves the metadata of multiple dynamic elements in single call. It combines the retrieval of element's ElementState and the list of permissible values for each element."
					},
					"response": []
				},
				{
					"name": "Retrieve a set of form data for the specified workItem and formElement. ",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/workitems/:id/form/:elementId/values",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"workitems",
								":id",
								"form",
								":elementId",
								"values"
							],
							"variable": [
								{
									"value": "{{}}",
									"id": ""
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Retrieve a set of form data for the specified workItem and formElement."
					},
					"response": []
				},
				{
					"name": "Cancel the specified WorkItem.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/workitems/:workItemId/actions/cancel",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"workitems",
								":workItemId",
								"actions",
								"cancel"
							],
							"variable": [
								{
									"value": "{{workItemId}}",
									"id": "workItemId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Cancel the specified WorkItem. <ul> <li>Prevents a work item from being updated or completed The work item enters the 'ancelled'' state</li> <li>A work item may only be cancelled by a solution user. I.e. the application that created the work item.</li> <li>A work item would be cancelled when it is no longer required</li> <ul> <li>This would be determined by the client application based on its rules</li> <li>For example: the approval service may cancel any outstanding 'Approval' work items once one of the approvers has rejected the approval.</li> </ul> <li>Work items may not be cancelled by non-solution users.</li> <li>Once aborted a work item may not be:</li> <ul> <li>Reactivated</li> <li>Updated</li> </ul> <li>A cancelled work item is not deleted</li> <li>A work item's data may not be updated when aborting a work item</li> <li>The client application will not be notified when a work item is cancelled.</li> <li>An audit trail message is written when a work item is cancelled. The cancellation API should support passing a reason why a work item has been cancelled which is also part of the audit trail.</li> </ul>  If an application wished to offer a 'Cancel' action for a work item, it would need to: <ul> <li>Define such an action on the work item type</li> <li>Respond to this action when the item is completed</li> </ul>"
					},
					"response": []
				},
				{
					"name": "Complete a WorkItem.",
					"request": {
						"url": {
							"raw": "https/:///work-item-service/api/workitems/:workItemId/actions/:actionId",
							"auth": {},
							"host": [
								"https"
							],
							"path": [
								":",
								"",
								"",
								"work-item-service",
								"api",
								"workitems",
								":workItemId",
								"actions",
								":actionId"
							],
							"variable": [
								{
									"value": "{{workItemId}}",
									"id": "workItemId"
								},
								{
									"value": "{{actionId}}",
									"id": "actionId"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": "Complete a WorkItem. <ul>  <li>A work item may only be completed by:</li>  <ul>  <li>One of its assignees</li>  <li>A delegate of one of its assignees</li>  <li>A privileged, administrator user</li>  </ul>  <li>A work item may be completed by any of the actions associated with its work item type</li>  <li>Work items may be completed via an incoming notification (e.g. email) This may be done by  replying to an email sent by the work item queue.</li> <li>The client application will be  notified when a work item is completed.</li> <li>The client application must provide a REST  service to be notified of completion. The service will be passed:</li>  <ul>  <li>The form data of the work item that has been completed</li>  <li>The action that completed the work item</li>  <li>Useful work item metadata</li>  </ul>  </ul>   <h3>Sequence Diagram</h3> <img src='../../workitem-service/api/docs/complete-workitem.png'\\>"
					},
					"response": []
				}
			]
		}
	]
}